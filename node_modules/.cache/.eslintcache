[{"/home/shubham/Projects/Transgazination_Project/TG_UI/src/index.js":"1","/home/shubham/Projects/Transgazination_Project/TG_UI/src/reportWebVitals.js":"2","/home/shubham/Projects/Transgazination_Project/TG_UI/src/App.js":"3","/home/shubham/Projects/Transgazination_Project/TG_UI/src/CustomerRoutes.js":"4","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/Header.js":"5","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/SideBar.js":"6","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/Protected.js":"7","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/Not_support.js":"8","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Home.js":"9","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/RightSideBar.js":"10","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Protected_Ui.js":"11","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan02/BeliverConcept.js":"12","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan02/excel.js":"13","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/Protected.js":"14","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/AuthUrl.js":"15","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/Login.js":"16","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/Dashboard.js":"17","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Rebirth.js":"18","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/AddUser.js":"19","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Session01.js":"20","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/Cutomer.js":"21","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/MainPage.js":"22","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan05/parivartan5.js":"23","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan04/MainPage.js":"24","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan05/Dashboard.js":"25","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/StepProcessTable.js":"26","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/VilakshanMap.js":"27","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan06/Naisthya&Prayaan.js":"28","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan10/GoalDriller.js":"29","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan06/Prayaan.js":"30","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan08/ShulkLak.js":"31","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan07/DrishtiCal.js":"32","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/SunEditor.js":"33","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/ModalSubmit.js":"34","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan07/CustomerTable.js":"35","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan06/NaisthyaTable.js":"36","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan10/goal_drillPage.js":"37","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/apiServices/reflectionapi.js":"38","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/vilakshanMapTab2.js":"39","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/vilakshanMapTab1.js":"40","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/StepPDFTable.js":"41","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/StepTable.js":"42","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan04/UrjaChar.js":"43","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan10/RawTable.js":"44","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan04/busiPlayground.js":"45","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan04/NonNegotiables.js":"46","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan05/vilakshan.js":"47","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/finalizeCompetition.js":"48","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/strategyMap.js":"49","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/compettionSheet.js":"50","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/valueProposition.js":"51","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/plyground.js":"52","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/customerSegment.js":"53","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/tab2table.js":"54","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/tabs.js":"55","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/CustomerTable.js":"56","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/components/DragHandle.js":"57","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/data.js":"58","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/components/styles.js":"59","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Validate.js":"60","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Discovery.js":"61","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Reflection.js":"62","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/accrodianinnovation.js":"63","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/accrodianconcept.js":"64","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/components/Select.js":"65","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/accrodion.js":"66","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/apiServices/rebirthCommon.js":"67","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/apiServices/rebirthapi.js":"68","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/apiServices/discovery.js":"69","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/ProgressBar.js":"70","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/Select.js":"71","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/data.js":"72"},{"size":500,"mtime":1620369558000,"results":"73","hashOfConfig":"74"},{"size":362,"mtime":499162500000,"results":"75","hashOfConfig":"74"},{"size":1791,"mtime":1647607482698,"results":"76","hashOfConfig":"74"},{"size":5752,"mtime":1637303173000,"results":"77","hashOfConfig":"74"},{"size":2265,"mtime":1647245434365,"results":"78","hashOfConfig":"74"},{"size":7476,"mtime":1647245434433,"results":"79","hashOfConfig":"74"},{"size":642,"mtime":1632205309000,"results":"80","hashOfConfig":"74"},{"size":1254,"mtime":1634641977000,"results":"81","hashOfConfig":"74"},{"size":3307,"mtime":1635135683000,"results":"82","hashOfConfig":"74"},{"size":387,"mtime":1635570853000,"results":"83","hashOfConfig":"74"},{"size":928,"mtime":1632403725000,"results":"84","hashOfConfig":"74"},{"size":43327,"mtime":1647606003432,"results":"85","hashOfConfig":"74"},{"size":4231,"mtime":1632395065000,"results":"86","hashOfConfig":"74"},{"size":921,"mtime":1632371250000,"results":"87","hashOfConfig":"74"},{"size":3693,"mtime":1647245434369,"results":"88","hashOfConfig":"74"},{"size":8066,"mtime":1647245434433,"results":"89","hashOfConfig":"74"},{"size":48383,"mtime":1647245434365,"results":"90","hashOfConfig":"74"},{"size":29247,"mtime":1647245434433,"results":"91","hashOfConfig":"74"},{"size":56031,"mtime":1647245434365,"results":"92","hashOfConfig":"74"},{"size":5957,"mtime":1647245434433,"results":"93","hashOfConfig":"74"},{"size":4241,"mtime":1647248895251,"results":"94","hashOfConfig":"74"},{"size":6351,"mtime":1639744737000,"results":"95","hashOfConfig":"74"},{"size":2945,"mtime":1634799838000,"results":"96","hashOfConfig":"74"},{"size":4431,"mtime":1634799103000,"results":"97","hashOfConfig":"74"},{"size":48381,"mtime":1647245434365,"results":"98","hashOfConfig":"74"},{"size":37911,"mtime":1647245434365,"results":"99","hashOfConfig":"74"},{"size":5761,"mtime":1647245434313,"results":"100","hashOfConfig":"74"},{"size":36251,"mtime":1647245434321,"results":"101","hashOfConfig":"74"},{"size":2967,"mtime":1634797377000,"results":"102","hashOfConfig":"74"},{"size":44322,"mtime":1647245434365,"results":"103","hashOfConfig":"74"},{"size":80039,"mtime":1647245434433,"results":"104","hashOfConfig":"74"},{"size":50319,"mtime":1647245434365,"results":"105","hashOfConfig":"74"},{"size":2330,"mtime":1634532887000,"results":"106","hashOfConfig":"74"},{"size":410,"mtime":1631345869000,"results":"107","hashOfConfig":"74"},{"size":14216,"mtime":1647245434365,"results":"108","hashOfConfig":"74"},{"size":1511,"mtime":1632402273000,"results":"109","hashOfConfig":"74"},{"size":14841,"mtime":1647245434365,"results":"110","hashOfConfig":"74"},{"size":446,"mtime":1647245434313,"results":"111","hashOfConfig":"74"},{"size":23595,"mtime":1647493819924,"results":"112","hashOfConfig":"74"},{"size":21332,"mtime":1647604277261,"results":"113","hashOfConfig":"74"},{"size":2519,"mtime":1647245434433,"results":"114","hashOfConfig":"74"},{"size":15820,"mtime":1647245434365,"results":"115","hashOfConfig":"74"},{"size":67279,"mtime":1647245434365,"results":"116","hashOfConfig":"74"},{"size":21334,"mtime":1647245434365,"results":"117","hashOfConfig":"74"},{"size":20626,"mtime":1647245434313,"results":"118","hashOfConfig":"74"},{"size":149436,"mtime":1647499243528,"results":"119","hashOfConfig":"74"},{"size":58506,"mtime":1647245434433,"results":"120","hashOfConfig":"74"},{"size":9609,"mtime":1647245434365,"results":"121","hashOfConfig":"74"},{"size":92861,"mtime":1647670597196,"results":"122","hashOfConfig":"74"},{"size":17427,"mtime":1647245434365,"results":"123","hashOfConfig":"74"},{"size":17182,"mtime":1647245434433,"results":"124","hashOfConfig":"74"},{"size":20499,"mtime":1647245434365,"results":"125","hashOfConfig":"74"},{"size":24886,"mtime":1647245434313,"results":"126","hashOfConfig":"74"},{"size":30300,"mtime":1647337557036,"results":"127","hashOfConfig":"74"},{"size":16413,"mtime":1647338165523,"results":"128","hashOfConfig":"74"},{"size":30724,"mtime":1647516708912,"results":"129","hashOfConfig":"74"},{"size":810,"mtime":1641793310000,"results":"130","hashOfConfig":"74"},{"size":22522,"mtime":1647347087914,"results":"131","hashOfConfig":"74"},{"size":709,"mtime":1641792838000,"results":"132","hashOfConfig":"74"},{"size":106216,"mtime":1647245434321,"results":"133","hashOfConfig":"74"},{"size":30237,"mtime":1647245434365,"results":"134","hashOfConfig":"74"},{"size":26743,"mtime":1647245434365,"results":"135","hashOfConfig":"74"},{"size":13763,"mtime":1647336083013,"results":"136","hashOfConfig":"74"},{"size":13450,"mtime":1647335186218,"results":"137","hashOfConfig":"74"},{"size":1118,"mtime":1629978790000,"results":"138","hashOfConfig":"74"},{"size":13180,"mtime":1647334965712,"results":"139","hashOfConfig":"74"},{"size":448,"mtime":1647245434369,"results":"140","hashOfConfig":"74"},{"size":438,"mtime":1647245434365,"results":"141","hashOfConfig":"74"},{"size":442,"mtime":1647245434365,"results":"142","hashOfConfig":"74"},{"size":720,"mtime":1629965684000,"results":"143","hashOfConfig":"74"},{"size":0,"mtime":1624302430000,"results":"144","hashOfConfig":"74"},{"size":22522,"mtime":1647502480826,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"ba3bg8",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"148"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"148"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"148"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"148"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"148"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"148"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"148"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"148"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"148"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"148"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"148"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"148"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"148"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"148"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"148"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"148"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"148"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"148"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":71,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"148"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"148"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"148"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"148"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"148"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":74,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"148"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"148"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":92,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"148"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"148"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"148"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"148"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"148"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"148"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"148"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":71,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"148"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"148"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"148"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"148"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"148"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"148"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"148"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"/home/shubham/Projects/Transgazination_Project/TG_UI/src/index.js",[],["348","349"],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/reportWebVitals.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/App.js",["350"],"import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport CustomerRoutes from \"./CustomerRoutes\";\nimport Header from \"./components/Header\";\nimport \"./pages/Parivartan.css\";\nfunction App() {\n  return (\n\n      <HashRouter>\n        {/* <Header /> */}\n        <CustomerRoutes />\n      </HashRouter>\n  );\n}\nexport default App;\n\n\n\n// import React, { useState } from 'react';\n// import { EditorState } from 'draft-js';\n// import { Editor } from 'react-draft-wysiwyg';\n// import { convertToHTML } from 'draft-convert';\n// import DOMPurify from 'dompurify';\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import './App.css';\n// const App = () => {\n//   const [editorState, setEditorState] = useState(\n//     () => EditorState.createEmpty(),\n//   );\n//   const  [convertedContent, setConvertedContent] = useState(null);\n//   const handleEditorChange = (state) => {\n//     setEditorState(state);\n//     convertContentToHTML();\n//   }\n//   const convertContentToHTML = () => {\n//     let currentContentAsHTML = convertToHTML(editorState.getCurrentContent());\n//     setConvertedContent(currentContentAsHTML);\n//   }\n//   const createMarkup = (html) => {\n//     return  {\n//       __html: DOMPurify.sanitize(html)\n//     }\n//   }\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         Rich Text Editor Example\n//       </header>\n//       <Editor\n//         editorState={editorState}\n//         onEditorStateChange={handleEditorChange}\n//         wrapperClassName=\"wrapper-class\"\n//         editorClassName=\"editor-class\"\n//         toolbarClassName=\"toolbar-class\"\n//       />\n//       <div className=\"preview\" dangerouslySetInnerHTML={createMarkup(convertedContent)}></div>\n//     </div>\n//   )\n// }\n// export default App;","/home/shubham/Projects/Transgazination_Project/TG_UI/src/CustomerRoutes.js",["351","352","353","354","355","356","357","358"],"import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\r\nimport SideBar from \"./pages/SideBar\";\r\nimport BeliverConcept from \"./pages/Parivartan02/BeliverConcept\";\r\nimport AuthUrl from \"./pages/Admin/AuthUrl\";\r\nimport Header from \"./components/Header\";\r\nimport Parivartan01 from \"./pages/Parivartan01/Session01\";\r\nimport Rebirth from \"./pages/Parivartan01/Rebirth\";\r\nimport Customer from \"./pages/Parivartan03/Cutomer\";\r\nimport BusinessPage from \"./pages/BuisnessModel/MainPage\";\r\nimport BusinessModel from \"./pages/Parivartan04/MainPage\";\r\nimport Parivartan5Tabs from \"./pages/Parivartan05/parivartan5\";\r\nimport Dashboard from \"./pages/Parivartan05/Dashboard\";\r\nimport Dash from \"./pages/Admin/Dashboard\";\r\nimport Login from \"./pages/Admin/Login\";\r\nimport ProtectedRoute from \"./components/Protected\";\r\nimport StepProcessTable from \"./pages/Parivartan09/StepProcessTable\";\r\n\r\nimport Prayaan from \"./pages/Parivartan06/Prayaan\";\r\nimport NaisthyaPrayaan from \"./pages/Parivartan06/Naisthya&Prayaan\";\r\nimport DrishtiCal from \"./pages/Parivartan07/DrishtiCal\";\r\nimport ShulkLak from \"./pages/Parivartan08/ShulkLak\";\r\nimport VilakshanMap from \"./pages/Parivartan09/VilakshanMap\";\r\nimport GoalDriller from \"./pages/Parivartan10/GoalDriller\";\r\nimport Home from \"./pages/Home\";\r\n\r\nimport Excel from \"./pages/Parivartan02/excel\"\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Protected from \"./pages/Admin/Protected\";\r\nimport Protected_Ui from \"./pages/Protected_Ui\";\r\nimport Not_support from \"./components/Not_support\";\r\nimport AddUser from \"./pages/Admin/AddUser\";\r\n\r\nimport RightSidebar from \"./pages/RightSideBar\";\r\n\r\nconst MasterAdminRouting = () => {\r\n    // const history = useHistory();\r\n    // const location = useLocation();\r\n    // const [loggedIn, setloggedIn] = useState(true);\r\n    // useEffect(() => {  var s_id = localStorage.getItem('tr_id')\r\n    // if (!id) {\r\n    //   history.push(\"Not_support\");\r\n    // }\r\n    //     const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    //     if (user && loggedIn) {\r\n    //         history.push(\"/\");\r\n    //         setloggedIn(false)\r\n    //     }\r\n    //     if (location.pathname) {\r\n    //         history.push(location.pathname)\r\n    //     }\r\n    //     else {\r\n    //         history.push(\"/\")\r\n    //     }\r\n    // }, []);\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/checkemail/:fname\">\r\n                <SideBar data={<AuthUrl />} data1={<Header />} />\r\n            </Route>\r\n            <Route path='/Admin/admin-login' component={Login}>\r\n                {/* <Dash /> */}\r\n                {/* <SideBar data={<Dash />} data1={<Header />} /> */}\r\n            </Route>\r\n            <Route path='/Not_support' component={Not_support} />\r\n            <Protected exact path='/Admin/admin-AddUser' component={AddUser} />\r\n\r\n            <Protected exact path='/Admin/admin-dashboard' component={Dash} />\r\n            {/* <Protected exact path=\"/Admin/admin-dashboard\" data1={<Header />} >\r\n            </Protected> */}\r\n\r\n            <Route exact path=\"/beliver-concept\">\r\n                <SideBar data={<BeliverConcept />} data1={<Header />} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/\">\r\n                <SideBar data={<Home />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/home\">\r\n                <SideBar data={<Home />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/excel\">\r\n                <SideBar data={<Excel />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/Soch-Spiritual\">\r\n                <SideBar data={<Parivartan01 />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/rebirth\">\r\n                <SideBar data={<Rebirth />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/customer\">\r\n                <SideBar data={<Customer />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/value\">\r\n                <SideBar data={<BusinessPage />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/playground\">\r\n                <SideBar data={<BusinessModel />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/vilakshan\">\r\n                <SideBar data={<Parivartan5Tabs />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/naisthya\">\r\n                <SideBar data={<NaisthyaPrayaan />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/drishti\">\r\n                <SideBar data={<DrishtiCal />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/shulk-lakshya\">\r\n                <SideBar data={<ShulkLak />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/prayaan\">\r\n                <SideBar data={<Prayaan />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/processes\">\r\n                <SideBar data={<VilakshanMap />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/dashboard\">\r\n                <SideBar data={<Dashboard />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/goal-driller\">\r\n                <SideBar data={<GoalDriller />} data1={<Header />} />\r\n            </Route>\r\n            <Route exact path=\"/StepProcessTable\">\r\n                <SideBar data={<StepProcessTable />} data1={<Header />} />\r\n            </Route>\r\n\r\n\r\n\r\n            {/* For Admin */}\r\n            {/* <Route path='/Admin/admin-dashboard' component={Dash}>\r\n            </Route> */}\r\n\r\n\r\n        </Switch>\r\n    );\r\n};\r\nexport default MasterAdminRouting","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/Header.js",["359","360","361","362","363"],"import React, { useEffect, useState } from 'react'\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\n\nfunction Header() {\n    const [beliverName, setbeliverName] = useState(\"\");\n    var s_id = localStorage.getItem('tr_id')\n    const history = useHistory();\n\n    const logOut = () => {\n        localStorage.removeItem(\"tr_id\");\n        window.location.replace(\"https://transganization.com/login/\");\n        // history.push(\"Not_support\")\n    }\n\n\n    const GetallRecords = () => {\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\",\n        };\n        fetch(\n            `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\n            requestOptionsget\n        )\n            .then((response) => response.json())\n            .then((resData) => {\n                console.log(resData.data);\n                if (s_id) {\n                    setbeliverName(resData.data.beliver_name);\n                }\n\n            });\n\n    }\n\n    useEffect(() => {\n        GetallRecords();\n    })\n    return (\n        <section className=\"content navbar-brand bg-bg-white\" style={{ backgroundColor: \"white\" }}>\n            <div className=\"container-fluid bg-bg-white\" >\n                <div className=\"row bg-bg-white justify-content-center\" >\n\n                    <div class=\"col-8\">\n                        <b>Welcome To Parivartan Dashboard</b>\n\n                    </div>\n                    <div class=\"col-3  align-center p-2\">\n                        <img src=\"../../assets/images/authorplaceholder.jpg\" width=\"40\" alt=\"Transganization\" />\n                        <b className=\"m-2\">{beliverName} </b>\n\n                    </div>\n\n                    <div class=\"col-1 align-center\" style={{ borderLeft: \"1px solid #C9C9C8\", height: \"60px\" }} >\n                        <i style={{ cursor: \"pointer\", fontSize: \"24px\" }} onClick={logOut} class=\"zmdi zmdi-power p-3\"></i>\n                    </div>\n\n\n                </div>\n\n            </div >\n        </section >\n\n    )\n}\n\nexport default Header\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/SideBar.js",["364","365","366","367","368","369","370","371","372","373","374","375"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { useHistory, Link, NavLink } from 'react-router-dom'\r\nimport Header from '../components/Header';\r\n\r\n\r\nexport const Home = (props) => {\r\n    var s_id = localStorage.getItem('tr_id')\r\n\r\n    const history = useHistory();\r\n    let [Modules, setModules] = useState(0)\r\n    const [classState, setclassState] = useState(\"\")\r\n    useEffect(() => {\r\n        if (!s_id) {\r\n            history.push(\"Not_support\");\r\n        }\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptions = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n        };\r\n        fetch(`http://localhost:9002/masters/validate/` + `${s_id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                let MyValues = resData.data;\r\n                MyValues.map((item) => {\r\n                    setModules(item.submit_flag)\r\n                })\r\n            })\r\n            .catch((error) => console.log(\"error\", error))\r\n    }, [])\r\n\r\n    const p_disc = () => {\r\n        setclassState(\"menu-toggle actvl waves-effect waves-block toggled\")\r\n\r\n        // alert(e.target.name)\r\n        // var cls = e.target.className;\r\n        // if (e.target.name != \"pdisc\") {\r\n        //     cls = \"menu-toggle\";\r\n        //     setclassState(cls)\r\n        //     alert(classState)\r\n        // } else {\r\n        //     alert(e.target.name)\r\n\r\n        //     setclassState(\"menu-toggle waves-effect waves-block toggled text-primary\")\r\n        //     alert(classState)\r\n\r\n        // }\r\n    }\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <aside id=\"leftsidebar\" className=\"sidebar\">\r\n                <div className=\"navbar-brand\">\r\n                    <button className=\"btn-menu ls-toggle-btn\" type=\"button\"><i className=\"zmdi zmdi-menu\"></i></button>\r\n                    <a href=\"/\"><img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" /><span className=\"m-l-10\"></span></a>\r\n                </div>\r\n                <div className=\"menu\">\r\n                    <ul className=\"list\">\r\n                        <li className=\" open\" ><a className=\" actvl \" href onClick={() => { history.push(\"/\") }}><span>Dashboard</span></a></li>\r\n                        <li ><a className=\"menu-toggle actvl \" name=\"pdisc\" ><span>Purpose Discovery</span></a>\r\n                            <ul className=\"ml-menu\">\r\n                                {/* <li><a href onClick={() => { history.push(\"/Soch-Spiritual\") }}  >Soch - Spiritual Foundations </a></li> */}\r\n                                <li >\r\n                                    <NavLink exact to=\"/Soch-Spiritual\" activeClassName=\"text-primary font-weight-bold\"\r\n                                    >\r\n                                        Soch - Spiritual Foundations\r\n                                    </NavLink>                                </li>\r\n\r\n                            </ul>\r\n                        </li>\r\n                        {/* <li ><a className=\"menu-toggle actvl \" ><span>Customer</span></a> */}\r\n                        <li ><a className=\"menu-toggle actvl\" onClick={p_disc} ><span>Customer</span></a>\r\n\r\n                            <ul className=\"ml-menu\">\r\n                                <li >\r\n                                    <NavLink exact to=\"/beliver-concept\" activeClassName=\"text-primary font-weight-bold\">\r\n                                        Believers\r\n                                    </NavLink>\r\n                                </li>\r\n                                <li >\r\n                                    <NavLink exact to=\"/customer\" activeClassName=\"text-primary font-weight-bold\">\r\n                                        CMM\r\n                                    </NavLink>\r\n                                </li>\r\n                                {/* <li><a href onClick={() => { history.push(\"/beliver-concept\") }}  >Believers</a></li>\r\n                                <li><a href onClick={() => { history.push(\"/customer\") }}  >CMM</a></li> */}\r\n                            </ul>\r\n                        </li>\r\n                        <li ><a className=\"menu-toggle actvl \" activeClassName=\"menu-toggle \"><span>Business Model</span></a>\r\n\r\n                            {/* <li><a className=\"menu-toggle\"><span>Business Model</span></a> */}\r\n                            <ul className=\"ml-menu\">\r\n                                <li >\r\n                                    <NavLink exact to=\"/value\" activeClassName=\"text-primary font-weight-bold\">\r\n                                        Value Proposition\r\n                                    </NavLink>\r\n                                </li>\r\n                                <li >\r\n                                    <NavLink exact to=\"/playground\" activeClassName=\"text-primary font-weight-bold\">\r\n                                        Playground\r\n                                    </NavLink>\r\n                                </li>\r\n                                {/* <li><a href onClick={() => { history.push(\"/value\") }}  >Value Proposition</a></li>\r\n                                <li><a href onClick={() => { history.push(\"/playground\") }}  >Playground</a></li> */}\r\n                            </ul>\r\n                        </li>\r\n                        <li><a className=\"menu-toggle actvl \" ><span>Financial Model</span></a>\r\n                            <ul className=\"ml-menu\">\r\n                                <li><NavLink exact to=\"/vilakshan\" activeClassName=\"text-primary font-weight-bold\" >Vilakshan</NavLink></li>\r\n                                <li><NavLink exact to=\"/naisthya\" activeClassName=\"text-primary font-weight-bold\" >Naisthya</NavLink></li>\r\n                                <li><NavLink exact to=\"/drishti\" activeClassName=\"text-primary font-weight-bold\" >Drishti Calculator</NavLink></li>\r\n                                <li><NavLink exact to=\"/prayaan\" activeClassName=\"text-primary font-weight-bold\" >Building Block</NavLink></li>\r\n                                <li><NavLink exact to=\"/shulk-lakshya\" activeClassName=\"text-primary font-weight-bold\" >Shulk Lakshya</NavLink></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className=\"open \"><a className=\"actvl \" href onClick={() => { history.push(\"/dashboard\") }}><span>Dashboard</span></a></li>\r\n                        <li><a className=\"menu-toggle actvl \" ><span>System & Process</span></a>\r\n                            <ul className=\"ml-menu\">\r\n                                <li><NavLink exact to=\"/processes\" activeClassName=\"text-primary font-weight-bold\" >Vilakshan Map & Processes</NavLink></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className=\" open\"><a className=\" actvl \" href onClick={() => { history.push(\"/\") }}><span>Talent Factory</span></a></li>\r\n                        <li className=\" open\"><a className=\" actvl \" href onClick={() => { history.push(\"/\") }}><span>Neural Network</span></a></li>\r\n                        {/* <li className=\" open\"><a href onClick={() => { history.push(\"/dsh\") }}></a></li> */}\r\n\r\n                    </ul>\r\n                </div>\r\n            </aside>\r\n\r\n            {props.data}\r\n        </div >\r\n    )\r\n}\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/Protected.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/Not_support.js",["376","377","378"],"import React, { useEffect } from 'react'\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nfunction Not_support() {\n    var s_id = localStorage.getItem('tr_id')\n\n    const history = useHistory();\n    useEffect(() => {\n        if (s_id) {\n            history.push(\"/\");\n        }\n    }, []);\n\n    return (\n\n        <div className=\"align-center w-50\" style={{ marginLeft: \"25%\", marginTop: \"10%\" }}>\n\n            <Alert variant=\"success\">\n                <img style={{ marginLeft: \"5rem\" }} className=\"login_img\" src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" /><span className=\"m-l-10\"></span>\n\n                <Alert.Heading>SORRY,YOU ARE NOT AUTHORIZED USER!</Alert.Heading>\n                <p>\n                    PLEASE CONTACT support@transganization.com\n                </p>\n                <hr />\n                <div className=\"d-flex justify-content-end\">\n                    {/* <Button onClick={() => setShow(false)} variant=\"outline-success\">\n                        Close me y'all!\n                    </Button> */}\n                </div>\n            </Alert>\n        </div>\n    )\n}\n\nexport default Not_support\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Home.js",["379"],"import React, { useState } from 'react';\r\n\r\n\r\nexport default function Form() {\r\n    return (\r\n        <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n            <div class=\"body_scroll\">\r\n                <div class=\"block-header\" >\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-7 col-md-6 col-sm-12\">\r\n                            <h2>Dashboard</h2>\r\n                            {/* <ul class=\"breadcrumb\">\r\n                        <li class=\"breadcrumb-item\"><a href=\"index.html\"><i class=\"zmdi zmdi-home\"></i> Aero</a></li>\r\n                        <li class=\"breadcrumb-item\"><a href=\"javascript:void(0);\">Forms</a></li>\r\n                        <li class=\"breadcrumb-item active\">Form Wizard</li>\r\n                    </ul> */}\r\n                            <button class=\"btn btn-primary btn-icon mobile_menu\" type=\"button\"><i class=\"zmdi zmdi-sort-amount-desc\"></i></button>\r\n                        </div>\r\n                        {/* <div class=\"col-lg-5 col-md-6 col-sm-12\">\r\n                            <button class=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\" type=\"button\"><i class=\"zmdi zmdi-arrow-right\"></i></button>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                <div class=\"container-fluid\" style={{ backgroundColor: \"F3F6F9\" }}>\r\n                    <div class=\"row clearfix\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"card p-4 mt-2\">\r\n                                <div className=\"body p-5\">\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <h2 className=\"card-inside-title\">\r\n                                                {/* <strong>List of Believers Group </strong> */}\r\n                                            </h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <h2>Example Tab</h2> */}\r\n                                    {/* <ul class=\"header-dropdown\">\r\n                                <li class=\"dropdown\"> <a href=\"javascript:void(0);\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"zmdi zmdi-more\"></i> </a>\r\n                                    <ul class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <li><a href=\"javascript:void(0);\">Action</a></li>\r\n                                        <li><a href=\"javascript:void(0);\">Another action</a></li>\r\n                                        <li><a href=\"javascript:void(0);\">Something else</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li class=\"remove\">\r\n                                    <a role=\"button\" class=\"boxs-close\"><i class=\"zmdi zmdi-close\"></i></a>\r\n                                </li>\r\n                            </ul> */}\r\n                                </div>                      </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/RightSideBar.js",["380"],"import React from 'react';\r\nimport { useHistory, Link } from 'react-router-dom'\r\n\r\nexport const RightSidebar = () => {\r\n    return (\r\n        <div >\r\n          \r\n            <ul class=\"navbar-nav\">\r\n                <li><Link to=\"/\" class=\"mega-menu\" title=\"Sign Out\"><i class=\"zmdi zmdi-power\"></i></Link></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default RightSidebar;\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Protected_Ui.js",["381"],"import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import Preloader from '../components/Preloader';\n// import Sidebar from '../components/Sidebar';\n// import { Routes } from '../routes';\nimport SideBar from \"./SideBar\";\n\nconst Protected_Ui = ({ component: Cmp, ...rest }) => (\n\n    <Route {...rest} render={props => (\n        <>\n            {/* <Preloader /> */}\n            <SideBar />\n\n            <main className=\"content\">\n                <SideBar />\n                <Cmp {...props} />\n                {/* <Footer /> */}\n            </main>\n        </>\n    )}\n    />,\n\n<Route\n    {...rest}\n    render={(props) =>\n        localStorage.getItem('tr_id') ? (\n            <Cmp {...props} />\n        ) :\n            <Redirect to=\"/Admin/admin-login\"\n            />\n    }\n/>\n\n\n);\n\nexport default Protected_Ui;\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan02/BeliverConcept.js",["382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408"],"import React, { useState, useEffect } from \"react\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport Editor from \"../../components/SunEditor\";\r\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from 'axios';\r\nimport ModalSubmit from \"../../components/ModalSubmit\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nexport default function Form() {\r\n  var s_id = localStorage.getItem('tr_id')\r\n  const history = useHistory();\r\n  const { fname } = useParams();\r\n  const [inputList, setInputList] = useState([{ beliverse_group: \"\" }]);\r\n  const [inputList2, setinputList2] = useState([{ face_of_tribe: \"\" }]);\r\n  const [allFaceList, setallFaceList] = useState(\"\");\r\n  const [CustomerBeliver, setCustomerBeliver] = useState(\"\");\r\n  const [YourTribe, setYourTribe] = useState(\"\");\r\n  const [PrimaryCustomer, setPrimaryCustomer] = useState(\"\");\r\n  const [FaceBeliver, setFaceBeliver] = useState(\"\");\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const [showData, setShowData] = useState(false);\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n  const [smShow, setSmShow] = useState(false);\r\n\r\n\r\n  const [BeliverOTP, setBeliverOTP] = useState('');\r\n  const [transOTP, setTransOTP] = useState('');\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [secondsfortrans, setsecondsfortrans] = useState(0);\r\n  const [ShowResetOTP, setShowResetOTP] = useState(true);\r\n  const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\r\n  const [showConfirmBox, setshowConfirmBox] = useState(false);\r\n  const [showHide, setshowHide] = useState(false);\r\n\r\n  const [belEmail, setbelEmail] = useState(\"\");\r\n  const [transEmail, settransEmail] = useState(\"\");\r\n  const [bypassEmail, setbypassEmail] = useState(\"\");\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n\r\n  const [varifiedValue, setvarifiedValue] = useState(\"\");\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [varval, setvarval] = useState(\"\");\r\n  const [EnteredBeliverOTP, setEnteredBeliverOTP] = useState('');\r\n  const [showWrongOtp, setshowWrongOtp] = useState(false);\r\n  const [pdfShowDes, setpdfShowDes] = useState(0);\r\n\r\n  // useEffect(() => {  var s_id = localStorage.getItem('tr_id')\r\n  //   if (!id) {\r\n  //     history.push(\"Not_support\");\r\n  //   }\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, []);\r\n\r\n  // const exportPDFWithMethod = () => {\r\n  //   if (pdfExportComponent.current) {\r\n  //     pdfExportComponent.current.save();\r\n  //   }\r\n  // };\r\n\r\n  const exportPDFWithMethod = () => {\r\n    setpdfShowDes(1);\r\n    setTimeout(() => {\r\n      // alert(pdfShowDes);\r\n      if (pdfExportComponent.current) {\r\n        pdfExportComponent.current.save();\r\n        setTimeout(() => {\r\n          setpdfShowDes(0);\r\n        }, 1000)\r\n      }\r\n    }, 1000)\r\n\r\n  };\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    console.log(\"In belGroup change handler \", list);\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleInputChange2 = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list2 = [...inputList2];\r\n    console.log(\"In belGroup change handler \", list2);\r\n    list2[index][name] = value;\r\n    setinputList2(list2);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setviewModal(false);\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleRemoveClick2 = (index) => {\r\n    const list2 = [...inputList2];\r\n    list2.splice(index, 1);\r\n    setinputList2(list2);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { beliverse_group: \"\" }]);\r\n    console.log(inputList);\r\n  };\r\n\r\n  const handleAddClick2 = () => {\r\n    setinputList2([...inputList2, { face_of_tribe: \"\" }]);\r\n    console.log(inputList2);\r\n  };\r\n\r\n  const OnSubmitHandle = () => {\r\n    if (belConceptDataa.length === 0) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        beliverse_group: inputList,\r\n        face_of_tribe: inputList2,\r\n        tribe: YourTribe,\r\n        primary_customer_beliver: PrimaryCustomer,\r\n        face_of_primary_customer_beliver: FaceBeliver,\r\n        email_id: `${s_id}`,\r\n        created_by: `${s_id}`\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConcepts/`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully\");\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n            }, 1000)\r\n          }\r\n          GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        beliverse_group: inputList,\r\n        face_of_tribe: inputList2,\r\n        tribe: YourTribe,\r\n        primary_customer_beliver: PrimaryCustomer,\r\n        face_of_primary_customer_beliver: FaceBeliver,\r\n        email_id: `${s_id}`,\r\n        created_by: `${s_id}`\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/beliverConcepts/${Upid}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully\");\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n            }, 1000)\r\n          }\r\n          GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  };\r\n\r\n  const GetallRecords = () => {\r\n    // console.log(\"hhistory\",history)\r\n    var localUid = localStorage.getItem(\"tr_id\");\r\n    var myGetHeaders = new Headers();\r\n    myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myGetHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/beliverConcepts/user/${s_id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(\"In Beliver Get all Reccords Function\", resData.data);\r\n        if (resData.data.length > 0) {\r\n          setYourTribe(resData.data[0].tribe);\r\n          setCustomerBeliver(resData.data[0].customer_believer);\r\n          setPrimaryCustomer(resData.data[0].primary_customer_beliver);\r\n          setFaceBeliver(resData.data[0].face_of_primary_customer_beliver)\r\n          setbelConceptDataa(resData.data);\r\n          setvarifiedValue(resData.data[0].verified);\r\n          setUpid(resData.data[0].id);\r\n\r\n          let MyValues = resData.data;\r\n          console.log(\"In UseEffect Function\", MyValues);\r\n          MyValues.map((item, key) => {\r\n            let beliverGroups = eval(item.beliverse_group);\r\n            let faceOfTribe = eval(item.face_of_tribe);\r\n            console.log(\"Data beliverGroups \", beliverGroups);\r\n            console.log(\"Data faceOfTribe\", faceOfTribe);\r\n            setInputList(beliverGroups);\r\n            setinputList2(faceOfTribe);\r\n          });\r\n          setShowPdf(true);\r\n        }\r\n        setbelConceptDataa(resData.data);\r\n        setShowData(true);\r\n      });\r\n\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (resData.data.id > 0) {\r\n          console.log(\"email\", resData.data.beliver_email);\r\n          setbelEmail(resData.data.beliver_email);\r\n          settransEmail(resData.data.tranz_email);\r\n          setbypassEmail(resData.data.bypass_email);\r\n          setbeliverName(resData.data.beliver_name);\r\n\r\n        }\r\n\r\n      });\r\n\r\n  };\r\n\r\n  const handleChangeYourTribe = (newContent) => {\r\n    setYourTribe(newContent);\r\n  };\r\n\r\n  const handleChangePrimaryCustomer = (newContent) => {\r\n    setPrimaryCustomer(newContent);\r\n  };\r\n  const handleChangeFaceBeliver = (newContent) => {\r\n    setFaceBeliver(newContent);\r\n  };\r\n\r\n\r\n\r\n  const getRandomNum = (length) => {\r\n    var randomNum =\r\n      (Math.pow(10, length).toString().slice(length - 1) +\r\n        Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n    return randomNum;\r\n  }\r\n  const OnVerifyHandle = () => {\r\n    // alert(EnteredBeliverOTP);\r\n    GetallRecords()\r\n\r\n    if (BeliverOTP == EnteredBeliverOTP) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        verifiedVal: \"1\",\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/beliverConcepts/verify/${Upid}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          // console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"updated\");\r\n            // setshowConfirmBox(true);\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n            GetallRecords()\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else if (BeliverOTP != EnteredBeliverOTP) {\r\n      setshowWrongOtp(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n      GetallRecords()\r\n    } else {\r\n      // setshowConfirmBox(true);\r\n      GetallRecords()\r\n\r\n      return false;\r\n    }\r\n\r\n    // setShowResetOTPTrans(true)\r\n    // setSeconds(0)\r\n    // setsecondsfortrans(60)\r\n  }\r\n  const ResendBeliverDataTrans = () => {\r\n    setShowResetOTPTrans(true)\r\n    setSeconds(0)\r\n    setsecondsfortrans(60)\r\n  }\r\n  const HandleInputChange = (event) => {\r\n    setEnteredBeliverOTP(event.target.value);\r\n  }\r\n  const HandleSubmit = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const ResendBeliverData = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const OnVerifyHandleConfirm = () => {\r\n    setShowResetOTPTrans(false)\r\n    setshowConfirmBox(true);\r\n  }\r\n  const HandleConfirmation = () => {\r\n    // setShowPdf(1)\r\n    setshowConfirmBox(false);\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <ModalSubmit show={showHide} />\r\n      <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              {seconds == 60 && ShowResetOTP ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Believer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTP(false)\r\n                        setshowConfirmBox(false)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Believer OTP\" name=\"firstName\" value={BeliverOTP} />\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Beliver OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandle} >Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {secondsfortrans == 60 && ShowResetOTPTrans ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Transganizer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTPTrans(0)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Transganizer OTP\" name=\"firstName\" value={transOTP} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Transganizer OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandleConfirm}>Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>) : (null)}\r\n              {showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Confirmation </h4>\r\n                  Are You Sure You Want To Submit!!\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTP ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverData}>RESEND OTP For Beliver </button>\r\n                </div>\r\n              ) : (null)}\r\n\r\n              {!ShowResetOTPTrans && !showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverDataTrans}>RESEND OTP For Transaganiser </button>\r\n                </div>\r\n              ) : (null)}\r\n              {showWrongOtp ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Wrong OTP </h4>\r\n                  You Have Entered Wrong OTP!!\r\n                  <div class=\"modal-footer\">\r\n                    {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button> */}\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={smShow}\r\n        onHide={() => setSmShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <section class=\"content\" style={{ backgroundColor: \"white\" }} >\r\n        <div class=\"body_scroll\">\r\n          <div className=\"block-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n                <h2>Believer Concept</h2>\r\n                <button\r\n                  className=\"btn btn-primary btn-icon mobile_menu\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n                </button>\r\n              </div>\r\n              {/* {/* <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n                <button\r\n                  className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"zmdi zmdi-arrow-right\"></i>\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          {showData ? (\r\n            <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                  <div className=\"card p-3\">\r\n                    <div className=\"header\">\r\n                    </div>\r\n                    <div className=\"body p-5\">\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>List of Believers Group </strong>\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"row clearfix\">\r\n                            <div className=\"col-md-10\">\r\n                              <div className=\"form-group\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"beliverse_group\"\r\n                                  value={x.beliverse_group}\r\n                                  onChange={(e) => handleInputChange(e, i)}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                              {inputList.length !== 1 && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-raised rembtn btn-square waves-effect m-l-40 \"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  <strong>REMOVE</strong>\r\n                                </button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  <strong>ADD</strong>\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Your Tribe</strong>\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-1\"></div>\r\n                        <div className=\"col-md-12\">\r\n                          <Editor\r\n                            contents={YourTribe}\r\n                            getValue={handleChangeYourTribe}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div style={{ marginTop: 30 }}></div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>\r\n                              Key Words To Define Face of Your Tribe{fname}\r\n                            </strong>\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                      {inputList2.map((y, i) => {\r\n                        return (\r\n                          <div className=\"row clearfix\">\r\n                            <div className=\"col-md-10\">\r\n                              <div className=\"form-group\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"face_of_tribe\"\r\n                                  value={y.face_of_tribe}\r\n                                  onChange={(e) => handleInputChange2(e, i)}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                              {inputList2.length !== 1 && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-raised rembtn btn-square waves-effect m-l-40 \"\r\n                                  onClick={() => handleRemoveClick2(i)}\r\n                                >\r\n                                  <strong>REMOVE</strong>\r\n                                </button>\r\n                              )}\r\n                              {inputList2.length - 1 === i && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                                  onClick={handleAddClick2}\r\n                                >\r\n                                  <strong>ADD</strong>\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                      <div style={{ marginTop: 30 }}></div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Define Primary Customer Believer</strong>\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-1\"></div>\r\n                        <div className=\"col-md-12\">\r\n                          <Editor\r\n                            contents={PrimaryCustomer}\r\n                            getValue={handleChangePrimaryCustomer}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div style={{ marginTop: 30 }}></div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-1\"></div>\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>\r\n                              Define Face of Primary Customer Believer\r\n                            </strong>\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-1\"></div>\r\n                        <div className=\"col-md-12\">\r\n                          <Editor\r\n                            contents={FaceBeliver}\r\n                            getValue={handleChangeFaceBeliver}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-1\"></div>\r\n                        <div style={{ marginTop: 30 }}></div>\r\n                      </div>\r\n                      <div>\r\n                        <button\r\n                          type=\"submit\"\r\n                          class=\"btn savebtn waves-effect\"\r\n                          onClick={OnSubmitHandle}\r\n                        >\r\n                          SAVE <i class=\"ml-1 zmdi zmdi-save\"></i>\r\n                        </button>\r\n                        {ShowPdf ? (\r\n                          <>\r\n\r\n\r\n                            <button\r\n                              type=\"button\"\r\n                              class=\"btn viewbtn waves-effect\"\r\n                              onClick={ViewModel}\r\n                            >\r\n                              View  <i className=\"ml-1 zmdi zmdi-eye \" />                          </button>\r\n\r\n                            <button type=\"button\" class=\"btn savebtn waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={HandleSubmit}>SUBMIT <i class=\"ml-1 zmdi zmdi-check\"></i></button>\r\n\r\n                            <button\r\n                              type=\"button\"\r\n                              class=\"btn downloadbtn waves-effect\"\r\n                              onClick={exportPDFWithMethod}\r\n                            >\r\n                              Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                            </button>\r\n                          </>\r\n\r\n                        ) : null}\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (null)}\r\n\r\n        </div>\r\n      </section>\r\n\r\n      {/* View Modal-----------------------> */}\r\n\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={viewModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header style={{ padding: \"10px\" }}>\r\n          <div className=\"col-md-12 row\" >\r\n            <div className=\"col-md-6\">\r\n              <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n            </div>\r\n            <div className=\"col-md-6 pageHeading\" >\r\n              Customer\r\n            </div>\r\n          </div>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div>\r\n                    <div id=\"divToPrint\" className=\"mt4 pdfBody\">\r\n\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"pdfHeader\"\r\n                          >\r\n                            Believers Concept\r\n                          </div>\r\n                          <div\r\n                            className=\"headText\"\r\n\r\n                          >\r\n                            1.Your Tribe\r\n                          </div>\r\n                          <div\r\n                            className=\"dynamicContent\"\r\n                          >\r\n                            {YourTribe.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"headText\"\r\n\r\n                          >\r\n                            2.Define Primary Customer Believer\r\n                          </div>\r\n                          <div\r\n                            className=\"dynamicContent\"\r\n\r\n                          >\r\n                            {PrimaryCustomer.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"headText\"\r\n\r\n                          >\r\n                            3.Define Face of Primary Customer Believer\r\n                          </div>\r\n                          <div\r\n                            className=\"dynamicContent\"\r\n\r\n                          >\r\n                            {FaceBeliver.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix pl-2\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList.slice(0, 100)}\r\n                            >\r\n                              <Column\r\n                                field=\"beliverse_group\"\r\n                                title=\"List of Believers Group \"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix pl-2\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList2.slice(0, 2)}\r\n                            >\r\n                              <Column\r\n                                field=\"face_of_tribe\"\r\n                                title=\"Key Words To Define Face of Your Believer\"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n\r\n\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"-3000px\",\r\n          top: 0,\r\n        }}\r\n      >\r\n        {pdfShowDes > 0 ? (\r\n\r\n          <PDFExport\r\n            paperSize=\"A4\"\r\n            margin=\"1cm\"\r\n            ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`}\r\n            forcePageBreak=\".page-break\"\r\n          >\r\n            <Modal.Header style={{ padding: \"10px\" }}>\r\n              <div className=\"col-md-12 row\" >\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                </div>\r\n                <div className=\"col-md-6 pageHeading\" >\r\n                  Customer\r\n                </div>\r\n              </div>\r\n              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                    <div className=\"card\">\r\n                      <div>\r\n                        <div id=\"divToPrint\" className=\"mt4 pdfBody\">\r\n\r\n                          <div className=\"row clearfix\">\r\n                            <div className=\"col-md-12\">\r\n                              <div\r\n                                className=\"pdfHeader\"\r\n                              >\r\n                                Believers Concept\r\n                              </div>\r\n                              <div\r\n                                className=\"headText\"\r\n\r\n                              >\r\n                                1.Your Tribe\r\n                              </div>\r\n                              <div\r\n                                className=\"dynamicContent\"\r\n                              >\r\n                                {YourTribe.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row clearfix\">\r\n                            <div className=\"col-md-12\">\r\n                              <div\r\n                                className=\"headText\"\r\n\r\n                              >\r\n                                2.Define Primary Customer Believer\r\n                              </div>\r\n                              <div\r\n                                className=\"dynamicContent\"\r\n\r\n                              >\r\n                                {PrimaryCustomer.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row clearfix\">\r\n                            <div className=\"col-md-12\">\r\n                              <div\r\n                                className=\"headText\"\r\n\r\n                              >\r\n                                3.Define Face of Primary Customer Believer\r\n                              </div>\r\n                              <div\r\n                                className=\"dynamicContent\"\r\n\r\n                              >\r\n                                {FaceBeliver.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row clearfix pl-2\">\r\n                            <div className=\"col-md-12\">\r\n                              <div className=\"table-responsive\">\r\n                                <Grid\r\n                                  style={{\r\n                                    maxHeight: \"400px\",\r\n                                  }}\r\n                                  data={inputList.slice(0, 100)}\r\n                                >\r\n                                  <Column\r\n                                    field=\"beliverse_group\"\r\n                                    title=\"List of Believers Group \"\r\n                                    width=\"420px\"\r\n                                  />\r\n                                </Grid>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row clearfix pl-2\">\r\n                            <div className=\"col-md-12\">\r\n                              <div className=\"table-responsive\">\r\n                                <Grid\r\n                                  style={{\r\n                                    maxHeight: \"400px\",\r\n                                  }}\r\n                                  data={inputList2.slice(0, 2)}\r\n                                >\r\n                                  <Column\r\n                                    field=\"face_of_tribe\"\r\n                                    title=\"Key Words To Define Face of Your Believer\"\r\n                                    width=\"420px\"\r\n                                  />\r\n                                </Grid>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div style={{ marginTop: 30 }}></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </PDFExport>\r\n        ) : (null)}\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan02/excel.js",["409","410","411","412"],"import React, { useState, useEffect } from 'react';\r\nimport ReactExport from 'react-data-export';\r\nimport { getReflectionData } from \"../apiServices/reflectionapi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\n\r\nconst Downloadexcel = () => {\r\n    const history=useHistory();\r\n\r\n    useEffect(() => {      var s_id = localStorage.getItem('tr_id')\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n        HandleReflectionDownload();\r\n    }, [])\r\n\r\n    let [reflectiondata, setreflectiondata] = useState([]);\r\n\r\n    let [childhood, setchildhood] = useState('');\r\n    let [postEducation, setpostEducation] = useState('')\r\n    let [postMarriage, setpostMarriage] = useState('')\r\n    const HandleReflectionDownload = async () => {\r\n        const data = await getReflectionData();\r\n        data.map((item, key) => {\r\n            let childdata;\r\n            let posteductaion;\r\n            let postmarriage;\r\n            childdata = item.child_hood;\r\n            posteductaion = item.post_education;\r\n            postmarriage = item.post_marriage;\r\n            const regEx = /(<([^>]+)>)/ig;\r\n            setchildhood(childdata.replace(regEx, ''));\r\n            setpostEducation(posteductaion.replace(regEx, ''));\r\n            setpostMarriage(postmarriage.replace(regEx, ''));\r\n        })\r\n        setreflectiondata(data);\r\n    }\r\n    let data = \"Childhood life is the best life we evere had \"\r\n    const multiDataSet = [\r\n        {\r\n            columns: [\r\n                { title: \"Childhood \", width: { wch: 50 }, style: { alignment: { wrapText: true, horizontal: 'center', vertical: 'top' } } },//pixels width \r\n                { title: \"Post Education\", width: { wch: 50 }, style: { alignment: { wrapText: true, horizontal: 'center', vertical: 'top' } } },//char width \r\n                { title: \"Post Marriage\", width: { wch: 50 }, style: { alignment: { wrapText: true, horizontal: 'center', vertical: 'top' } } },\r\n            ],\r\n            data: [\r\n                [\r\n                    { value: childhood, style: { font: { bold: true } } },\r\n                    { value: postEducation, style: { font: { bold: true } } },\r\n                    { value: postMarriage, style: { font: { bold: true } } },\r\n                ],\r\n\r\n            ]\r\n        }\r\n    ];\r\n\r\n\r\n    return (\r\n        <section class=\"content\">\r\n            <div class=\"body_scroll\">\r\n                <div className=\"block-header\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n                            <h2>Believers Concept Excel</h2>\r\n                            <button className=\"btn btn-primary btn-icon mobile_menu\" type=\"button\"><i className=\"zmdi zmdi-sort-amount-desc\"></i></button>\r\n                        </div>\r\n                        <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n                            <button className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\" type=\"button\"><i className=\"zmdi zmdi-arrow-right\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row clearfix\">\r\n                        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"header\">\r\n                                    <ExcelFile element={<button type=\"button\" class=\"btn btn-warning  waves-effect\">Download Data With Styles</button>}>\r\n                                        <ExcelSheet dataSet={multiDataSet} name=\"Reflection\" />\r\n                                        <ExcelSheet dataSet={multiDataSet} name=\"Rebirth\" />\r\n                                        <ExcelSheet dataSet={multiDataSet} name=\"Discovery\" />\r\n                                    </ExcelFile>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default Downloadexcel;\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/Protected.js",["413"],"import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import Preloader from '../components/Preloader';\n// import Sidebar from '../components/Sidebar';\n// import { Routes } from '../routes';\n\nconst Protected = ({ component: Cmp, ...rest }) => (\n    \n\n    <Route {...rest} render={props => (\n        <>\n            {/* <Preloader /> */}\n            {/* <Sidebar /> */}\n\n            <main className=\"content\">\n                {/* <Navbar /> */}\n                <Cmp {...props} />\n                {/* <Footer /> */}\n            </main>\n        </>\n    )}\n    />,\n\n<Route\n    {...rest}\n    render={(props) =>\n        localStorage.getItem('transganizaion_id') ? (\n            <Cmp {...props} />\n        ) :\n            <Redirect to=\"/Admin/admin-login\"\n            />\n    }\n/>\n\n\n);\n\nexport default Protected;\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/AuthUrl.js",["414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465"],"import React, { useState, useEffect } from \"react\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport Editor from \"../../components/SunEditor\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios';\nimport ModalSubmit from \"../../components/ModalSubmit\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nexport default function Form() {\n    const history = useHistory();\n    const { fname } = useParams();\n    const [inputList, setInputList] = useState([{ beliverse_group: \"\" }]);\n    const [inputList2, setinputList2] = useState([{ face_of_tribe: \"\" }]);\n    const [allFaceList, setallFaceList] = useState(\"\");\n    const [CustomerBeliver, setCustomerBeliver] = useState(\"\");\n    const [YourTribe, setYourTribe] = useState(\"\");\n    const [PrimaryCustomer, setPrimaryCustomer] = useState(\"\");\n    const [FaceBeliver, setFaceBeliver] = useState(\"\");\n    const [ShowPdf, setShowPdf] = useState(false);\n    const pdfExportComponent = React.useRef(null);\n    const [show, setShow] = useState(false);\n    const [showData, setShowData] = useState(false);\n    const [viewModal, setviewModal] = useState(false);\n    const [belConceptDataa, setbelConceptDataa] = useState();\n    const [smShow, setSmShow] = useState(false);\n\n    const [BeliverOTP, setBeliverOTP] = useState('');\n    const [transOTP, setTransOTP] = useState('');\n    const [seconds, setSeconds] = useState(0);\n    const [secondsfortrans, setsecondsfortrans] = useState(0);\n    const [ShowResetOTP, setShowResetOTP] = useState(true);\n    const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\n    const [showConfirmBox, setshowConfirmBox] = useState(false);\n\n    const [showHide, setshowHide] = useState(false);\n\n    useEffect(() => {\n        urlCheck();\n        // GetallRecords();\n    }, []);\n\n    const urlCheck = () => {\n        var myGetHeaders = new Headers();\n        myGetHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptions = {\n            method: \"GET\",\n            headers: myGetHeaders,\n            redirect: \"follow\",\n        };\n        // for server--->\n        // `http://localhost:9002/masters/parivartan_user/checkemail/email=${fname}`,\n        fetch(\n            `http://localhost:9002/masters/parivartan_user/checkemail/email=${fname}`,\n            requestOptions\n        )\n            .then((response) => response.json())\n            .then((resData) => {\n                console.log(\"In Beliver Get all Reccords Function\", resData.auth);\n                console.log(resData);\n                if (resData.id) {\n                    console.log(\"checking\", resData);\n                    localStorage.setItem(\"tr_id\", resData.id);\n                    localStorage.setItem(\"tr_token\", resData.token);\n                    localStorage.setItem(\"tr_auth\", resData.auth);\n                    localStorage.setItem(\"tr\", JSON.stringify(resData));\n                    // localStorage.setItem(\"tr_jwt\", resData.token);\n                    history.push(\"/home\");\n                    window.location.reload();\n                } else {\n                    // alert(\"hello\")\n                    localStorage.clear(\"tr_id\");\n                    history.push(\"/Not_support\");\n\n                }\n                setbelConceptDataa(resData.data);\n                setShowData(true);\n            });\n    };\n\n\n\n    return (\n        <>\n            {/* <h1>sdasdsa</h1> */}\n        </>\n    );\n}\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/Login.js",["466","467","468","469","470","471","472"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport { Switch, Route, useHistory, } from \"react-router-dom\";\n// import logo from \"\";\n\nexport default function Login() {\n    const history = useHistory();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n    function handleSubmit(event) {\n        console.warn(email, password)\n        event.preventDefault();\n        if (email == \"support@transganization.com\" && password == \"Parivartan@123\") {\n            localStorage.setItem(\"transganizaion_id\", true);\n            history.push(\"/Admin/admin-dashboard\");\n        }\n\n\n        // var myHeaders = new Headers();\n        // myHeaders.append(\"Content-Type\", \"application/json\");\n        // var rawrich = JSON.stringify({\n        //     email_id: email,\n        //     password: password\n        // });\n        // var requestOptionsrichtext = {\n        //     method: \"POST\",\n        //     headers: myHeaders,\n        //     body: rawrich,\n        //     redirect: \"follow\",\n        // };\n        // fetch(`http://localhost:9002/masters/Admin/admin-login`, requestOptionsrichtext)\n        //     .then((response) => response.json())\n        //     .then((resData) => {\n        //         if (resData.message == \"Result Fetched\") {\n        //             console.log(resData.data.id);\n\n        //             localStorage.setItem(\"transganizaion_id\", resData.data.id);\n        //             history.push(\"/Admin/admin-dashboard\")\n\n        //             console.log(\"Data Added succesfully\");\n        //             // setSmShow(true);\n        //             // setTimeout(() => {\n        //             //     localStorage.clear(\"transganizaion_id\")\n\n        //             //     // setSmShow(false);\n        //             // }, 2000)\n        //         }\n        //         // GetallRecored();\n        //         // seteditModal(false);\n        //     })\n        //     .catch((error) => console.log(\"error\", error));\n\n    }\n\n    return (\n        <div class=\"body_scroll\" style={{ backgroundColor: \"lightgray\", height: \"52rem\" }} >\n            <div className=\"block-header\">\n                {/* <div className=\"row\">\n                    <div className=\"col-lg-7 col-md-6 col-sm-12\">\n                        <button\n                            className=\"btn btn-primary btn-icon mobile_menu\"\n                            type=\"button\"\n                        >\n                            <i className=\"zmdi zmdi-sort-amount-desc\"></i>\n                        </button>\n                    </div>\n\n                </div> */}\n            </div>\n            <div className=\"container-fluid\" >\n                <div className=\"row clearfix mt-5\" >\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                        <div className=\"card p-3 \" >\n                            <div className=\"header  w-25\" style={{ marginLeft: \"38%\" }}>\n                                <img style={{ marginLeft: \"8rem\" }} className=\"login_img\" src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" /><span className=\"m-l-10\"></span>\n                            </div>\n\n                            <div className=\"body p-5 w-25\" style={{ marginLeft: \"38%\", height: \"23rem\" }}>\n                                {/* <img style={{ marginLeft: \"5rem\" }} className=\"login_img\" src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" /><span className=\"m-l-10\"></span> */}\n                                <h3 class=\"text-center pad25B font-gray text-transform-upr font-size-23\">Admin Login</h3>\n\n                                <div className=\"Login\">\n                                    {/* <img style={{ marginLeft: \"5rem\" }} className=\"login_img\" src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" /><span className=\"m-l-10\"></span> */}\n\n                                    <Form >\n                                        <div class=\"input-group mb-4 p-2\">\n                                            <input type=\"text\" class=\"form-control\" placeholder=\"Username\"\n                                                autoFocus\n                                                type=\"email\"\n                                                value={email}\n                                                onChange={(e) => setEmail(e.target.value)}\n                                            />\n                                            <div class=\"input-group-append\">\n                                                <div class=\"input-group-text\">\n                                                    <span class=\"zmdi zmdi-email\"></span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"input-group mb-4 p-2\">\n                                            <input type=\"text\" class=\"form-control\" placeholder=\"Password\" \n                                             type=\"password\"\n                                             value={password}\n                                             onChange={(e) => setPassword(e.target.value)}\n                                            />\n                                            <div class=\"input-group-append\">\n                                                <div class=\"input-group-text\">\n                                                    <span class=\"zmdi zmdi-lock\"></span>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"input-group mb-4 p-2\">\n                                            <Button className=\"loginbtn\" size=\"lg\" type=\"submit\" onClick={handleSubmit}\n                                            >\n                                                Login\n                                            </Button>\n\n                                        </div>\n\n                                        {/* <Form.Group size=\"lg\" controlId=\"email\">\n                                            <Form.Label><b>Email</b></Form.Label>\n                                            <Form.Control\n                                                autoFocus\n                                                type=\"email\"\n                                                value={email}\n                                                onChange={(e) => setEmail(e.target.value)}\n                                                style={{ borderRadius: \"10px\" }}\n                                            />\n                                        </Form.Group>\n                                        <Form.Group size=\"lg\" controlId=\"password\">\n                                            <Form.Label><b>Password</b></Form.Label>\n                                            <Form.Control\n                                                type=\"password\"\n                                                value={password}\n                                                onChange={(e) => setPassword(e.target.value)}\n                                                style={{ borderRadius: \"10px\" }}\n                                            />\n                                        </Form.Group> */}\n                                        {/* <Button className=\"loginbtn\" size=\"lg\" type=\"submit\" onClick={handleSubmit}\n                                        >\n                                            Login\n                                        </Button> */}\n                                    </Form>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/Dashboard.js",["473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525"],"import React, { useState, useEffect } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport axios from 'axios';\nimport ModalSubmit from \"../../components/ModalSubmit\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Vilakshan(props) {\n    const history = useHistory();\n\n    let rows = [];\n    const [beliver_name, setbeliver_name] = useState(\"\");\n    const [beliver_company, setbeliver_company] = useState(\"\");\n    const [beliver_email, setbeliver_email] = useState(\"\");\n    const [beliver_mobile, setbeliver_mobile] = useState(\"\");\n    const [tranz_name, settranz_name] = useState(\"\");\n    const [tranz_email, settranz_email] = useState(\"\");\n    const [tranz_mobile, settranz_mobile] = useState(\"\");\n    const [bypass_email, setbypass_email] = useState(\"\");\n    const [bypass_mobile, setbypass_mobile] = useState(\"\");\n\n    const [editId, seteditId] = useState(\"\");\n    const [delId, setdelId] = useState(\"\");\n\n    const [beliver_nameEdit, setbeliver_nameEdit] = useState(\"\");\n    const [beliver_companyEdit, setbeliver_companyEdit] = useState(\"\");\n    const [beliver_emailEdit, setbeliver_emailEdit] = useState(\"\");\n    const [beliver_mobileEdit, setbeliver_mobileEdit] = useState(\"\");\n    const [tranz_nameEdit, settranz_nameEdit] = useState(\"\");\n    const [tranz_emailEdit, settranz_emailEdit] = useState(\"\");\n    const [tranz_mobileEdit, settranz_mobileEdit] = useState(\"\");\n    const [bypass_emailEdit, setbypass_emailEdit] =\n        useState(\"\");\n    const [bypass_mobileEdit, setbypass_mobileEdit] = useState(\"\");\n    const [smShow, setSmShow] = useState(false);\n    const [Mupdate, setMupdate] = useState(false);\n    const [Mdelete, setMdelete] = useState(false);\n\n    const [vilakshanData, setVilakshanData] = useState(\"\");\n    const [show, setShow] = useState(false);\n    const [editModal, seteditModal] = useState(false);\n    const [pointerEvent, setpointerEvent] = useState(\"\");\n\n\n    const [viewModal, setviewModal] = useState(false);\n    const [ShowPdf, setShowPdf] = useState(false);\n    const pdfExportComponent = React.useRef(null);\n    const [belConceptDataa, setbelConceptDataa] = useState();\n\n    const [checksVal, setchecksVal] = useState(false);\n    const [chks, setchks] = useState();\n    const [chks2, setchks2] = useState(false);\n\n\n    const [BeliverOTP, setBeliverOTP] = useState('');\n    const [transOTP, setTransOTP] = useState('');\n    const [seconds, setSeconds] = useState(0);\n    const [secondsfortrans, setsecondsfortrans] = useState(0);\n    const [ShowResetOTP, setShowResetOTP] = useState(true);\n    const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\n    const [showConfirmBox, setshowConfirmBox] = useState(false);\n\n    const [showHide, setshowHide] = useState(false);\n    const [ErrorText, setErrorText] = useState(\"\");\n\n\n    const ViewModel = () => {\n        setviewModal(true);\n    };\n\n    const yesFn = (checkVal, uid) => {\n        // alert(uid);\n        if (checkVal == \"false\") {\n            var checkVal = \"true\";\n            // alert(checkVal);\n        } else if (checkVal == \"true\") {\n            var checkVal = \"false\";\n            // alert(checkVal);\n        } else {\n            var checkVal = \"true\";\n            // alert(checkVal);\n        }\n\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var raw = JSON.stringify({\n            checkVal: checkVal,\n            email_id: \"1\",\n            created_by: \"1\",\n        });\n        var requestOptions = {\n            method: \"PUT\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user/checked/${uid}`, requestOptions)\n            .then((response) => response.json())\n            .then((resData) => {\n                // console.log(resData);\n                if (resData.status == 200) {\n                    console.log(\"updated\");\n                    // setMupdate(true);\n                    // setTimeout(() => {\n                    //   setMupdate(false);\n                    // }, 1000)\n                    // GetallRecored();\n                }\n            })\n            .catch((error) => console.log(\"error\", error));\n        setShow(false);\n        seteditModal(false);\n        GetallRecored();\n\n\n\n    };\n\n    const noFn = () => {\n        // alert(checksVal);\n\n        // setchks2(\"1\");\n        // setchks(false);\n        // setchks2(true);\n\n        // setchks(\"\")\n    };\n\n    const handleClose = () => {\n        setShow(false);\n        seteditModal(false);\n        setviewModal(false);\n\n    };\n\n\n    const deleteConfirm = () => {\n        // alert(delId);\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n            method: \"delete\",\n            headers: myHeaders,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user/${delId}`, requestOptionsget)\n            .then((response) => response.json())\n            .then((resData) => {\n                // seteditId(resData.data[0].id);\n                console.log(\"deleted\");\n                setMdelete(true);\n                // setMdelete(false);\n                setTimeout(() => {\n                    setMdelete(false);\n                }, 1000)\n\n                setShow(false);\n                GetallRecored();\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n    // const handleShow = () => setShow(true);\n\n    const OnSubmitUpdate = (edId) => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var raw = JSON.stringify({\n            beliver_name: beliver_nameEdit,\n            beliver_company: beliver_companyEdit,\n            beliver_email: beliver_emailEdit,\n            beliver_mobile: beliver_mobileEdit,\n            tranz_name: tranz_nameEdit,\n            tranz_email: tranz_emailEdit,\n            tranz_mobile: tranz_mobileEdit,\n            bypass_email: bypass_emailEdit,\n            bypass_mobile: bypass_mobileEdit,\n\n            email_id: \"0\",\n            created_by: \"0\",\n        });\n        var requestOptions = {\n            method: \"PUT\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user/${edId}`, requestOptions)\n            .then((response) => response.json())\n            .then((resData) => {\n                console.log(resData);\n                if (resData.status == 200) {\n                    console.log(\"updated\");\n                    // alert(\"ds\")\n                    setMupdate(true);\n                    // setMupdate(false);\n                    setTimeout(() => {\n                        setMupdate(false);\n                    }, 1000)\n                    GetallRecored();\n                }\n            })\n            .catch((error) => console.log(\"error\", error));\n\n        setShow(false);\n        seteditModal(false);\n    };\n    const editfn = (edit_id) => {\n        setpointerEvent(\"\")\n\n        seteditModal(true);\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\",\n        };\n        fetch(\n            `http://localhost:9002/masters/parivartan_user/${edit_id}`,\n            requestOptionsget\n        )\n            .then((response) => response.json())\n            .then((resData) => {\n                seteditId(resData.data[0].id);\n                setbeliver_nameEdit(resData.data[0].beliver_name);\n                setbeliver_companyEdit(resData.data[0].beliver_company);\n                setbeliver_emailEdit(resData.data[0].beliver_email);\n                setbeliver_mobileEdit(resData.data[0].beliver_mobile);\n                settranz_nameEdit(resData.data[0].tranz_name);\n                settranz_emailEdit(resData.data[0].tranz_email);\n                settranz_mobileEdit(resData.data[0].tranz_mobile);\n                setbypass_emailEdit(resData.data[0].bypass_email);\n                setbypass_mobileEdit(resData.data[0].bypass_mobile);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n\n\n    const viewfn = (edit_id) => {\n        setpointerEvent(\"none\")\n        seteditModal(true);\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\",\n        };\n        fetch(\n            `http://localhost:9002/masters/parivartan_user/${edit_id}`,\n            requestOptionsget\n        )\n            .then((response) => response.json())\n            .then((resData) => {\n                seteditId(resData.data[0].id);\n                setbeliver_nameEdit(resData.data[0].beliver_name);\n                setbeliver_companyEdit(resData.data[0].beliver_company);\n                setbeliver_emailEdit(resData.data[0].beliver_email);\n                setbeliver_mobileEdit(resData.data[0].beliver_mobile);\n                settranz_nameEdit(resData.data[0].tranz_name);\n                settranz_emailEdit(resData.data[0].tranz_email);\n                settranz_mobileEdit(resData.data[0].tranz_mobile);\n                setbypass_emailEdit(resData.data[0].bypass_email);\n                setbypass_mobileEdit(resData.data[0].bypass_mobile);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n\n    const deletefn = (edit_id) => {\n        setdelId(edit_id);\n        setShow(true);\n    };\n\n    useEffect(() => {\n        // var s_id = localStorage.getItem('tr_id')\n        // if (!id) {\n        //     history.push(\"Not_support\");\n        // }\n        GetallRecored();\n    }, []);\n\n    const exportPDFWithMethod = () => {\n        if (pdfExportComponent.current) {\n            pdfExportComponent.current.save();\n        }\n    };\n\n    const GetallRecored = () => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user`, requestOptionsget)\n            .then((response) => response.json())\n            .then((resData) => {\n                console.log(resData.data);\n                setVilakshanData(resData.data);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n    const initialValues = {\n        beliver_name: \"\",\n        beliver_company: 0,\n        beliver_email: 0,\n        beliver_mobile: 0,\n        tranz_name: 0,\n        tranz_email: 0,\n        tranz_mobile: 0,\n        bypass_email: \"\",\n        bypass_mobile: \"\",\n    };\n    const validate = Yup.object({\n        beliver_name: Yup.string().required(\"Required\"),\n        bypass_email: Yup.string().required(\"Required\"),\n        bypass_mobile: Yup.string().required(\"Required\"),\n    });\n    const OnSubmitForm = () => {\n        for (var i = 0; i < vilakshanData.length; i++) {\n            // alert(vilakshanData[i].beliver_email, beliver_email);\n            if (vilakshanData[i].beliver_email == beliver_email) {\n                setErrorText(\"Beliver Email Is Already Exist\");\n                return false;\n            } else if (vilakshanData[i].beliver_mobile == beliver_mobile) {\n                setErrorText(\"Beliver Mobile Is Already Exist\");\n                return false;\n            } else if (vilakshanData[i].beliver_company == beliver_company) {\n                setErrorText(\"Beliver Company Is Already Exist\");\n                return false;\n            } else {\n                setErrorText(\"Data Saved Successfull\");\n            }\n        }\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var rawrich = JSON.stringify({\n            beliver_name: beliver_name,\n            beliver_company: beliver_company,\n            beliver_email: beliver_email,\n            beliver_mobile: beliver_mobile,\n            tranz_name: tranz_name,\n            tranz_email: tranz_email,\n            tranz_mobile: tranz_mobile,\n            bypass_email: bypass_email,\n            bypass_mobile: bypass_mobile,\n            email_id: \"1\",\n            created_by: \"2\",\n        });\n        var requestOptionsrichtext = {\n            method: \"POST\",\n            headers: myHeaders,\n            body: rawrich,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user`, requestOptionsrichtext)\n            .then((response) => response.json())\n            .then((resData) => {\n                console.log(resData);\n                if (resData.status == 200) {\n                    // console.log(\"Data Added succesfully\");\n                    setSmShow(true);\n                    setTimeout(() => {\n                        setSmShow(false);\n                    }, 1000)\n\n                    setbeliver_name(\"\")\n                    setbeliver_company(\"\")\n                    setbeliver_email(\"\")\n                    setbeliver_mobile(\"\")\n                    settranz_name(\"\")\n                    settranz_email(\"\")\n                    settranz_mobile(\"\")\n                    setbypass_email(\"\")\n                    setbypass_mobile(\"\")\n                }\n                GetallRecored();\n                // seteditModal(false);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n\n\n    const getRandomNum = (length) => {\n        var randomNum =\n            (Math.pow(10, length).toString().slice(length - 1) +\n                Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\n        return randomNum;\n    }\n    const OnVerifyHandle = () => {\n        setShowResetOTPTrans(true)\n        setSeconds(0)\n        setsecondsfortrans(60)\n    }\n    const ResendBeliverDataTrans = () => {\n        setShowResetOTPTrans(true)\n        setSeconds(0)\n        setsecondsfortrans(60)\n    }\n    const HandleInputChange = (event) => {\n        let enterinput = event.target.value;\n    }\n    const HandleSubmit = () => {\n        const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\n        const sid = \"transganization2\"\n        const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\n        const from = \"9850674452\"\n        const to = \"8767984910\"\n        const body = \"Good Evening\"\n        var formdata = new FormData();\n        formdata.append('From', from)\n        formdata.append('To', to)\n        formdata.append('Body', body)\n        const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\n        axios.post(url,\n            {\n                withCredentials: true,\n                headers: {\n                    \"Accept\": \"application/x-www-form-urlencoded\",\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                data: formdata\n            },\n        )\n            .then((res) => {\n                console.log(`statusCode: ${res.statusCode}`)\n                console.log(res)\n            })\n            .catch((error) => {\n                console.error(error)\n            })\n\n        setshowHide(true);\n        setTimeout(() => {\n            setshowHide(false);\n        }, 1000)\n\n        setShowResetOTP(true);\n        const Believers = getRandomNum(6);\n        setBeliverOTP(Believers)\n        const trans = getRandomNum(6);\n        setTransOTP(trans)\n        setSeconds(60)\n    }\n    const ResendBeliverData = () => {\n        setShowResetOTP(true);\n        const Believers = getRandomNum(6);\n        setBeliverOTP(Believers)\n        const trans = getRandomNum(6);\n        setTransOTP(trans)\n        setSeconds(60)\n    }\n    const OnVerifyHandleConfirm = () => {\n        setShowResetOTPTrans(false)\n        setshowConfirmBox(true);\n    }\n    const HandleConfirmation = () => {\n        setShowPdf(1)\n    }\n    const logOut = () => {\n        localStorage.removeItem(\"transganizaion_id\")\n        history.push(\"admin-login\")\n    }\n\n\n    return (\n        <>\n            <Modal\n                size=\"sm\"\n                show={smShow}\n                onHide={() => setSmShow(false)}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Body >Form Saved Successful</Modal.Body>\n            </Modal>\n\n            <Modal\n                size=\"sm\"\n                show={Mdelete}\n                onHide={() => setMdelete(false)}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Body >Form Row Deleted Successfully</Modal.Body>\n            </Modal>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\n                </Modal.Header>\n                {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShow(false)}>\n                        Cance\n                    </Button>\n                    <Button variant=\"primary\" onClick={deleteConfirm}>\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            {/* For Edit */}\n\n            <Modal\n                size=\"lg\"\n                show={editModal}\n                onHide={handleClose}\n                aria-labelledby=\"example-modal-sizes-title-lg\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-lg\" style={{display:pointerEvent}}>\n                        Edit\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\",pointerEvents:pointerEvent }}>\n                        <div className=\"row clearfix\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                                <div style={{ marginLeft: \"40%\" }}>\n                                    <span ><b>{ErrorText}</b></span>\n                                </div>\n                                <div className=\"card p-4 \">\n                                    <div className=\"body p-5\">\n\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-6\">\n                                                <h2 >\n                                                    <strong>Believers Group</strong>\n                                                </h2>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Believers Name</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"Believers Name\"\n                                                        name=\"beliver_name\"\n                                                        onChange={(event) => {\n                                                            setbeliver_nameEdit(event.target.value);\n                                                        }}\n                                                        value={beliver_nameEdit}\n                                                    />\n                                                    {/* {formik.errors.beliver_name ? <div className='error'>{formik.errors.beliver_name}</div> : null} */}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Believers Companey</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"beliver_company\"\n                                                        onChange={(event) => {\n                                                            setbeliver_companyEdit(event.target.value);\n                                                        }}\n                                                        value={beliver_companyEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Believers Email</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"beliver_email\"\n                                                        onChange={(event) => {\n                                                            setbeliver_emailEdit(event.target.value);\n                                                        }}\n                                                        value={beliver_emailEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Believers Mobile</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"beliver_mobile\"\n                                                        onChange={(event) => {\n                                                            setbeliver_mobileEdit(event.target.value);\n                                                        }}\n                                                        value={beliver_mobileEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row clearfix mt-5\">\n                                            <div className=\"col-md-6\">\n                                                <h2 >\n                                                    <strong>Transganization Group</strong>\n                                                </h2>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Transganization Name</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"tranz_name\"\n                                                        onChange={(event) => {\n                                                            settranz_nameEdit(event.target.value);\n                                                        }}\n                                                        value={tranz_nameEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Transganization Email</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"tranz_email\"\n                                                        onChange={(event) => {\n                                                            settranz_emailEdit(event.target.value);\n                                                        }}\n                                                        value={tranz_emailEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Transganization Mobile</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"tranz_mobile\"\n                                                        onChange={(event) => {\n                                                            settranz_mobileEdit(event.target.value);\n                                                        }}\n                                                        value={tranz_mobileEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Bypass Email</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"OPERATIONAL EXCELLENCE\"\n                                                        name=\"bypass_email\"\n                                                        onChange={(event) => {\n                                                            setbypass_emailEdit(event.target.value);\n                                                        }}\n                                                        value={bypass_emailEdit}\n                                                    />\n                                                    {/* {formik.errors.bypass_email ? <div className='error'>{formik.errors.bypass_email}</div> : null} */}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Bypass Mobile</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"CUSTOMER INTIMACY\"\n                                                        name=\"bypass_mobile\"\n                                                        onChange={(event) => {\n                                                            setbypass_mobileEdit(event.target.value);\n                                                        }}\n                                                        value={bypass_mobileEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn savebtn waves-effect\"\n                                            onClick={() => OnSubmitUpdate(editId)}\n                                            style={{display:pointerEvent}}\n                                        >\n                                            Update\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n            </Modal>\n\n\n\n\n\n\n\n\n\n            <div className=\"container-fluid\" style={{ backgroundColor: \"white\" }} >\n\n                <div class=\"body_scroll\">\n                    <div className=\"content navbar-brand bg-bg-white p-2\" style={{ backgroundColor: \"white\" }}>\n                        <div className=\"container-fluid bg-bg-white\" >\n                            <div className=\"row bg-bg-white justify-content-center p-2\" >\n\n                                <div class=\"col-8 p-2\">\n                                    <b>Welcome To Parivartan Admin Dashboard</b>\n\n                                </div>\n                                <div class=\"col-2 align-center p-2\">\n                                    <img src=\"../../assets/images/authorplaceholder.jpg\" width=\"40\" alt=\"Transganization\" />\n                                    <b className=\"ml-4\">Admin </b>\n\n                                </div>\n\n                                <div class=\"col-1 align-center\" style={{ borderLeft: \"1px solid #C9C9C8\", height: \"60px\" }} >\n                                    <i style={{ cursor: \"pointer\", fontSize: \"24px\" }} onClick={logOut} class=\"zmdi zmdi-power p-3\"></i>\n                                </div>\n\n\n                            </div>\n\n                        </div >\n                    </div >\n\n                    <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\n                        <div className=\"row clearfix\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                                <div className=\"card p-4\">\n\n                                    <div className=\"body p-5\">\n                                        {/* <div className=\"header\">\n                                            <div className=\"col-6\">\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-10\">\n                                                        <h3 >\n                                                            <strong>Users</strong>\n                                                        </h3>\n                                                    </div>\n\n                                                    <div className=\"col-md-2 align-content-end bg-blue\">\n                                                        <Button>dd</Button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div> */}\n\n                                        <div className=\"row pl-4\" >\n                                            <div className=\"col-md-2\">\n                                                <h3 >\n                                                    <strong>Users</strong>\n                                                </h3>\n                                            </div>\n                                            <div className=\"col-md-10\">\n                                            {/* <button type=\"button\" className=\"btn savebtn waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={OnSubmitForm}>SUBMIT</button> */}\n\n                                                <button className=\"btn adminAddBtn\" style={{ marginLeft: \"86%\" }} onClick={()=>history.push(\"admin-AddUser\")}>Add User</button>\n                                            </div>\n                                           \n                                        </div>\n\n\n\n\n                                        <div className=\"body \">\n\n                                            {vilakshanData.length > 0 ? (\n                                                <div className=\"table-responsive\" id=\"Table\">\n                                                    <table className=\"table table-bordered\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>Believers Name</th>\n                                                                <th>Believers Company</th>\n                                                                <th>Believers Email</th>\n                                                                <th>Believers Mobile</th>\n                                                                {/* <th>Transganization Name</th>\n                                                                <th>Transganization Email</th>\n                                                                <th>Transganization Mobile</th>\n                                                                <th>Bypass Email</th>\n                                                                <th>Bypass Mobile</th> */}\n                                                                <th style={{ textAlign: \"center\" }}>Action</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {vilakshanData.map((item, key) => (\n                                                                <tr>\n                                                                    <td>{item.beliver_name}</td>\n                                                                    <td>{item.beliver_company}</td>\n                                                                    <td>{item.beliver_email}</td>\n                                                                    <td>{item.beliver_mobile}</td>\n                                                                    {/* <td>{item.tranz_name}</td>\n                                                                    <td>{item.tranz_email}</td>\n                                                                    <td>{item.tranz_mobile}</td>\n                                                                    <td>{item.bypass_email}</td>\n                                                                    <td>{item.bypass_mobile}</td> */}\n\n                                                                    {/* <i className=\"zmdi zmdi-assignment\"></i> */}\n                                                                    <td colspan=\"8\" class=\"col-xs-1\" align=\"center\">\n                                                                        <div className=\"btn-group\" >\n                                                                            <button\n                                                                                type=\"submit\"\n                                                                                title=\"edit\"\n                                                                                className=\"btn zmdi zmdi-eye waves-effect pull-left\"\n                                                                                style={{ float: \"left\" }}\n                                                                                onClick={() => viewfn(item.id)}\n                                                                            ></button>\n                                                                            <button\n                                                                                type=\"submit\"\n                                                                                title=\"edit\"\n                                                                                className=\"btn zmdi zmdi-edit waves-effect pull-left\"\n                                                                                style={{ float: \"left\" }}\n                                                                                onClick={() => editfn(item.id)}\n                                                                            ></button>\n                                                                            <button\n                                                                                type=\"submit\"\n                                                                                title=\"delete\"\n                                                                                className=\"btn btn-danger zmdi zmdi-delete waves-effect\"\n                                                                                onClick={() => deletefn(item.id)}\n                                                                            ></button>{\" \"}\n                                                                        </div>\n                                                                    </td>\n                                                                </tr>\n                                                            ))}\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            ) : null}\n\n\n                                        </div>\n\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* View Modal-----------------------> */}\n            < Modal\n                size=\"lg\"\n                show={viewModal}\n                onHide={handleClose}\n                aria-labelledby=\"example-modal-sizes-title-lg\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\n\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {vilakshanData.length > 0 ? (\n                        <div>\n                            <div id=\"divToPrint\" className=\"mt4\">\n                                <div className=\"row clearfix\">\n                                    <div className=\"col-md-12\">\n                                        <img\n                                            src=\"../../assets/images/transaganization.png\"\n                                            width=\"135\"\n                                            alt=\"Transganization\"\n                                        />\n                                        <h1\n                                            style={{\n                                                alignSelf: \"center\",\n                                                alignContent: \"center\",\n                                                textAlign: \"center\",\n                                                marginTop: \"20px\",\n                                            }}\n                                        >\n                                            Financial Model\n                                        </h1>\n                                    </div>\n                                </div>\n                                <div className=\"row clearfix\">\n                                    <div className=\"col-md-12\">\n                                        <div\n                                            style={{\n                                                alignSelf: \"center\",\n                                                alignContent: \"center\",\n                                                textAlign: \"center\",\n                                                fontWeight: \"bold\",\n                                                backgroundColor: \"lightgrey\",\n                                                width: \"150\",\n                                                border: \"1px solid black\",\n                                                marginLeft: \"0\",\n                                                padding: \"10px\",\n                                                margin: \"10px\",\n                                                marginTop: \"30px\",\n                                            }}\n                                        >\n                                            Vilakshan\n                                        </div>\n                                        <div className=\"table-responsive\" id=\"Table\">\n                                            <table className=\"table table-bordered\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>List of beliver_name</th>\n                                                        <th>Non Financial</th>\n                                                        <th>beliver_email</th>\n                                                        <th>beliver_mobile</th>\n                                                        <th>Volume Growth</th>\n                                                        <th>Value Growth</th>\n                                                        <th>Near/Far to PCB</th>\n                                                        <th>OPERATIONAL EXCELLENCE</th>\n                                                        <th>CUSTOMER INTIMACY</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {vilakshanData.map((itm, key) => (\n                                                        <tr>\n                                                            <td>{itm.beliver_name}</td>\n                                                            <td>{itm.beliver_company}</td>\n                                                            <td>{itm.beliver_email}</td>\n                                                            <td>{itm.beliver_mobile}</td>\n                                                            <td>{itm.tranz_name}</td>\n                                                            <td>{itm.tranz_email}</td>\n                                                            <td>{itm.tranz_mobile}</td>\n                                                            <td>{itm.bypass_email}</td>\n                                                            <td>{itm.bypass_mobile}</td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    ) : null}\n\n                </Modal.Body>\n            </Modal>\n\n\n        </>\n    );\n}\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Rebirth.js",["526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541"],"import React, { useState, useEffect } from \"react\";\r\nimport Editor from \"../../components/SunEditor\";\r\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Form(props) {\r\n  var s_id = localStorage.getItem('tr_id')\r\n  const history = useHistory();\r\n  // var id = localStorage.getItem(\"tr_id\");\r\n\r\n  const [inputList, setInputList] = useState([{ firstName: \"\" }]);\r\n  const [frameManan, setframeManan] = useState(\"\");\r\n  const [frameSadhna, setframeSadhna] = useState(\"\");\r\n  const [spritualFoundation, setspritualFoundation] = useState(\"\");\r\n  const [rebirthDataa, setrebirthDataa] = useState();\r\n  // handle input change\r\n  const [showData, setShowData] = useState(false);\r\n  const [smShow, setSmShow] = useState(false);\r\n\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n  const [Upid, setUpid] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, []);\r\n\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    // setShowData(false);\r\n    setviewModal(false);\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    console.log(\"In belGroup change handler \", list);\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { firstName: \"\" }]);\r\n    console.log(inputList);\r\n  };\r\n\r\n  const OnSubmitHandle = () => {\r\n    // alert(rebirthDataa);\r\n    if (rebirthDataa.length === 0) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      // inputList.map((item,key)=>{\r\n      var raw = JSON.stringify({\r\n        Search: inputList,\r\n        Manan: frameManan,\r\n        Sadhana: frameSadhna,\r\n        Spiritual: spritualFoundation,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n        updated_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/rebirth/`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully\");\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n              props.Onvalidate(true);\r\n            }, 1000)\r\n          }\r\n          GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      // inputList.map((item,key)=>{\r\n      var raw = JSON.stringify({\r\n        Search: inputList,\r\n        Manan: frameManan,\r\n        Sadhana: frameSadhna,\r\n        Spiritual: spritualFoundation,\r\n        email_id: s_id,\r\n        updated_by: s_id\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/rebirth/${Upid}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully\");\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n              props.Onvalidate(true);\r\n            }, 1000)\r\n          }\r\n          GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n\r\n  };\r\n\r\n  const GetallRecords = () => {\r\n    var myGetHeaders = new Headers();\r\n    myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myGetHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/rebirth/user/${s_id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (resData.data.length > 0) {\r\n          setUpid(resData.data[0].id);\r\n\r\n          setrebirthDataa(resData.data);\r\n          setframeManan(resData.data[0].Manan);\r\n          setframeSadhna(resData.data[0].Sadhana);\r\n          setspritualFoundation(resData.data[0].Spiritual);\r\n          // console.log(resData.data[0].Manan);\r\n          let MyValues = resData.data;\r\n          console.log(\"In UseEffect Function\", MyValues);\r\n          MyValues.map((item, key) => {\r\n            let fnameGroup = eval(item.Search);\r\n            console.log(\"Dataa to get map\", fnameGroup);\r\n            setInputList(fnameGroup);\r\n          });\r\n        }\r\n        setrebirthDataa(resData.data);\r\n\r\n        setShowData(true);\r\n      });\r\n  };\r\n\r\n  const handleChangeEditorsadhna = (newContent) => {\r\n    setframeSadhna(newContent);\r\n  };\r\n\r\n  const handleChangeEditorManan = (newContent) => {\r\n    setframeManan(newContent);\r\n  };\r\n\r\n  const handleChangeEditorSpritual = (newContent) => {\r\n    setspritualFoundation(newContent);\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"sm\"\r\n        show={smShow}\r\n        onHide={() => setSmShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n      <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n        <div className=\"row clearfix\"  >\r\n          <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n            <div className=\"card p-3\">\r\n              <div className=\"header\">\r\n              </div>\r\n              {showData ? (\r\n                <div className=\"body p-5\">\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>\r\n                          Search for Common Words that you can see in the story\r\n                        </strong>\r\n                      </h2>\r\n                    </div>\r\n                  </div>\r\n                  {inputList.map((x, i) => {\r\n                    console.log(\"map functtion\", x);\r\n                    return (\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-8\">\r\n                          <div className=\"form-group\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"List Down all possible Words\"\r\n                              name=\"firstName\"\r\n                              value={x.firstName}\r\n                              onChange={(e) => handleInputChange(e, i)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          {inputList.length !== 1 && (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\"\r\n                              onClick={() => handleRemoveClick(i)}\r\n                            >\r\n                              <strong>REMOVE</strong>\r\n                            </button>\r\n                          )}\r\n                          {inputList.length - 1 === i && (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                              onClick={handleAddClick}\r\n                            >\r\n                              <strong>ADD</strong>\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>\r\n                          Frame a Manan Statement with Words that resonate the\r\n                          most with you (Summarise Bhavana of Story in One Line)\r\n                        </strong>\r\n                      </h2>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-1\"></div>\r\n                    <div className=\"col-md-12\">\r\n                      <Editor\r\n                        contents={frameManan}\r\n                        getValue={handleChangeEditorManan}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>\r\n                          Frame a Sadhana Statement on how will you deliver your\r\n                          Manan to everyone\r\n                        </strong>\r\n                      </h2>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-1\"></div>\r\n                    <div className=\"col-md-12\">\r\n                      <Editor\r\n                        contents={frameSadhna}\r\n                        getValue={handleChangeEditorsadhna}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>\r\n                          List out Spiritual Foundations (Ref: Story, Examples\r\n                          which you have cited already)\r\n                        </strong>\r\n                      </h2>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-1\"></div>\r\n                    <div className=\"col-md-12\">\r\n                      <Editor\r\n                        contents={spritualFoundation}\r\n                        getValue={handleChangeEditorSpritual}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn savebtn waves-effect\"\r\n                    onClick={OnSubmitHandle}\r\n                  >\r\n                    SAVE  <i className=\"ml-1 zmdi zmdi-save \" />\r\n                  </button>\r\n\r\n                  {/* {ShowPdf ? ( */}\r\n                  {/* <div>\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary  waves-effect\"\r\n                      onClick={exportPDFWithMethod}\r\n                    >\r\n                      Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary  waves-effect\"\r\n                      onClick={ViewModel}\r\n                    >\r\n                      View  <i className=\"ml-1 zmdi zmdi-eye \" />                    </button>\r\n                  </div> */}\r\n                  {/* ) : null} */}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      {/* For Pdf -----------------------> */}\r\n      {/* <div\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"-3000px\",\r\n          top: 0,\r\n        }}\r\n      >\r\n\r\n        <PDFExport\r\n          paperSize=\"A4\"\r\n          margin=\"1cm\"\r\n          ref={pdfExportComponent} \r\n          forcePageBreak=\".page-break\"\r\n        >\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div>\r\n                    <div id=\"divToPrint\" className=\"mt4\">\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <img\r\n                            src=\"../../assets/images/transaganization.png\"\r\n                            width=\"135\"\r\n                            alt=\"Transganization\"\r\n                          />\r\n                          <h1\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              marginTop: \"20px\",\r\n                            }}\r\n                          >\r\n                            Purpose Discovery\r\n                          </h1>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"1px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"30px\",\r\n                            }}\r\n                          >\r\n                            Rebirth\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            1) Frame a Manan Statement with Words that resonate the most with you (Summarise Bhavana of Story in One Line)\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {frameManan.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            2) Frame a Sadhana Statement on how will you deliver your Manan to everyone\r\n\r\n\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {frameSadhna.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            3) List out Spiritual Foundations (Ref: Story, Examples which you have cited already)\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              marginLeft: \"0\",\r\n                              border: \"2px solid black\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {spritualFoundation.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList.slice(0, 2)}\r\n                            >\r\n                              <Column\r\n                                field=\"firstName\"\r\n                                title=\"List of Common Words that you can see in the story\"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </PDFExport>\r\n      </div> */}\r\n\r\n\r\n\r\n      {/* View Modal-----------------------> */}\r\n      <Modal\r\n        size=\"lg\"\r\n        show={viewModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div>\r\n                    <div id=\"divToPrint\" className=\"mt4\">\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <img\r\n                            src=\"../../assets/images/transaganization.png\"\r\n                            width=\"135\"\r\n                            alt=\"Transganization\"\r\n                          />\r\n                          <h1\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              marginTop: \"20px\",\r\n                            }}\r\n                          >\r\n                            Purpose Discovery\r\n                          </h1>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"1px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"30px\",\r\n                            }}\r\n                          >\r\n                            Rebirth\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            1) Frame a Manan Statement with Words that resonate the most with you (Summarise Bhavana of Story in One Line)\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {frameManan.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            2) Frame a Sadhana Statement on how will you deliver your Manan to everyone\r\n\r\n\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {frameSadhna.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            3) List out Spiritual Foundations (Ref: Story, Examples which you have cited already)\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              marginLeft: \"0\",\r\n                              border: \"2px solid black\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {spritualFoundation.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList.slice(0, 2)}\r\n                            >\r\n                              <Column\r\n                                field=\"firstName\"\r\n                                title=\"List of Common Words that you can see in the story\"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Admin/AddUser.js",["542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595"],"import React, { useState, useEffect } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport axios from 'axios';\nimport ModalSubmit from \"../../components/ModalSubmit\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Vilakshan(props) {\n    const history = useHistory();\n\n    let rows = [];\n    const [beliver_name, setbeliver_name] = useState(\"\");\n    const [beliver_company, setbeliver_company] = useState(\"\");\n    const [beliver_email, setbeliver_email] = useState(\"\");\n    const [beliver_mobile, setbeliver_mobile] = useState(\"\");\n    const [tranz_name, settranz_name] = useState(\"\");\n    const [tranz_email, settranz_email] = useState(\"\");\n    const [tranz_mobile, settranz_mobile] = useState(\"\");\n    const [bypass_email, setbypass_email] = useState(\"\");\n    const [bypass_mobile, setbypass_mobile] = useState(\"\");\n\n    const [editId, seteditId] = useState(\"\");\n    const [delId, setdelId] = useState(\"\");\n\n    const [beliver_nameEdit, setbeliver_nameEdit] = useState(\"\");\n    const [beliver_companyEdit, setbeliver_companyEdit] = useState(\"\");\n    const [beliver_emailEdit, setbeliver_emailEdit] = useState(\"\");\n    const [beliver_mobileEdit, setbeliver_mobileEdit] = useState(\"\");\n    const [tranz_nameEdit, settranz_nameEdit] = useState(\"\");\n    const [tranz_emailEdit, settranz_emailEdit] = useState(\"\");\n    const [tranz_mobileEdit, settranz_mobileEdit] = useState(\"\");\n    const [bypass_emailEdit, setbypass_emailEdit] =\n        useState(\"\");\n    const [bypass_mobileEdit, setbypass_mobileEdit] = useState(\"\");\n    const [smShow, setSmShow] = useState(false);\n    const [Mupdate, setMupdate] = useState(false);\n    const [Mdelete, setMdelete] = useState(false);\n\n    const [vilakshanData, setVilakshanData] = useState(\"\");\n    const [show, setShow] = useState(false);\n    const [editModal, seteditModal] = useState(false);\n\n\n    const [viewModal, setviewModal] = useState(false);\n    const [ShowPdf, setShowPdf] = useState(false);\n    const pdfExportComponent = React.useRef(null);\n    const [belConceptDataa, setbelConceptDataa] = useState();\n\n    const [checksVal, setchecksVal] = useState(false);\n    const [chks, setchks] = useState();\n    const [chks2, setchks2] = useState(false);\n\n\n    const [BeliverOTP, setBeliverOTP] = useState('');\n    const [transOTP, setTransOTP] = useState('');\n    const [seconds, setSeconds] = useState(0);\n    const [secondsfortrans, setsecondsfortrans] = useState(0);\n    const [ShowResetOTP, setShowResetOTP] = useState(true);\n    const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\n    const [showConfirmBox, setshowConfirmBox] = useState(false);\n\n    const [showHide, setshowHide] = useState(false);\n    const [ErrorText, setErrorText] = useState(\"\");\n\n\n    const ViewModel = () => {\n        setviewModal(true);\n    };\n\n    const yesFn = (checkVal, uid) => {\n        // alert(uid);\n        if (checkVal == \"false\") {\n            var checkVal = \"true\";\n            // alert(checkVal);\n        } else if (checkVal == \"true\") {\n            var checkVal = \"false\";\n            // alert(checkVal);\n        } else {\n            var checkVal = \"true\";\n            // alert(checkVal);\n        }\n\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var raw = JSON.stringify({\n            checkVal: checkVal,\n            email_id: \"1\",\n            created_by: \"1\",\n        });\n        var requestOptions = {\n            method: \"PUT\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user/checked/${uid}`, requestOptions)\n            .then((response) => response.json())\n            .then((resData) => {\n                // console.log(resData);\n                if (resData.status == 200) {\n                    console.log(\"updated\");\n                    // setMupdate(true);\n                    // setTimeout(() => {\n                    //   setMupdate(false);\n                    // }, 1000)\n                    // GetallRecored();\n                }\n            })\n            .catch((error) => console.log(\"error\", error));\n        setShow(false);\n        seteditModal(false);\n        GetallRecored();\n\n\n\n    };\n\n    const noFn = () => {\n        // alert(checksVal);\n\n        // setchks2(\"1\");\n        // setchks(false);\n        // setchks2(true);\n\n        // setchks(\"\")\n    };\n\n    const handleClose = () => {\n        setShow(false);\n        seteditModal(false);\n        setviewModal(false);\n\n    };\n\n\n    const deleteConfirm = () => {\n        // alert(delId);\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n            method: \"delete\",\n            headers: myHeaders,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user/${delId}`, requestOptionsget)\n            .then((response) => response.json())\n            .then((resData) => {\n                // seteditId(resData.data[0].id);\n                console.log(\"deleted\");\n                setMdelete(true);\n                // setMdelete(false);\n                setTimeout(() => {\n                    setMdelete(false);\n                }, 1000)\n\n                setShow(false);\n                GetallRecored();\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n    // const handleShow = () => setShow(true);\n\n    const OnSubmitUpdate = (edId) => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var raw = JSON.stringify({\n            beliver_name: beliver_nameEdit,\n            beliver_company: beliver_companyEdit,\n            beliver_email: beliver_emailEdit,\n            beliver_mobile: beliver_mobileEdit,\n            tranz_name: tranz_nameEdit,\n            tranz_email: tranz_emailEdit,\n            tranz_mobile: tranz_mobileEdit,\n            bypass_email: bypass_emailEdit,\n            bypass_mobile: bypass_mobileEdit,\n\n            email_id: \"0\",\n            created_by: \"0\",\n        });\n        var requestOptions = {\n            method: \"PUT\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user/${edId}`, requestOptions)\n            .then((response) => response.json())\n            .then((resData) => {\n                console.log(resData);\n                if (resData.status == 200) {\n                    console.log(\"updated\");\n                    // alert(\"ds\")\n                    setMupdate(true);\n                    // setMupdate(false);\n                    setTimeout(() => {\n                        setMupdate(false);\n                    }, 1000)\n                    GetallRecored();\n                }\n            })\n            .catch((error) => console.log(\"error\", error));\n\n        setShow(false);\n        seteditModal(false);\n    };\n    const editfn = (edit_id) => {\n        seteditModal(true);\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\",\n        };\n        fetch(\n            `http://localhost:9002/masters/parivartan_user/${edit_id}`,\n            requestOptionsget\n        )\n            .then((response) => response.json())\n            .then((resData) => {\n                seteditId(resData.data[0].id);\n                setbeliver_nameEdit(resData.data[0].beliver_name);\n                setbeliver_companyEdit(resData.data[0].beliver_company);\n                setbeliver_emailEdit(resData.data[0].beliver_email);\n                setbeliver_mobileEdit(resData.data[0].beliver_mobile);\n                settranz_nameEdit(resData.data[0].tranz_name);\n                settranz_emailEdit(resData.data[0].tranz_email);\n                settranz_mobileEdit(resData.data[0].tranz_mobile);\n                setbypass_emailEdit(resData.data[0].bypass_email);\n                setbypass_mobileEdit(resData.data[0].bypass_mobile);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n    const deletefn = (edit_id) => {\n        setdelId(edit_id);\n        setShow(true);\n    };\n\n    useEffect(() => {\n        // var s_id = localStorage.getItem('tr_id')\n        // if (!id) {\n        //     history.push(\"Not_support\");\n        // }\n        GetallRecored();\n    }, []);\n\n    const exportPDFWithMethod = () => {\n        if (pdfExportComponent.current) {\n            pdfExportComponent.current.save();\n        }\n    };\n\n    const GetallRecored = () => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user`, requestOptionsget)\n            .then((response) => response.json())\n            .then((resData) => {\n                console.log(resData.data);\n                setVilakshanData(resData.data);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n    const initialValues = {\n        beliver_name: \"\",\n        beliver_company: 0,\n        beliver_email: 0,\n        beliver_mobile: 0,\n        tranz_name: 0,\n        tranz_email: 0,\n        tranz_mobile: 0,\n        bypass_email: \"\",\n        bypass_mobile: \"\",\n    };\n    const validate = Yup.object({\n        beliver_name: Yup.string().required(\"Required\"),\n        bypass_email: Yup.string().required(\"Required\"),\n        bypass_mobile: Yup.string().required(\"Required\"),\n    });\n    const OnSubmitForm = () => {\n        for (var i = 0; i < vilakshanData.length; i++) {\n            // alert(vilakshanData[i].beliver_email, beliver_email);\n            if (vilakshanData[i].beliver_email == beliver_email) {\n                setErrorText(\"Beliver Email Is Already Exist\");\n                return false;\n            } else if (vilakshanData[i].beliver_mobile == beliver_mobile) {\n                setErrorText(\"Beliver Mobile Is Already Exist\");\n                return false;\n            } else if (vilakshanData[i].beliver_company == beliver_company) {\n                setErrorText(\"Beliver Company Is Already Exist\");\n                return false;\n            } else {\n                setErrorText(\"Data Saved Successfull\");\n            }\n        }\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var rawrich = JSON.stringify({\n            beliver_name: beliver_name,\n            beliver_company: beliver_company,\n            beliver_email: beliver_email,\n            beliver_mobile: beliver_mobile,\n            tranz_name: tranz_name,\n            tranz_email: tranz_email,\n            tranz_mobile: tranz_mobile,\n            bypass_email: bypass_email,\n            bypass_mobile: bypass_mobile,\n            email_id: \"1\",\n            created_by: \"2\",\n        });\n        var requestOptionsrichtext = {\n            method: \"POST\",\n            headers: myHeaders,\n            body: rawrich,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/parivartan_user`, requestOptionsrichtext)\n            .then((response) => response.json())\n            .then((resData) => {\n                console.log(resData);\n                if (resData.status == 200) {\n                    // console.log(\"Data Added succesfully\");\n                    setSmShow(true);\n                    setTimeout(() => {\n                        setSmShow(false);\n                    }, 1000)\n\n                    setbeliver_name(\"\")\n                    setbeliver_company(\"\")\n                    setbeliver_email(\"\")\n                    setbeliver_mobile(\"\")\n                    settranz_name(\"\")\n                    settranz_email(\"\")\n                    settranz_mobile(\"\")\n                    setbypass_email(\"\")\n                    setbypass_mobile(\"\")\n                }\n                GetallRecored();\n                // seteditModal(false);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n\n\n    const getRandomNum = (length) => {\n        var randomNum =\n            (Math.pow(10, length).toString().slice(length - 1) +\n                Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\n        return randomNum;\n    }\n    const OnVerifyHandle = () => {\n        setShowResetOTPTrans(true)\n        setSeconds(0)\n        setsecondsfortrans(60)\n    }\n    const ResendBeliverDataTrans = () => {\n        setShowResetOTPTrans(true)\n        setSeconds(0)\n        setsecondsfortrans(60)\n    }\n    const HandleInputChange = (event) => {\n        let enterinput = event.target.value;\n    }\n    const HandleSubmit = () => {\n        const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\n        const sid = \"transganization2\"\n        const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\n        const from = \"9850674452\"\n        const to = \"8767984910\"\n        const body = \"Good Evening\"\n        var formdata = new FormData();\n        formdata.append('From', from)\n        formdata.append('To', to)\n        formdata.append('Body', body)\n        const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\n        axios.post(url,\n            {\n                withCredentials: true,\n                headers: {\n                    \"Accept\": \"application/x-www-form-urlencoded\",\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                data: formdata\n            },\n        )\n            .then((res) => {\n                console.log(`statusCode: ${res.statusCode}`)\n                console.log(res)\n            })\n            .catch((error) => {\n                console.error(error)\n            })\n\n        setshowHide(true);\n        setTimeout(() => {\n            setshowHide(false);\n        }, 1000)\n\n        setShowResetOTP(true);\n        const Believers = getRandomNum(6);\n        setBeliverOTP(Believers)\n        const trans = getRandomNum(6);\n        setTransOTP(trans)\n        setSeconds(60)\n    }\n    const ResendBeliverData = () => {\n        setShowResetOTP(true);\n        const Believers = getRandomNum(6);\n        setBeliverOTP(Believers)\n        const trans = getRandomNum(6);\n        setTransOTP(trans)\n        setSeconds(60)\n    }\n    const OnVerifyHandleConfirm = () => {\n        setShowResetOTPTrans(false)\n        setshowConfirmBox(true);\n    }\n    const HandleConfirmation = () => {\n        setShowPdf(1)\n    }\n    const logOut = () => {\n        localStorage.removeItem(\"transganizaion_id\")\n        history.push(\"admin-login\")\n    }\n\n\n    return (\n        <>\n            <Modal\n                size=\"sm\"\n                show={smShow}\n                onHide={() => setSmShow(false)}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Body >Form Saved Successful</Modal.Body>\n            </Modal>\n\n            <Modal\n                size=\"sm\"\n                show={Mdelete}\n                onHide={() => setMdelete(false)}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Body >Form Row Deleted Successfully</Modal.Body>\n            </Modal>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\n                </Modal.Header>\n                {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShow(false)}>\n                        Cance\n                    </Button>\n                    <Button variant=\"primary\" onClick={deleteConfirm}>\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            {/* For Edit */}\n\n            <Modal\n                size=\"lg\"\n                show={editModal}\n                onHide={handleClose}\n                aria-labelledby=\"example-modal-sizes-title-lg\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\n                        Edit\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container-fluid\" style={{ backgroundColor: \"F3F6F9\" }}>\n                        <div className=\"row clearfix\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                                <div style={{ marginLeft: \"40%\" }}>\n                                    <span ><b>{ErrorText}</b></span>\n\n                                </div>\n                                <div className=\"card p-4 mt-2\">\n                                    <div className=\"body p-5\">\n\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-6\">\n                                                <h2 >\n                                                    <strong>Believers Group</strong>\n                                                </h2>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Believers Name</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"Believers Name\"\n                                                        name=\"beliver_name\"\n                                                        onChange={(event) => {\n                                                            setbeliver_nameEdit(event.target.value);\n                                                        }}\n                                                        value={beliver_nameEdit}\n                                                    />\n                                                    {/* {formik.errors.beliver_name ? <div className='error'>{formik.errors.beliver_name}</div> : null} */}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Believers Companey</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"beliver_company\"\n                                                        onChange={(event) => {\n                                                            setbeliver_companyEdit(event.target.value);\n                                                        }}\n                                                        value={beliver_companyEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Believers Email</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"beliver_email\"\n                                                        onChange={(event) => {\n                                                            setbeliver_emailEdit(event.target.value);\n                                                        }}\n                                                        value={beliver_emailEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Believers Mobile</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"beliver_mobile\"\n                                                        onChange={(event) => {\n                                                            setbeliver_mobileEdit(event.target.value);\n                                                        }}\n                                                        value={beliver_mobileEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row clearfix mt-5\">\n                                            <div className=\"col-md-6\">\n                                                <h2 >\n                                                    <strong>Transganization Group</strong>\n                                                </h2>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Transganization Name</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"tranz_name\"\n                                                        onChange={(event) => {\n                                                            settranz_nameEdit(event.target.value);\n                                                        }}\n                                                        value={tranz_nameEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Transganization Email</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"tranz_email\"\n                                                        onChange={(event) => {\n                                                            settranz_emailEdit(event.target.value);\n                                                        }}\n                                                        value={tranz_emailEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Transganization Mobile</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        className=\"form-control show-tick\"\n                                                        as=\"select\"\n                                                        name=\"tranz_mobile\"\n                                                        onChange={(event) => {\n                                                            settranz_mobileEdit(event.target.value);\n                                                        }}\n                                                        value={tranz_mobileEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Bypass Email</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"OPERATIONAL EXCELLENCE\"\n                                                        name=\"bypass_email\"\n                                                        onChange={(event) => {\n                                                            setbypass_emailEdit(event.target.value);\n                                                        }}\n                                                        value={bypass_emailEdit}\n                                                    />\n                                                    {/* {formik.errors.bypass_email ? <div className='error'>{formik.errors.bypass_email}</div> : null} */}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row clearfix\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"card-inside-title\">\n                                                    <strong>Bypass Mobile</strong>\n                                                </h2>\n                                            </div>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"CUSTOMER INTIMACY\"\n                                                        name=\"bypass_mobile\"\n                                                        onChange={(event) => {\n                                                            setbypass_mobileEdit(event.target.value);\n                                                        }}\n                                                        value={bypass_mobileEdit}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn savebtn waves-effect\"\n                                            onClick={() => OnSubmitUpdate(editId)}\n                                        >\n                                            Update\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n            </Modal>\n\n\n\n\n\n\n\n\n\n            <div className=\"container-fluid\" style={{ backgroundColor: \"white\" }} >\n\n                <div class=\"body_scroll\">\n                    <div className=\"content navbar-brand bg-bg-white p-2\" style={{ backgroundColor: \"white\" }}>\n                        <div className=\"container-fluid bg-bg-white\" >\n                            <div className=\"row bg-bg-white justify-content-center p-2\" >\n                                <div class=\"col-1 \"  >\n                                    <i title=\"back\" style={{ cursor: \"pointer\", fontSize: \"24px\", borderRight: \"1px solid #C9C9C8\", height: \"60px\" }} onClick={() => history.push(\"/Admin/admin-dashboard\")} class=\"zmdi zmdi-mail-reply p-3\"></i>\n                                    {/* style={{ borderLeft: \"1px solid #C9C9C8\", height: \"60px\" }} */}\n                                </div>\n                                <div class=\"col-8 p-2\">\n\n                                    <b>Welcome To Parivartan Admin Dashboard</b>\n\n                                </div>\n                                <div class=\"col-2 align-center p-2\">\n                                    <img src=\"../../assets/images/authorplaceholder.jpg\" width=\"40\" alt=\"Transganization\" />\n                                    <b className=\"ml-4\">Admin </b>\n\n                                </div>\n\n                                <div class=\"col-1 align-center\" style={{ borderLeft: \"1px solid #C9C9C8\", height: \"60px\" }} >\n                                    <i style={{ cursor: \"pointer\", fontSize: \"24px\" }} onClick={logOut} class=\"zmdi zmdi-power p-3\"></i>\n                                </div>\n\n\n                            </div>\n\n                        </div >\n                    </div >\n\n                    <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\n                        <div className=\"row clearfix\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                                <div className=\"card p-3\">\n                                    <div className=\"body p-5\" >\n                                        <div className=\"row \" style={{ marginLeft: \"12%\" }} >\n\n                                            <div className=\"col-6\">\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-6\">\n                                                        <h2 >\n                                                            <strong>Believers Group</strong>\n                                                        </h2>\n                                                    </div>\n\n                                                </div>\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-12\">\n                                                        <h2 className=\"card-inside-title\">\n                                                            <strong>Believers Name</strong>\n                                                        </h2>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                placeholder=\"Believers Name\"\n                                                                name=\"beliver_name\"\n                                                                onChange={(event) => {\n                                                                    setbeliver_name(event.target.value);\n                                                                }}\n                                                                value={beliver_name}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-12\">\n                                                        <h2 className=\"card-inside-title\">\n                                                            <strong>Believers Company</strong>\n                                                        </h2>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"beliver_company\"\n                                                                placeholder=\"Believers Company\"\n                                                                onChange={(event) => {\n                                                                    setbeliver_company(event.target.value);\n                                                                }}\n                                                                value={beliver_company}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-12\">\n                                                        <h2 className=\"card-inside-title\">\n                                                            <strong>Believers Email</strong>\n                                                        </h2>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"beliver_email\"\n                                                                placeholder=\"Believers Email\"\n                                                                onChange={(event) => {\n                                                                    setbeliver_email(event.target.value);\n                                                                }}\n                                                                value={beliver_email}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-12\">\n                                                        <h2 className=\"card-inside-title\">\n                                                            <strong>Believers Mobile</strong>\n                                                        </h2>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"beliver_mobile\"\n                                                                placeholder=\"Believers Mobile\"\n                                                                onChange={(event) => {\n                                                                    setbeliver_mobile(event.target.value);\n                                                                }}\n                                                                value={beliver_mobile}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <button type=\"button\" className=\"btn savebtn waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={OnSubmitForm}>SUBMIT</button>\n\n                                            </div>\n\n\n                                            <div className=\"col-6\">\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-6 \">\n                                                        <h2 >\n                                                            <strong>Transganization Group</strong>\n                                                        </h2>\n                                                    </div>\n\n                                                </div>\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-12\">\n                                                        <h2 className=\"card-inside-title\">\n                                                            <strong>Transganization Name</strong>\n                                                        </h2>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"tranz_name\"\n                                                                placeholder=\"Transganization Name\"\n                                                                onChange={(event) => {\n                                                                    settranz_name(event.target.value);\n                                                                }}\n                                                                value={tranz_name}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-12\">\n                                                        <h2 className=\"card-inside-title\">\n                                                            <strong>Transganization Email</strong>\n                                                        </h2>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"tranz_email\"\n                                                                placeholder=\"Transganization Email\"\n                                                                onChange={(event) => {\n                                                                    settranz_email(event.target.value);\n                                                                }}\n                                                                value={tranz_email}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-12\">\n                                                        <h2 className=\"card-inside-title\">\n                                                            <strong>Transganization Mobile</strong>\n                                                        </h2>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"tranz_mobile\"\n                                                                placeholder=\"Transganization Mobile\"\n                                                                onChange={(event) => {\n                                                                    settranz_mobile(event.target.value);\n                                                                }}\n                                                                value={tranz_mobile}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-12\">\n                                                        <h2 className=\"card-inside-title\">\n                                                            <strong>Bypass Email</strong>\n                                                        </h2>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                placeholder=\"Bypass Email\"\n                                                                name=\"bypass_email\"\n                                                                onChange={(event) => {\n                                                                    setbypass_email(event.target.value);\n                                                                }}\n                                                                value={bypass_email}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row clearfix\">\n                                                    <div className=\"col-md-12\">\n                                                        <h2 className=\"card-inside-title\">\n                                                            <strong>Bypass Mobile</strong>\n                                                        </h2>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                placeholder=\"bypass_mobile\"\n                                                                name=\"Bypass Mobile\"\n                                                                onChange={(event) => {\n                                                                    setbypass_mobile(event.target.value);\n                                                                }}\n                                                                value={bypass_mobile}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n\n                                            </div>\n\n                                        </div>\n\n\n\n\n\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* View Modal-----------------------> */}\n            < Modal\n                size=\"lg\"\n                show={viewModal}\n                onHide={handleClose}\n                aria-labelledby=\"example-modal-sizes-title-lg\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\n\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {vilakshanData.length > 0 ? (\n                        <div>\n                            <div id=\"divToPrint\" className=\"mt4\">\n                                <div className=\"row clearfix\">\n                                    <div className=\"col-md-12\">\n                                        <img\n                                            src=\"../../assets/images/transaganization.png\"\n                                            width=\"135\"\n                                            alt=\"Transganization\"\n                                        />\n                                        <h1\n                                            style={{\n                                                alignSelf: \"center\",\n                                                alignContent: \"center\",\n                                                textAlign: \"center\",\n                                                marginTop: \"20px\",\n                                            }}\n                                        >\n                                            Financial Model\n                                        </h1>\n                                    </div>\n                                </div>\n                                <div className=\"row clearfix\">\n                                    <div className=\"col-md-12\">\n                                        <div\n                                            style={{\n                                                alignSelf: \"center\",\n                                                alignContent: \"center\",\n                                                textAlign: \"center\",\n                                                fontWeight: \"bold\",\n                                                backgroundColor: \"lightgrey\",\n                                                width: \"150\",\n                                                border: \"1px solid black\",\n                                                marginLeft: \"0\",\n                                                padding: \"10px\",\n                                                margin: \"10px\",\n                                                marginTop: \"30px\",\n                                            }}\n                                        >\n                                            Vilakshan\n                                        </div>\n                                        <div className=\"table-responsive\" id=\"Table\">\n                                            <table className=\"table table-bordered\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>List of beliver_name</th>\n                                                        <th>Non Financial</th>\n                                                        <th>beliver_email</th>\n                                                        <th>beliver_mobile</th>\n                                                        <th>Volume Growth</th>\n                                                        <th>Value Growth</th>\n                                                        <th>Near/Far to PCB</th>\n                                                        <th>OPERATIONAL EXCELLENCE</th>\n                                                        <th>CUSTOMER INTIMACY</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {vilakshanData.map((itm, key) => (\n                                                        <tr>\n                                                            <td>{itm.beliver_name}</td>\n                                                            <td>{itm.beliver_company}</td>\n                                                            <td>{itm.beliver_email}</td>\n                                                            <td>{itm.beliver_mobile}</td>\n                                                            <td>{itm.tranz_name}</td>\n                                                            <td>{itm.tranz_email}</td>\n                                                            <td>{itm.tranz_mobile}</td>\n                                                            <td>{itm.bypass_email}</td>\n                                                            <td>{itm.bypass_mobile}</td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    ) : null}\n\n                </Modal.Body>\n            </Modal>\n\n\n        </>\n    );\n}\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Session01.js",["596","597","598","599"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Reflection from './Reflection';\r\nimport Discovery from './Discovery';\r\nimport Rebirth from './Rebirth';\r\nimport Validate from './Validate'\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    borderColor: \"divider\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [validate, setvalidate] = useState(false)\r\n  const [validateDiscovery, setvalidateDiscovery] = useState(false)\r\n  const [validateRebirth, setvalidateRebirth] = useState(false)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  // useEffect(()=>{\r\n  //   var myGetHeaders = new Headers();\r\n  //   myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n  //   var requestOptions = {\r\n  //                   method: \"GET\",\r\n  //                   headers:myGetHeaders,           \r\n  //                   redirect: \"follow\",\r\n  //               };\r\n  //               fetch(`http://localhost:9002/masters/rebirth/`+`${1}`, requestOptions)\r\n  //                   .then((response) => response.json())\r\n  //                   .then((resData) => {                       \r\n  //                       let MyValues=resData.data;\r\n  //                       MyValues.map((item,key)=>{    \r\n  //                         if(item.submit_flag==1){\r\n  //                           setvalidate(true); \r\n  //                           console.log(\"validate\",item.submit_flag)                       \r\n  //                         }                          \r\n  //                       })\r\n  //                     })\r\n  // },[])\r\n\r\n  const OnValidate = (e) => {\r\n    setValue(3);\r\n    setvalidate(e);\r\n  }\r\n  const OnValidateFirst = (e) => {\r\n    setValue(1)\r\n    setvalidateDiscovery(e);\r\n\r\n  }\r\n  const OnValidateSecond = (e) => {\r\n    setValue(2)\r\n    setvalidateRebirth(e);\r\n\r\n  }\r\n  return (\r\n\r\n    <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n\r\n      <div class=\"body_scroll\">\r\n        <div className=\"block-header\">\r\n          <div className=\"row\">\r\n            <div class=\"col-lg-7 col-md-6 col-sm-12 font-weight-normal\">\r\n              {/* <h3>Soch - Spiritual Foundation</h3><div className=\"col-lg-7 col-md-6 col-sm-12\"> */}\r\n              <h2>Soch - Spiritual Foundation</h2>\r\n              \r\n\r\n            {/* <div style={{ marginTop: 10 }}>\r\n              </div> */}\r\n            <button class=\"btn btn-primary btn-icon mobile_menu\" type=\"button\"><i class=\"zmdi zmdi-sort-amount-desc\"></i></button>\r\n          </div>\r\n          <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n            {/* <button\r\n                className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-arrow-right\"></i>\r\n              </button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.root} style={{ color: \"#60C0C9\" }}>\r\n        {/* <AppBar position=\"static\"> */}\r\n        <Tabs value={value} textColor=\"primary\" variant=\"standard\" indicatorColor=\"primary\" width={5} aria-label=\"primary tabs example\" onChange={handleChange} >\r\n          <Tab className=\"col-3 font-weight-bold\" label=\"Reflection\" {...a11yProps(0)} />\r\n          {/*<Tab className=\"col-3 font-weight-bold\" label=\"Discovery\" {...a11yProps(1)} />\r\n            <Tab className=\"col-3 font-weight-bold\" label=\"Rebirth\" {...a11yProps(2)} /> */}\r\n          {validateDiscovery ? (<Tab label=\"Discovery\" className=\"col-2 font-weight-bold\" {...a11yProps(1)} />) : (<Tab label=\"Discovery\" className=\"col-2 font-weight-bold\" disabled {...a11yProps(1)} />)}\r\n\r\n          {validateRebirth ? (<Tab label=\"Rebirth\" className=\"col-2 font-weight-bold\"  {...a11yProps(2)} />) : (<Tab label=\"Rebirth\" className=\"col-2 font-weight-bold\" disabled {...a11yProps(2)} />)}\r\n\r\n          {validate ? (<Tab label=\"Validate\" className=\"col-2 font-weight-bold\"  {...a11yProps(3)} />) : (<Tab label=\"Validate\" className=\"col-2 font-weight-bold\" disabled {...a11yProps(3)} />)}\r\n        </Tabs>\r\n        {/* </AppBar> */}\r\n        <TabPanel value={value} index={0}>\r\n          <Reflection OnValidateFirst={OnValidateFirst} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <Discovery OnValidateSecond={OnValidateSecond} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2}>\r\n          <Rebirth Onvalidate={OnValidate} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} >\r\n          <Validate />\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n    </section >\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/Cutomer.js",["600","601","602"],"import React, { useEffect, useState } from \"react\";\r\nimport Tab1 from \"../Parivartan03/CustomerTable\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CustomeTabs from './tabs';\r\nimport Tab2Table from \"./tab2table\"\r\nimport Protected_Ui from \"../Protected_Ui\";\r\n// import SideBar from \"./SideBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Form() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [tab1Validate, settab1Validate] = useState(false);\r\n  const [tab2Validate, settab2Validate] = useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const OnValidateTab1 = (e) => {\r\n    setValue(1);\r\n    settab1Validate(e);\r\n  }\r\n  const OnValidateTab2 = (e) => {\r\n    setValue(2);\r\n    settab2Validate(e);\r\n  }\r\n\r\n  return (\r\n    <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n      {/* <SideBar /> */}\r\n\r\n      <div class=\"body_scroll\">\r\n        <div className=\"block-header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n              <h2>Customer Mind Map </h2>\r\n              <button\r\n                className=\"btn btn-primary btn-icon mobile_menu\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n               {/* <button\r\n                className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-arrow-right\"></i>\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.root} style={{ color: \"#60C0C9\" }}>\r\n\r\n          {/* <AppBar position=\"static\"> */}\r\n          <Tabs\r\n            value={value}\r\n            textColor=\"primary\" variant=\"standard\" indicatorColor=\"primary\" width={5} aria-label=\"primary tabs example\"\r\n            onChange={handleChange}\r\n          >\r\n            <Tab label=\"Tab 1\"  {...a11yProps(0)} />\r\n            {/* <Tab label=\"Tab 2\" {...a11yProps(1)} /> */}\r\n            {tab1Validate ? (<Tab label=\"Tab 2\" className=\"col-2 font-weight-bold\" {...a11yProps(1)} />) : (<Tab label=\"Tab 2\" disabled className=\"col-2 font-weight-bold\" {...a11yProps(1)} />)}\r\n            {tab2Validate ? (<Tab label=\"Tab 3\" className=\"col-2 font-weight-bold\" {...a11yProps(2)} />) : (<Tab label=\"Tab 3\" disabled className=\"col-2 font-weight-bold\" {...a11yProps(2)} />)}\r\n\r\n            {/* <Tab label=\"Tab 3\" {...a11yProps(2)} /> */}\r\n          </Tabs>\r\n          {/* </AppBar> */}\r\n          <TabPanel value={value} index={0}  >\r\n            <Tab1 OnValidateTab1={OnValidateTab1} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1} >\r\n            <Tab2Table OnValidateTab2={OnValidateTab2} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <CustomeTabs />\r\n          </TabPanel>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/MainPage.js",["603","604","605"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CustomerSegmentation from \"../BuisnessModel/customerSegment\";\r\nimport Plyground from \"../BuisnessModel/plyground\"\r\nimport ValueProposition from \"../BuisnessModel/valueProposition\"\r\nimport CompetitionSheet from \"./compettionSheet\"\r\nimport StategyMap from \"../BuisnessModel/strategyMap\"\r\nimport FinalizeCompetition from \"../BuisnessModel/finalizeCompetition\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [validate, setvalidate] = useState(false)\r\n  const [validateTab1, setvalidateTab1] = useState(false)\r\n  const [validateTab2, setvalidateTab2] = useState(false)\r\n  const [validateTab3, setvalidateTab3] = useState(false)\r\n  const [validateTab4, setvalidateTab4] = useState(false)\r\n\r\n  const [Strategyvalidate, setStrategyvalidate] = useState(false)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const OnValidate = (e) => {\r\n    setValue(3);\r\n    setvalidate(e);\r\n  }\r\n  const OnValidateStrategy = (e) => {\r\n    setValue(5);\r\n    setStrategyvalidate(e);\r\n  }\r\n\r\n  const OnValidateTab1 = (e) => {\r\n    // alert(\"hi shubh\")\r\n\r\n    setValue(1);\r\n    setvalidateTab1(e);\r\n  }\r\n  const OnValidateTab2 = (e) => {\r\n    setValue(2);\r\n    setvalidateTab2(e);\r\n  }\r\n  const OnValidateTab3 = (e) => {\r\n    setValue(3);\r\n    setvalidateTab3(e);\r\n  }\r\n  const OnValidateTab4 = (e) => {\r\n    setValue(4);\r\n    setvalidateTab4(e);\r\n  }\r\n  return (\r\n    <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n\r\n      <div class=\"body_scroll\">\r\n        <div className=\"block-header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n              <h2>Value Proposition</h2>\r\n              <button\r\n                className=\"btn btn-primary btn-icon mobile_menu\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n              {/* <button\r\n                className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-arrow-right\"></i>\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.root}>\r\n          {/* <AppBar position=\"static\"> */}\r\n          <Tabs value={value} textColor=\"primary\" variant=\"standard\" indicatorColor=\"primary\" width={5} aria-label=\"primary tabs example\" onChange={handleChange} >\r\n            <Tab className=\"col-3 font-weight-bold\" label=\"Customer Segmentation\" {...a11yProps(0)} />\r\n            {/* <Tab label=\"Playground Business Model\" {...a11yProps(1)} /> */}\r\n            {/* <Tab label=\"Value Proposition\" {...a11yProps(2)} /> */}\r\n            {/* <Tab label=\"Competition Sheet\" {...a11yProps(3)} />\r\n              <Tab label=\"Strategy Map\" {...a11yProps(4)} /> */}\r\n            {/* {validateTab1 ? (<Tab label=\"Customer Segmentation\" {...a11yProps(0)} />) : (<Tab label=\"Customer Segmentation\" disabled {...a11yProps(0)} />)} */}\r\n            {validateTab1 ? (<Tab label=\"Playground Business Model\" className=\"ml-2 font-weight-bold\" {...a11yProps(1)} />) : (<Tab label=\"Playground Business Model\" disabled className=\"ml-2 font-weight-bold\" {...a11yProps(1)} />)}\r\n            {validateTab2 ? (<Tab label=\"Value Proposition\" className=\"ml-2 font-weight-bold\" {...a11yProps(2)} />) : (<Tab label=\"Value Proposition\" disabled className=\"ml-2 font-weight-bold\" {...a11yProps(2)} />)}\r\n\r\n            {validateTab3 ? (<Tab label=\"Competition Sheet\" className=\"ml-2 font-weight-bold\" {...a11yProps(3)} />) : (<Tab label=\"Competition Sheet\" disabled className=\"ml-2 font-weight-bold\" {...a11yProps(3)} />)}\r\n            {validateTab4 ? (<Tab label=\"Finalize Competition Sheet\" className=\"ml-2 font-weight-bold\" {...a11yProps(4)} />) : (<Tab label=\"Finalize Competition Sheet\" disabled className=\"ml-2 font-weight-bold\" {...a11yProps(4)} />)}\r\n\r\n            {Strategyvalidate ? (<Tab label=\"Strategy Map\" className=\"ml-2 font-weight-bold\" {...a11yProps(5)} />) : (<Tab label=\"Strategy Map\" disabled className=\"ml-2 font-weight-bold\" {...a11yProps(5)} />)}\r\n\r\n          </Tabs>\r\n          {/* </AppBar> */}\r\n          <TabPanel value={value} index={0}>\r\n            <CustomerSegmentation OnValidateTab1={OnValidateTab1} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <Plyground OnValidateTab2={OnValidateTab2} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <ValueProposition OnValidateTab3={OnValidateTab3} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={3}>\r\n            <CompetitionSheet OnValidateTab4={OnValidateTab4} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={4}>\r\n            <FinalizeCompetition OnValidateStrategy={OnValidateStrategy} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={5}>\r\n            <StategyMap />\r\n          </TabPanel>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan05/parivartan5.js",["606","607","608","609","610","611","612","613"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Vilakshan from \"./vilakshan\";\r\nimport Dashboard from \"./Dashboard\";\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Parivartan5Tabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <section class=\"content\" style={{backgroundColor:\"white\"}}>\r\n      <div class=\"body_scroll\">\r\n        <div className=\"block-header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n              <h2>Vilakshan</h2>\r\n              <button\r\n                className=\"btn btn-primary btn-icon mobile_menu\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n               {/* <button\r\n                className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-arrow-right\"></i>\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Vilakshan />\r\n        {/* <div className={classes.root}>\r\n          <AppBar position=\"static\">\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n              <Tab label=\"Vilakshan\" {...a11yProps(0)} />\r\n              <Tab label=\"Dashboard\" {...a11yProps(1)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <TabPanel value={value} index={0}>\r\n            <Vilakshan />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <Dashboard />\r\n          </TabPanel>\r\n        </div> */}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan04/MainPage.js",["614"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Plyground from \"../Parivartan04/busiPlayground\";\r\nimport NonNegotiables from \"../Parivartan04/NonNegotiables\";\r\nimport UrjaCharitra from \"../Parivartan04/UrjaChar\";\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [validateTab1, setvalidateTab1] = React.useState(false);\r\n  const [validateTab2, setvalidateTab2] = React.useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onvalidateTab1 = () => {\r\n    setValue(1);\r\n    setvalidateTab1(true);\r\n    setvalidateTab2(true);\r\n\r\n  }\r\n  const onvalidateTab2 = () => {\r\n    setValue(2);\r\n    setvalidateTab2(true);\r\n  }\r\n\r\n  return (\r\n    <section class=\"content\" style={{backgroundColor:\"white\"}}>\r\n      <div class=\"body_scroll\">\r\n        <div className=\"block-header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n              <h2>Playground</h2>\r\n              <button\r\n                className=\"btn btn-primary btn-icon mobile_menu\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n               {/* <button\r\n                className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-arrow-right\"></i>\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.root}>\r\n          {/* <AppBar position=\"static\"> */}\r\n            <Tabs value={value} onChange={handleChange} textColor=\"primary\" variant=\"standard\" indicatorColor=\"primary\" width={5} aria-label=\"primary tabs example\">\r\n              <Tab className=\"col-3 font-weight-bold\" label=\"Playground Business Model\" {...a11yProps(0)} />\r\n              {/* <Tab label=\"Urja Charitra\" {...a11yProps(1)} />\r\n              <Tab label=\"Non Negotiables\" {...a11yProps(2)} /> */}\r\n              {/* <Tab label=\"Non Negotiables\" {...a11yProps(2)} /> */}\r\n              {/* {validateTab1 ? (<Tab label=\"Playground Business Model\" {...a11yProps(0)} />) : (<Tab label=\"Playground Business Model\" disabled {...a11yProps(0)} />)} */}\r\n             \r\n              {validateTab1 ? (<Tab label=\"Urja Charitra\" className=\"col-2 font-weight-bold\" {...a11yProps(1)} />) : (<Tab label=\"Urja Charitra\" disabled className=\"col-2 font-weight-bold\" {...a11yProps(1)} />)}\r\n\r\n              {validateTab2 ? (<Tab label=\"Non Negotiables\" className=\"col-2 font-weight-bold\" {...a11yProps(2)} />) : (<Tab label=\"Non Negotiables\" disabled className=\"col-2 font-weight-bold\" {...a11yProps(2)} />)}\r\n\r\n\r\n            </Tabs>\r\n          {/* </AppBar> */}\r\n          <TabPanel value={value} index={0}>\r\n            <Plyground onvalidateTab1={onvalidateTab1} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <UrjaCharitra onvalidateTab2={onvalidateTab2} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <NonNegotiables />\r\n          </TabPanel>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan05/Dashboard.js",["615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634"],"import React, { useState, useEffect } from 'react';\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Editor from \"../../components/SunEditor\"\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport axios from 'axios';\r\nimport ModalSubmit from '../../components/ModalSubmit';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Dashboard(props) {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [perspective, setPerspective] = useState('Values');\r\n  const [perspectiveEdit, setPerspectiveEdit] = useState('');\r\n  const [reportNameEdit, setReportNameEdit] = useState(\"\");\r\n  const [descreption_of_the_reportEdit, setdescreption_of_the_reportEdit] = useState(\"\");\r\n\r\n  const [description_of_the_report, setdescription_of_the_report] = useState(\"\");\r\n\r\n  const [areaEdit, setAreaEdit] = useState(\"\");\r\n  const [dailyEdit, setDailyEdit] = useState(0);\r\n  const [weeklyEdit, setWeeklyEdit] = useState(0);\r\n  const [monthlyEdit, setMonthlyEdit] = useState(0);\r\n  const [quaterlyEdit, setQuaterlyEdit] = useState(0);\r\n  const [halfYearlyEdit, setHalfYearlyEdit] = useState(0);\r\n  const [yearlyEdit, setYearlyEdit] = useState(0);\r\n\r\n  const [reportName, setReportName] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [daily, setDaily] = useState(0);\r\n  const [weekly, setWeekly] = useState(0);\r\n  const [monthly, setMonthly] = useState(0);\r\n  const [quaterly, setQuaterly] = useState(0);\r\n  const [halfYearly, setHalfYearly] = useState(0);\r\n  const [yearly, setYearly] = useState(0);\r\n\r\n  let [dashboardData, setDashboardData] = useState('')\r\n  const [editId, seteditId] = useState(\"\");\r\n  const [delId, setdelId] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [editModal, seteditModal] = useState(false);\r\n\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n  const [viewModal, setviewModal] = useState(false);\r\n\r\n  const [BeliverOTP, setBeliverOTP] = useState('');\r\n  const [transOTP, setTransOTP] = useState('');\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [secondsfortrans, setsecondsfortrans] = useState(0);\r\n  const [ShowResetOTP, setShowResetOTP] = useState(true);\r\n  const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\r\n  const [showConfirmBox, setshowConfirmBox] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n\r\n  const [showHide, setshowHide] = useState(false);\r\n\r\n  const [belEmail, setbelEmail] = useState(\"\");\r\n  const [transEmail, settransEmail] = useState(\"\");\r\n  const [bypassEmail, setbypassEmail] = useState(\"\");\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n  const [varifiedValue, setvarifiedValue] = useState(\"\");\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [varval, setvarval] = useState(\"\");\r\n  const [EnteredBeliverOTP, setEnteredBeliverOTP] = useState('');\r\n  const [showWrongOtp, setshowWrongOtp] = useState(false);\r\n\r\n\r\n\r\n\r\n  const OnSubmitUpdate = (edId) => {\r\n    // alert(edId)\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      description_of_the_report: descreption_of_the_reportEdit,\r\n      report_name: reportNameEdit,\r\n      area: areaEdit,\r\n      daily: dailyEdit,\r\n      weekly: weeklyEdit,\r\n      monthly: monthlyEdit,\r\n      quaterly: quaterlyEdit,\r\n      half_yearly: halfYearlyEdit,\r\n      yearly: yearlyEdit,\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/dashboard/${edId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData);\r\n        if (resData.status == 200) {\r\n          setMupdate(true);\r\n          // setMupdate(false);\r\n          setTimeout(() => {\r\n            setMupdate(false);\r\n          }, 1000)\r\n          GetallRecords();\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    setShow(false);\r\n    seteditModal(false);\r\n  };\r\n\r\n  const deleteConfirm = () => {\r\n    // alert(delId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"delete\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/dashboard/${delId}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // seteditId(resData.data[0].id);\r\n        // console.log(\"deleted\");\r\n        setShow(false);\r\n        setMdelete(true);\r\n        // setMdelete(false);\r\n        setTimeout(() => {\r\n          setMdelete(false);\r\n        }, 1000)\r\n        GetallRecords();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const editfn = (edit_id) => {\r\n    // alert(edit_id);\r\n    seteditModal(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/dashboard/${edit_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        seteditId(resData.data[0].id);\r\n        // console.log(resData.data);\r\n        setdescreption_of_the_reportEdit(resData.data[0].description_of_the_report);\r\n        setReportNameEdit(resData.data[0].report_name);\r\n        setAreaEdit(resData.data[0].area);\r\n        setDailyEdit(resData.data[0].daily);\r\n        setWeeklyEdit(resData.data[0].weekly);\r\n        setMonthlyEdit(resData.data[0].monthly);\r\n        setQuaterlyEdit(resData.data[0].quaterly);\r\n        setHalfYearlyEdit(resData.data[0].half_yearly);\r\n        setYearlyEdit(resData.data[0].yearly);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  const deletefn = (edit_id) => {\r\n    // alert(edit_id);\r\n    setdelId(edit_id)\r\n    setShow(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, [])\r\n\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    seteditModal(false);\r\n    setviewModal(false);\r\n\r\n  };\r\n\r\n\r\n  const GetallRecords = () => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (resData.data.id > 0) {\r\n          setbelEmail(resData.data.beliver_email);\r\n          settransEmail(resData.data.tranz_email);\r\n          setbypassEmail(resData.data.bypass_email);\r\n          setbeliverName(resData.data.beliver_name);\r\n\r\n        }\r\n      });\r\n    fetch(`http://localhost:9002/masters/dashboard/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData.data);\r\n        setDashboardData(resData.data);\r\n        setvarifiedValue(resData.data[0].verified);\r\n        setUpid(resData.data[0].id);\r\n        // alert(resData.data[0].verified);\r\n\r\n      })\r\n      .catch((error) => console.log(\"error\", error))\r\n  }\r\n  const OnSubmitForm = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var rawrich = JSON.stringify({\r\n      perspective: perspective,\r\n      description_of_the_report: description_of_the_report,\r\n      report_name: reportName,\r\n      area: area,\r\n      daily: daily,\r\n      weekly: weekly,\r\n      monthly: monthly,\r\n      quaterly: quaterly,\r\n      half_yearly: halfYearly,\r\n      yearly: yearly,\r\n      email_id: s_id,\r\n      created_by: s_id\r\n    })\r\n    var requestOptionsrichtext = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: rawrich,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/dashboard`, requestOptionsrichtext)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData);\r\n        if (resData.status == 200) {\r\n          // console.log(\"Data Added succesfully\")\r\n          setMadd(true);\r\n          // setMadd(false);\r\n          setTimeout(() => {\r\n            setMadd(false);\r\n          }, 1000)\r\n\r\n          GetallRecords();\r\n\r\n        }\r\n        GetallRecords();\r\n      })\r\n      .catch((error) => console.log(\"error\", error))\r\n\r\n  }\r\n\r\n  const getRandomNum = (length) => {\r\n    var randomNum =\r\n      (Math.pow(10, length).toString().slice(length - 1) +\r\n        Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n    return randomNum;\r\n  }\r\n  const OnVerifyHandle = () => {\r\n    // alert(EnteredBeliverOTP);\r\n    GetallRecords()\r\n\r\n    if (BeliverOTP == EnteredBeliverOTP) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        verifiedVal: \"1\",\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/dashboard/verify/${Upid}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          // console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"updated\");\r\n            // setshowConfirmBox(true);\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n            GetallRecords()\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else if (BeliverOTP != EnteredBeliverOTP) {\r\n      setshowWrongOtp(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n      GetallRecords()\r\n    } else {\r\n      // setshowConfirmBox(true);\r\n      GetallRecords()\r\n\r\n      return false;\r\n    }\r\n\r\n    // setShowResetOTPTrans(true)\r\n    // setSeconds(0)\r\n    // setsecondsfortrans(60)\r\n  }\r\n  const ResendBeliverDataTrans = () => {\r\n    setShowResetOTPTrans(true)\r\n    setSeconds(0)\r\n    setsecondsfortrans(60)\r\n  }\r\n  const HandleInputChange = (event) => {\r\n    setEnteredBeliverOTP(event.target.value);\r\n  }\r\n  const HandleSubmit = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const ResendBeliverData = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const OnVerifyHandleConfirm = () => {\r\n    setShowResetOTPTrans(false)\r\n    setshowConfirmBox(true);\r\n  }\r\n  const HandleConfirmation = () => {\r\n    // setShowPdf(1)\r\n    setshowConfirmBox(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalSubmit show={showHide} />\r\n      <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              {seconds == 60 && ShowResetOTP ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Believer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTP(false)\r\n                        setshowConfirmBox(false)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Believer OTP\" name=\"firstName\" value={BeliverOTP} />\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Beliver OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandle} >Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {secondsfortrans == 60 && ShowResetOTPTrans ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Transganizer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTPTrans(0)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Transganizer OTP\" name=\"firstName\" value={transOTP} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Transganizer OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn addbtn  waves-effect\" onClick={OnVerifyHandleConfirm}>Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>) : (null)}\r\n              {showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Confirmation </h4>\r\n                  Are You Sure You Want To Submit!!\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTP ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverData}>RESEND OTP For Beliver </button>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTPTrans && !showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn addbtn  waves-effect\" onClick={ResendBeliverDataTrans}>RESEND OTP For Transaganiser </button>\r\n                </div>\r\n              ) : (null)}\r\n              {showWrongOtp ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Wrong OTP </h4>\r\n                  You Have Entered Wrong OTP!!\r\n                  <div class=\"modal-footer\">\r\n                    {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button> */}\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\r\n        </Modal.Header>\r\n        {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Cance\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirm}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* For Edit */}\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={editModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Edit Dashboard\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n          <div className=\"container-fluid\" >\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"body\">\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\"><strong>Perspective</strong></h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            class=\"form-control show-tick\"\r\n                            as=\"select\"\r\n                            name=\"perspective\"\r\n                            onChange={(event) => {\r\n                              setPerspectiveEdit(event.target.value);\r\n                            }}\r\n                            value={perspectiveEdit}\r\n                          >\r\n                            <option value=\"Quantitative\">Quantitative</option>\r\n                            <option value=\"Process\">Process</option>\r\n                            <option value=\"Learning and Development\">Learning and Development</option>\r\n                            <option value=\"Customer Feedback\">Customer Feedback</option>\r\n                            <option value=\"Values\">Values</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\"><strong>Description of the Report</strong></h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Description of the Report\" name=\"descreption_of_the_reportEdit\" onChange={(event) => { setdescreption_of_the_reportEdit(event.target.value) }} value={descreption_of_the_reportEdit} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\"><strong>Report Name</strong></h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Report Name\" name=\"report_name\" onChange={(event) => { setReportNameEdit(event.target.value) }} value={reportNameEdit} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\"><strong>Area/Department</strong></h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Area/Department\" name=\"area\" onChange={(event) => { setAreaEdit(event.target.value) }} value={areaEdit} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Daily</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={dailyEdit} onChange={(event) => { setDailyEdit(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Weekly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={weeklyEdit} onChange={(event) => { setWeeklyEdit(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Monthly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={monthlyEdit} onChange={(event) => { setMonthlyEdit(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Quaterly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={quaterlyEdit} onChange={(event) => { setQuaterlyEdit(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Half Yearly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={halfYearlyEdit} onChange={(event) => { setHalfYearlyEdit(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Yearly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={yearlyEdit} onChange={(event) => { setYearlyEdit(event.target.checked) }} />\r\n                      </div>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={() => OnSubmitUpdate(editId)}>Update </button>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Modals Code Ended Here */}\r\n\r\n      {/* Main Content Start */}\r\n      <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n        <div class=\"body_scroll\">\r\n          <div className=\"block-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n                <h2>Dashboard</h2>\r\n                <button\r\n                  className=\"btn btn-primary btn-icon mobile_menu\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n                </button>\r\n              </div>\r\n              {/* <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n                <button\r\n                  className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"zmdi zmdi-arrow-right\"></i>\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card p-4 mt-2\">\r\n                  <div className=\"body p-5\">\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\"><strong>Perspective</strong></h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            class=\"form-control show-tick\"\r\n                            as=\"select\"\r\n                            name=\"perspective\"\r\n                            onChange={(event) => {\r\n                              setPerspective(event.target.value);\r\n                            }}\r\n                            value={perspective}\r\n                          >\r\n                            <option value=\"Quantitative\">Quantitative</option>\r\n                            <option value=\"Process\">Process</option>\r\n                            <option value=\"Learning and Development\">Learning and Development</option>\r\n                            <option value=\"Customer Feedback\">Customer Feedback</option>\r\n                            <option value=\"Values\">Values</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\"><strong>Description of the Report</strong></h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Description Of The Report\" name=\"description_of_the_report\" onChange={(event) => { setdescription_of_the_report(event.target.value) }} value={description_of_the_report} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\"><strong>Report Name</strong></h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Report Name\" name=\"report_name\" onChange={(event) => { setReportName(event.target.value) }} value={reportName} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\"><strong>Area/Department</strong></h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Area/Department\" name=\"area\" onChange={(event) => { setArea(event.target.value) }} value={area} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Daily</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={daily} onChange={(event) => { setDaily(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Weekly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={weekly} onChange={(event) => { setWeekly(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Monthly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={monthly} onChange={(event) => { setMonthly(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Quaterly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={quaterly} onChange={(event) => { setQuaterly(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Half Yearly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={halfYearly} onChange={(event) => { setHalfYearly(event.target.checked) }} />\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title\"><strong>Yearly</strong></h2>\r\n                        <Checkbox color=\"primary\" checked={yearly} onChange={(event) => { setYearly(event.target.checked) }} />\r\n                      </div>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnSubmitForm}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button>\r\n                    {dashboardData.length > 0 ? (<button type=\"button\" class=\"btn viewbtn  waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={HandleSubmit}>SUBMIT <i className=\"ml-1 zmdi zmdi-check \" /></button>\r\n                    ) : null}\r\n                    {dashboardData.length > 0 ? (\r\n                      <div>\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            left: \"-3000px\",\r\n                            top: 0,\r\n                          }}>\r\n                          <PDFExport paperSize=\"A2\" margin=\"1cm\" ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`} forcePageBreak=\".page-break\">\r\n                            <Modal.Header style={{ padding: \"10px\" }}>\r\n                              <div className=\"col-md-12 row\" >\r\n                                <div className=\"col-md-6\">\r\n                                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                </div>\r\n                                <div className=\"col-md-6 pageHeading\" >\r\n                                  Financial Model\r\n                                </div>\r\n                              </div>\r\n                              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                              </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                              {/* playground business model */}\r\n                              <div >\r\n                                <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                                  <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                      <div className=\"pdfHeader\">Dashboard</div>\r\n                                      <div class=\"table-responsive\" id=\"Table\">\r\n                                        <table class=\"table table-bordered\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th>Perspective</th>\r\n                                              <th>Description of the Report</th>\r\n                                              <th>Report Name</th>\r\n                                              <th>Area/Department</th>\r\n                                              <th>Daily</th>\r\n                                              <th>Weekly</th>\r\n                                              <th>Monthly</th>\r\n                                              <th>Quaterly</th>\r\n                                              <th>Half Yearly</th>\r\n                                              <th>Yearly</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                            {dashboardData.map((item, key) => (\r\n                                              <tr>\r\n                                                <td>{item.perspective}</td>\r\n                                                <td>{item.description_of_the_report}</td>\r\n                                                <td>{item.report_name}</td>\r\n                                                <td>{item.area}</td>\r\n                                                <td>{item.daily}</td>\r\n                                                <td>{item.weekly}</td>\r\n                                                <td>{item.monthly}</td>\r\n                                                <td>{item.quaterly}</td>\r\n                                                <td>{item.half_yearly}</td>\r\n                                                <td>{item.yearly}</td>\r\n                                              </tr>\r\n                                            ))}\r\n                                          </tbody>\r\n                                        </table>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </Modal.Body>\r\n                          </PDFExport>\r\n\r\n                          {/* View Modal-----------------------> */}\r\n                          <Modal\r\n                            size=\"lg\"\r\n                            show={viewModal}\r\n                            onHide={handleClose}\r\n                            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                          >\r\n                            <Modal.Header style={{ padding: \"10px\" }}>\r\n                              <div className=\"col-md-12 row\" >\r\n                                <div className=\"col-md-6\">\r\n                                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                </div>\r\n                                <div className=\"col-md-6 pageHeading\" >\r\n                                  Financial Model\r\n                                </div>\r\n                              </div>\r\n                              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                              </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                              {/* playground business model */}\r\n                              <div >\r\n                                <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                                  <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                      <div className=\"pdfHeader\">Dashboard</div>\r\n                                      <div class=\"table-responsive\" id=\"Table\">\r\n                                        <table class=\"table table-bordered\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th>Perspective</th>\r\n                                              <th>Description of the Report</th>\r\n\r\n                                              <th>Report Name</th>\r\n                                              <th>Area/Department</th>\r\n                                              <th>Daily</th>\r\n                                              <th>Weekly</th>\r\n                                              <th>Monthly</th>\r\n                                              <th>Quaterly</th>\r\n                                              <th>Half Yearly</th>\r\n                                              <th>Yearly</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                            {dashboardData.map((item, key) => (\r\n                                              <tr>\r\n                                                <td>{item.perspective}</td>\r\n                                                <td>{item.description_of_the_report}</td>\r\n                                                <td>{item.report_name}</td>\r\n                                                <td>{item.area}</td>\r\n                                                <td>{item.daily}</td>\r\n                                                <td>{item.weekly}</td>\r\n                                                <td>{item.monthly}</td>\r\n                                                <td>{item.quaterly}</td>\r\n                                                <td>{item.half_yearly}</td>\r\n                                                <td>{item.yearly}</td>\r\n                                              </tr>\r\n                                            ))}\r\n                                          </tbody>\r\n                                        </table>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </Modal.Body>\r\n                          </Modal>\r\n\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                    ) : (null)\r\n                    }\r\n\r\n                    <div style={{ marginTop: 30 }}></div>\r\n                    {dashboardData.length > 0 ? (\r\n                      <div class=\"table-responsive\" id=\"Table\">\r\n                        <table class=\"table table-bordered\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Perspective</th>\r\n                              <th>Description of the Report</th>\r\n\r\n                              <th>Report Name</th>\r\n                              <th>Area/Department</th>\r\n                              <th>Daily</th>\r\n                              <th>Weekly</th>\r\n                              <th>Monthly</th>\r\n                              <th>Quaterly</th>\r\n                              <th>Half Yearly</th>\r\n                              <th>Yearly</th>\r\n                              <th style={{ textAlign: \"center\" }}>Action</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {dashboardData.map((item, key) => (\r\n                              <tr>\r\n                                <td>{item.perspective}</td>\r\n                                <td>{item.description_of_the_report}</td>\r\n                                <td>{item.report_name}</td>\r\n                                <td>{item.area}</td>\r\n                                <td>{item.daily}</td>\r\n                                <td>{item.weekly}</td>\r\n                                <td>{item.monthly}</td>\r\n                                <td>{item.quaterly}</td>\r\n                                <td>{item.half_yearly}</td>\r\n                                <td>{item.yearly}</td>\r\n                                <td colspan=\"8\">\r\n                                  <div class=\"btn-group\">\r\n                                    <button\r\n                                      type=\"submit\"\r\n                                      title=\"edit\"\r\n                                      class=\"btn zmdi zmdi-edit waves-effect pull-left\"\r\n                                      style={{ float: \"left\" }}\r\n                                      onClick={() => editfn(item.id)}\r\n                                    ></button>{\" \"}\r\n                                    <button\r\n                                      type=\"submit\"\r\n                                      title=\"delete\"\r\n                                      class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n                                      onClick={() => deletefn(item.id)}\r\n                                    ></button>{\" \"}\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn viewbtn waves-effect\"\r\n                          onClick={ViewModel}\r\n                        >\r\n                          View  <i className=\"ml-1 zmdi zmdi-eye \" />                        </button>\r\n                        <button type=\"button\" class=\"btn downloadbtn waves-effect\" onClick={exportPDFWithMethod}>Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i></button>\r\n\r\n                      </div>\r\n                    ) : (null)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/StepProcessTable.js",["635","636","637","638","639","640","641","642","643","644","645","646","647","648","649"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport StepTable from \"../Parivartan09/StepTable\";\r\nimport StepPDFTable from \"../Parivartan09/StepPDFTable\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Table = (props) => {\r\n  const ChildRef = useRef();\r\n\r\n  let pdfdata = [];\r\n  let rows = [];\r\n\r\n\r\n  const history = useHistory();\r\n  var s_id = parseInt(localStorage.getItem('tr_id'));\r\n  // var tt_id=parseInt\r\n  const pdfExportComponent = React.useRef(null);\r\n  let [completeData, setcompleteData] = useState(\"\");\r\n  let [ProcessData, setProcessData] = useState(\"\");\r\n\r\n  const [loading, setloading] = useState(false);\r\n  const [sr_no, setsr_no] = useState();\r\n  const [step_decription, setstep_decription] = useState();\r\n  const [trasaction_time, settrasaction_time] = useState();\r\n  const [resource_allocated, setresource_allocated] = useState();\r\n  const [resource_name, setresource_name] = useState();\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [TbUnderData, setTbUnderData] = useState(\"\");\r\n  const [DataA, setDataA] = useState(\"\");\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n  const [pdfShowDes, setpdfShowDes] = useState(0);\r\n\r\n\r\n  const [editId, seteditId] = useState(\"\");\r\n  const [delId, setdelId] = useState(\"\");\r\n  const [editModal, seteditModal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const exportPDFWithMethod = () => {\r\n    setpdfShowDes(1);\r\n    setTimeout(() => {\r\n      // alert(pdfShowDes);\r\n      if (pdfExportComponent.current) {\r\n        pdfExportComponent.current.save();\r\n        setTimeout(() => {\r\n          setpdfShowDes(0);\r\n        }, 1000)\r\n      }\r\n    }, 1000)\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleClose = () => {\r\n\r\n    setviewModal(false);\r\n    setShow(false);\r\n    seteditModal(false);\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n\r\n\r\n  const sr_noFn = (event) => {\r\n    setsr_no(event.target.value);\r\n  };\r\n\r\n  const step_decriptionFn = (event) => {\r\n    setstep_decription(event.target.value);\r\n  };\r\n\r\n  const trasaction_timeFn = (event) => {\r\n    settrasaction_time(event.target.value);\r\n  };\r\n\r\n  const resource_allocatedFn = (event) => {\r\n    setresource_allocated(event.target.value);\r\n  };\r\n\r\n  const resource_nameFn = (event) => {\r\n    setresource_name(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (parent_process_id) => {\r\n    // alert(parent_process_id);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var rawrich = JSON.stringify({\r\n      sr_no: sr_no,\r\n      step_decription: step_decription,\r\n      trasaction_time: trasaction_time,\r\n      resource_allocated: resource_allocated,\r\n      resource_name: resource_name,\r\n      parent_process_id: parent_process_id,\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptionsrichtext = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: rawrich,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/process`, requestOptionsrichtext)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n          setMadd(true);\r\n          // setMadd(false);\r\n          setTimeout(() => {\r\n            setMadd(false);\r\n          }, 1000)\r\n          // props.OnValidateTab1(true);\r\n          // alert(parent_process_id)\r\n          // renderTable(parent_process_id);\r\n\r\n          setsr_no(\"\");\r\n          setstep_decription(\"\");\r\n          settrasaction_time(\"\");\r\n          setresource_allocated(\"\");\r\n          setresource_name(\"\");\r\n\r\n          getvilakshanMapData();\r\n\r\n          ChildRef.current.callChildFunction(parent_process_id, \"upd\");\r\n          // <StepTable AllData={parent_process_id} ref={ChildRef} />\r\n        }\r\n        getvilakshanMapData();\r\n        ChildRef.current.callChildFunction(parent_process_id, \"upd\");\r\n\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    // renderTable(parent_process_id);\r\n  };\r\n\r\n  const getvilakshanMapData = () => {\r\n    // alert(\"ppp\")\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`http://localhost:9002/masters/process/user/` + `${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setProcessData(res.data);\r\n        if (res.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n    fetch(`http://localhost:9002/masters/vilakshanMapTab2/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        setcompleteData(resData.data[0].features);\r\n        console.log(resData.data);\r\n\r\n        // console.log(resData.data[0].features);\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // if (resData.data.id > 0) {\r\n        // console.log(\"ttt--->\", resData.data[0].bypass_email);\r\n        // setbelEmail(resData.data[0].beliver_email);\r\n        // settransEmail(resData.data[0].tranz_email);\r\n        // setbypassEmail(resData.data[0].bypass_email);\r\n        setbeliverName(resData.data[0].beliver_name);\r\n        // }\r\n      });\r\n\r\n    for (var i = 0; i < 2; i++) {\r\n      fetch(\r\n        `http://localhost:9002/masters/process/${i}`,\r\n        requestOptionsget\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          // alert(resData.data.length)\r\n          setDataA(resData.data);\r\n\r\n          // console.log(resData.data[i]);\r\n\r\n\r\n          // if (resData.data.id > 0) {\r\n          // console.log(\"ttt--->\", resData.data[0].bypass_email);\r\n          // setbelEmail(resData.data[0].beliver_email);\r\n          // settransEmail(resData.data[0].tranz_email);\r\n          // setbypassEmail(resData.data[0].bypass_email);\r\n          // setbeliverName(resData.data[0].beliver_name);\r\n          // }\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    setloading(true);\r\n    setTimeout(() => {\r\n      setloading(false);\r\n    }, 2000);\r\n    getvilakshanMapData();\r\n  }, []);\r\n\r\n  const renderTable = (parent_process_id) => {\r\n    console.table(parent_process_id + \"haklll\")\r\n    return <StepTable AllData={parent_process_id} />;\r\n\r\n    // var myHeaders2 = new Headers();\r\n    // myHeaders2.append(\"Content-Type\", \"application/json\");\r\n    // var requestOptionsget = {\r\n    //   method: \"GET\",\r\n    //   headers: myHeaders2,\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(`http://localhost:9002/masters/process/` + `${parent_process_id}`, requestOptionsget)\r\n    //   .then((response) => response.json())\r\n    //   .then((res) => {\r\n    //     console.log(res.data,\"resData\");\r\n    //     setTbUnderData(res.data);\r\n    //     if (res.status == 200) {\r\n    //       console.log(\"Data Added succesfully\");\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n\r\n\r\n  };\r\n  const renderPDFTable = (parent_process_id) => {\r\n    return <StepPDFTable AllData={parent_process_id} />;\r\n  };\r\n\r\n\r\n\r\n  const editfn = (edit_id) => {\r\n    // getvilakshanMapData();\r\n\r\n    seteditModal(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/processprocessId/${edit_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data[0].id);\r\n        console.log(resData.data);\r\n        seteditId(resData.data[0].id);\r\n        setsr_no(resData.data[0].sr_no);\r\n        setstep_decription(resData.data[0].step_decription);\r\n        settrasaction_time(resData.data[0].trasaction_time);\r\n        setresource_allocated(resData.data[0].resource_allocated);\r\n        setresource_name(resData.data[0].resource_name);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n\r\n  const deletefn = (edit_id) => {\r\n    // alert(edit_id)\r\n    setdelId(edit_id);\r\n    setShow(true);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // const updateState = (parent_process_id) => {\r\n  //   getvilakshanMapData();\r\n  // };\r\n\r\n\r\n\r\n  // let rd = [];\r\n  // if (DataA) {\r\n  //   DataA.map((item, key) => {\r\n  //     rd.push(\r\n  //       <tbody>\r\n  //         <td>{item.sr_no}</td>\r\n  //         <td>{item.step_decription}</td>\r\n  //         <td>{item.trasaction_time}</td>\r\n  //         <td>{item.resource_allocated}</td>\r\n  //         <td>{item.resource_name}</td>\r\n  //         <td colspan=\"8\">\r\n  //           <div class=\"btn-group\">\r\n  //             <button\r\n  //               type=\"submit\"\r\n  //               title=\"edit\"\r\n  //               class=\"btn  zmdi zmdi-edit waves-effect pull-left\"\r\n  //               style={{ float: \"left\" }}\r\n  //             // onClick={() => editfn(item.id)}\r\n  //             ></button>\r\n  //             <button\r\n  //               type=\"submit\"\r\n  //               title=\"delete\"\r\n  //               class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n  //             // onClick={() => deletefn(item.id)}\r\n  //             ></button>\r\n  //           </div>\r\n  //         </td>\r\n  //       </tbody>\r\n  //     );\r\n  //   });\r\n  // }\r\n\r\n\r\n  const OnSubmitUpdate = (edId) => {\r\n    // alert(edId)\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      sr_no: sr_no,\r\n      step_decription: step_decription,\r\n      trasaction_time: trasaction_time,\r\n      resource_allocated: resource_allocated,\r\n      resource_name: resource_name,\r\n      email_id: s_id,\r\n      created_by: s_id\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/process/${edId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"updated\");\r\n          setMupdate(true);\r\n          // setMupdate(false);\r\n          setTimeout(() => {\r\n            setMupdate(false);\r\n          }, 1000)\r\n        }\r\n        getvilakshanMapData();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    // console.log(formData);\r\n    setShow(false);\r\n    seteditModal(false);\r\n    // GetallRecored();\r\n  };\r\n\r\n  const deleteConfirm = () => {\r\n    // alert(delId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"delete\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/process/${delId}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // seteditId(resData.data[0].id);\r\n        console.log(\"deleted\");\r\n        setShow(false);\r\n        setMdelete(true);\r\n        // setMdelete(false);\r\n        setTimeout(() => {\r\n          setMdelete(false);\r\n        }, 1000)\r\n        setShow(false);\r\n        getvilakshanMapData();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n\r\n  if (completeData) {\r\n    completeData.map((item, key) => {\r\n      rows.push(\r\n        <div class=\"card\" >\r\n          <Modal\r\n            size=\"lg\"\r\n            show={editModal}\r\n            onHide={handleClose}\r\n            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                Edit Step Process\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div class=\"card\" >\r\n                <h2 className=\"card-inside-title\">\r\n                  {/* <strong>Process Name : </strong> */}\r\n                </h2>\r\n                <div class=\"card-body\">\r\n                  <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-2\">\r\n                        <label>Sr.No &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Sr.No.\"\r\n                          name=\"sr_no\"\r\n                          onChange={sr_noFn}\r\n                          value={sr_no}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-2\">\r\n                        <label>Step Description</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Step Description\"\r\n                          name=\"step_descreption\"\r\n                          onChange={step_decriptionFn}\r\n                          value={step_decription}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-2\">\r\n                        <label>Transaction Time</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Transaction Time\"\r\n                          name=\"vilakshan_journey\"\r\n                          onChange={trasaction_timeFn}\r\n                          value={trasaction_time}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-2\">\r\n                        <label>Resource Allocated</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Resource Allocated (Departments)\"\r\n                          name=\"resource_allocated\"\r\n                          onChange={resource_allocatedFn}\r\n                          value={resource_allocated}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-2\">\r\n                        <label>Name of Resources</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Name of Resources (Individuals)\"\r\n                          name=\"resource_name\"\r\n                          onChange={resource_nameFn}\r\n                          value={resource_name}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-2\">\r\n                        <label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\r\n                        <button\r\n                          type=\"submit\"\r\n                          class=\"btn savebtn  waves-effect mt-4\"\r\n                          onClick={() => {\r\n                            OnSubmitUpdate(editId);\r\n                          }}\r\n                        >\r\n                          Update\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n\r\n          <Modal\r\n            size=\"sm\"\r\n            show={Madd}\r\n            onHide={() => setMadd(false)}\r\n            aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          >\r\n            <Modal.Body >Form Saved Successful</Modal.Body>\r\n          </Modal>\r\n\r\n\r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\r\n            </Modal.Header>\r\n            {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={deleteConfirm}>\r\n                Yes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <h2 className=\"card-inside-title\">\r\n            <strong>Process Name : {item.value0}</strong>\r\n          </h2>\r\n          <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card p-4 mt-2\">\r\n                  <div className=\"body p-5\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-1\">\r\n                          <label>Sr.No</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Sr.No.\"\r\n                            name=\"sr_no\"\r\n                            onChange={sr_noFn}\r\n                            value={sr_no}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                          <label>Step Description</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Step Description\"\r\n                            name=\"step_descreption\"\r\n                            onChange={step_decriptionFn}\r\n                            value={step_decription}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                          <label>Transaction Time</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Transaction Time\"\r\n                            name=\"vilakshan_journey\"\r\n                            onChange={trasaction_timeFn}\r\n                            value={trasaction_time}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                          <label>Resource Allocated</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Resource Allocated (Departments)\"\r\n                            name=\"resource_allocated\"\r\n                            onChange={resource_allocatedFn}\r\n                            value={resource_allocated}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                          <label>Name of Resources</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Name of Resources (Individuals)\"\r\n                            name=\"resource_name\"\r\n                            onChange={resource_nameFn}\r\n                            value={resource_name}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn addbtn waves-effect mt-4\"\r\n                            onClick={() => {\r\n                              handleSubmit(`${item.value0}`);\r\n                            }}\r\n                          >\r\n                            Add\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <table class=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Input</th>\r\n                          <th>\r\n                            <tr align=\"center\">\r\n                              <div style={{ marginLeft: \"28rem\" }}>\r\n                                {item.parent_process_name}\r\n\r\n                              </div>\r\n                            </tr>\r\n                          </th>\r\n                          <th>Output</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <td>{item.parent_process_input}</td>\r\n\r\n                        <td>\r\n                          {ProcessData.length > 0 ? (\r\n                            <>\r\n                              <div class=\"table-responsive\" id=\"Table\">\r\n\r\n                                <table class=\"table table-bordered\">\r\n                                  <thead>\r\n                                    {/* Child Component {childName} */}\r\n\r\n                                    <tr>\r\n                                      <th>Sr. No.</th>\r\n                                      <th>Step Description</th>\r\n                                      <th>Transaction Time (Days / Hours)</th>\r\n                                      <th>Resource Allocated (Departments)</th>\r\n                                      <th>Name of Resources (Individuals)</th>\r\n                                      <th style={{ textAlign: \"center\" }}>Action</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  {\r\n                                    ProcessData.filter(({ parent_process_id, created_by }) => parent_process_id === item.value0 && created_by === s_id)\r\n                                      .map((itm, keys) => (\r\n                                        <>\r\n                                          {/* // console.log(itm) */}\r\n                                          <tbody>\r\n                                            <td>{itm.sr_no}</td>\r\n                                            <td>{itm.step_decription}</td>\r\n                                            <td>{itm.trasaction_time}</td>\r\n                                            <td>{itm.resource_allocated}</td>\r\n                                            <td>{itm.resource_name}</td>\r\n                                            <td colspan=\"8\">\r\n                                              <div class=\"btn-group\">\r\n                                                <button\r\n                                                  type=\"submit\"\r\n                                                  title=\"edit\"\r\n                                                  class=\"btn  zmdi zmdi-edit waves-effect pull-left\"\r\n                                                  style={{ float: \"left\" }}\r\n                                                  onClick={() => editfn(itm.id)}\r\n                                                ></button>\r\n                                                <button\r\n                                                  type=\"submit\"\r\n                                                  title=\"delete\"\r\n                                                  class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n                                                  onClick={() => deletefn(itm.id)}\r\n                                                ></button>\r\n                                              </div>\r\n                                            </td>\r\n                                          </tbody>\r\n                                        </>\r\n\r\n                                      ))\r\n                                  }\r\n                                </table>\r\n\r\n\r\n\r\n\r\n                              </div>\r\n\r\n                            </>\r\n                          ) : (null)\r\n                          }\r\n                          {/* {renderTable(item.id)} */}\r\n\r\n                          {/* <div class=\"table-responsive\" id=\"Table\">\r\n                            <table class=\"table table-bordered\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Sr. No.{console.log(DataA[item.id])}</th>\r\n                                  <th>Step Description</th>\r\n                                  <th>Transaction Time (Days / Hours)</th>\r\n                                  <th>Resource Allocated (Departments)</th>\r\n                                  <th>Name of Resources (Individuals)</th>\r\n                                  <th style={{ textAlign: \"center\" }}>Action</th>\r\n                                </tr>\r\n                              </thead>\r\n                              {rd}\r\n                            </table>\r\n                          </div> */}\r\n                          {/* <button onClick={() => ChildRef.current.callChildFunction()}>Update state</button> */}\r\n                          {/* {console.log(item.value0)} */}\r\n                          {/* <StepTable AllData={item.vslue0} ref={ChildRef} /> */}\r\n                          {/* <h1>`${item.value0}`</h1> */}\r\n                        </td>\r\n                        {/* <td>{item.id}</td> */}\r\n                        {/* var optionVal = completeData.filter(({ parent_process_id, created_by }) => parent_process_id === \"test3\" && created_by === 1 ) */}\r\n\r\n                        {/* {ProcessData.map((item, key) => {\r\n                          { console.log(item) }\r\n                        }).map(function (option) {\r\n                          return (option);\r\n                        })}\r\n\r\n                        {options.reduce((a, o) => {\r\n                          o.assigned && a.push({ name: o.name, newProperty: 'Foo' });\r\n                          return a;\r\n                        }, [])} */}\r\n\r\n                        <td>{item.parent_process_output}</td>\r\n                      </tbody>\r\n                    </table>\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div >\r\n      );\r\n    });\r\n  }\r\n\r\n  if (completeData) {\r\n    completeData.map((item, key) => {\r\n      pdfdata.push(\r\n        <>\r\n          <div class=\"card\">\r\n            <h2 className=\"card-inside-title\">\r\n              <strong>Process Name : {item.parent_process_name}</strong>\r\n            </h2>\r\n\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ width: \"15%\" }}>Input</th>\r\n                  <th>\r\n                    <tr style={{ width: \"70%\" }}>\r\n                      <div style={{ marginLeft: \"28rem\" }}>\r\n                        {item.parent_process_name}\r\n                      </div>\r\n                    </tr>\r\n                  </th>\r\n                  <th style={{ width: \"15%\" }}>Output</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <td>{item.parent_process_input}</td>\r\n                <td>\r\n                  {renderPDFTable(item.id)}\r\n                </td>\r\n                <td>{item.parent_process_output}</td>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      );\r\n    });\r\n  }\r\n  return loading ? (\r\n    <div sytle={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <CircularProgress />\r\n    </div>\r\n  ) : (\r\n    <>\r\n      {completeData.length > 0 ? (\r\n\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"-3000px\",\r\n            top: 0,\r\n          }}>\r\n\r\n\r\n          {/* View Modal-----------------------> */}\r\n          <Modal\r\n            size=\"lg\"\r\n            show={viewModal}\r\n            onHide={handleClose}\r\n            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n          >\r\n            <Modal.Header style={{ padding: \"10px\" }}>\r\n              {/* <div className=\"col-md-12 row\" >\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                </div>\r\n                <div className=\"col-md-6 pageHeading\" >\r\n                  System & Process\r\n                </div>\r\n              </div> */}\r\n\r\n              <div className=\"col-md-12 row\" >\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                </div>\r\n                <div className=\"col-md-6 pageHeading\" >\r\n                  System & Process\r\n                </div>\r\n              </div>\r\n\r\n              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              {/* step process model */}\r\n              <div >\r\n                <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"pdfHeader\">Vilakshan Map</div>\r\n                      <div style={{ marginTop: 30 }}>\r\n                        <div class=\"table-responsive\" id=\"Table\">\r\n                          <table class=\"table table-bordered\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>Vilakshan Journey</th>\r\n                                <th>Vilakshan Form</th>\r\n                                <th>VCCs (Cost Centres)</th>\r\n                                <th>Parent Process Name</th>\r\n                                <th>Parent Process Input</th>\r\n                                <th>Parent Process Output</th>\r\n                                <th>Parent Process Owner</th>\r\n                                <th>Strategic Support Process</th>\r\n                                <th>Strategic Support Input</th>\r\n                                <th>Strategic Support Output</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {completeData.map((item, key) => (\r\n                                <tr>\r\n                                  <td>{item.vilakshan_journey}</td>\r\n                                  <td>{item.vilakshan_form}</td>\r\n                                  <td>{item.vccs}</td>\r\n                                  <td>{item.parent_process_name}</td>\r\n                                  <td>{item.parent_process_input}</td>\r\n                                  <td>{item.parent_process_output}</td>\r\n                                  <td>{item.parent_process_owner}</td>\r\n                                  <td>{item.strategic_support_process}</td>\r\n                                  <td>{item.strategic_support_input}</td>\r\n                                  <td>{item.strategic_support_output}</td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div >\r\n                <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"pdfHeader\">Step by Step Process</div>\r\n                      <div className=\"p-5\">\r\n                        {pdfdata}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n\r\n\r\n\r\n          {/* <PDFExport paperSize=\"A2\" margin=\"1cm\" ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`} forcePageBreak=\".page-break\"> */}\r\n          {pdfShowDes > 0 ? (\r\n            <PDFExport\r\n              paperSize=\"A3\"\r\n              margin=\"1cm\"\r\n              ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`}\r\n              forcePageBreak=\".page-break\"\r\n            >\r\n              {/* <Modal.Header style={{ padding: \"10px\" }}>\r\n              <div className=\"col-md-12 row\" >\r\n                <div className=\"col-md-6\">\r\n                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                </div>\r\n                <div className=\"col-md-6 pageHeading\" >\r\n                  System & Process\r\n                </div>\r\n              </div>\r\n              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n              </Modal.Title>\r\n            </Modal.Header> */}\r\n\r\n              <Modal.Header style={{ padding: \"10px\" }}>\r\n                <div className=\"col-md-12 row\" >\r\n                  <div className=\"col-md-6\">\r\n                    <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                  </div>\r\n                  <div className=\"col-md-6 pageHeading\" >\r\n                    Business Model\r\n                  </div>\r\n                </div>\r\n                <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n\r\n\r\n              <Modal.Body>\r\n                {/* step process model */}\r\n                <div >\r\n                  <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"pdfHeader\">Vilakshan Map</div>\r\n                        <div style={{ marginTop: 30 }}>\r\n                          <div class=\"table-responsive\" id=\"Table\">\r\n                            <table class=\"table table-bordered\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Vilakshan Journey</th>\r\n                                  <th>Vilakshan Form</th>\r\n                                  <th>VCCs (Cost Centres)</th>\r\n                                  <th>Parent Process Name</th>\r\n                                  <th>Parent Process Input</th>\r\n                                  <th>Parent Process Output</th>\r\n                                  <th>Parent Process Owner</th>\r\n                                  <th>Strategic Support Process</th>\r\n                                  <th>Strategic Support Input</th>\r\n                                  <th>Strategic Support Output</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {completeData.map((item, key) => (\r\n                                  <tr>\r\n                                    <td>{item.vilakshan_journey}</td>\r\n                                    <td>{item.vilakshan_form}</td>\r\n                                    <td>{item.vccs}</td>\r\n                                    <td>{item.parent_process_name}</td>\r\n                                    <td>{item.parent_process_input}</td>\r\n                                    <td>{item.parent_process_output}</td>\r\n                                    <td>{item.parent_process_owner}</td>\r\n                                    <td>{item.strategic_support_process}</td>\r\n                                    <td>{item.strategic_support_input}</td>\r\n                                    <td>{item.strategic_support_output}</td>\r\n                                  </tr>\r\n                                ))}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div >\r\n                  <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"pdfHeader\">Step by Step Process</div>\r\n                        <div className=\"p-5\">\r\n                          {pdfdata}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n            </PDFExport>\r\n          ) : (null)}\r\n\r\n        </div>\r\n\r\n      ) : (null)}\r\n      <div class=\"table-responsive\" id=\"Table\">\r\n        {rows}\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn viewbtn  waves-effect\"\r\n          onClick={ViewModel}\r\n        >\r\n          View  <i className=\"ml-1 zmdi zmdi-eye \" />        </button>\r\n        <button type=\"button\" class=\"btn downloadbtn waves-effect\" onClick={exportPDFWithMethod}>Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i></button>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\nexport default Table;\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/VilakshanMap.js",["650","651","652","653","654","655","656","657"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Vilakshan from \"./vilakshanMapTab1\";\r\nimport StepProcessTable from \"./StepProcessTable\";\r\nimport Vilakshan2 from \"./vilakshanMapTab2\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction TabPanel(props) {\r\n\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Parivartan5Tabs() {\r\n  var history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  let [completeData, setcompleteData] = useState(\"\");\r\n  const [Madd, setMadd] = useState(false);\r\n  const [validate, setvalidate] = useState(false)\r\n\r\n  const [validateTab1, setvalidateTab1] = React.useState(false);\r\n  const [validateTab2, setvalidateTab2] = React.useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const OnValidate = (e) => {\r\n    setValue(1);\r\n    setvalidate(e);\r\n  }\r\n\r\n  const OnValidate1 = (e) => {\r\n    setValue(2);\r\n    setvalidateTab1(e);\r\n  }\r\n\r\n  const OnValidate2 = (e) => {\r\n    setValue(3);\r\n    setvalidateTab2(e);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    getDataOff();\r\n  }, []);\r\n\r\n  const getDataOff = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/vilakshanMapTab2/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        setcompleteData(resData.data);\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n          // setValue(1);\r\n          // setvalidate(e);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n  return (\r\n    <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n\r\n      <div class=\"body_scroll\">\r\n        <div className=\"block-header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n              <h2>Vilakshan Map & Process</h2>\r\n              <button\r\n                className=\"btn btn-primary btn-icon mobile_menu\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n              {/* <button\r\n                className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-arrow-right\"></i>\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.root}>\r\n          {/* <AppBar position=\"static\"> */}\r\n          <Tabs value={value} onChange={handleChange} textColor=\"primary\" variant=\"standard\" indicatorColor=\"primary\" width={5} aria-label=\"primary tabs example\" >\r\n            <Tab label=\"Vilakshan Map\" className=\"col-2 font-weight-bold\" {...a11yProps(0)} />\r\n            {/* <Tab label=\"Vilakshan Journey \" className=\"col-2 font-weight-bold\" {...a11yProps(1)} /> */}\r\n            {validateTab1 ? (<Tab label=\"Vilakshan Journey \" className=\"col-2 font-weight-bold\" {...a11yProps(1)} />) : <Tab label=\"Vilakshan Journey \" disabled className=\"col-2 font-weight-bold\" {...a11yProps(1)} />}\r\n            {validateTab2 ? (<Tab label=\"Step By Step Process\" className=\"col-2 font-weight-bold\" {...a11yProps(2)} />) : <Tab label=\"Step By Step Process\" disabled className=\"col-2 font-weight-bold\" {...a11yProps(2)} />}\r\n            {/* {completeData.length > 0 ? (<Tab label=\"Step By Step Process\" className=\"col-2 font-weight-bold\" {...a11yProps(2)} />\r\n            ) : null} */}\r\n\r\n\r\n\r\n            {/* {validate ? (<Tab label=\"Step By Step Process Table\" className=\"col-3 font-weight-bold\" {...a11yProps(1)} />) : (<Tab label=\"Step By Step Process Table\" disabled className=\"col-3 font-weight-bold\" {...a11yProps(1)} />)} */}\r\n\r\n\r\n          </Tabs>\r\n          {/* </AppBar> */}\r\n          <TabPanel value={value} index={0}>\r\n            <Vilakshan OnValidate={OnValidate} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <Vilakshan2 OnValidate1={OnValidate1} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <StepProcessTable OnValidate2={OnValidate2} />\r\n          </TabPanel>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan06/Naisthya&Prayaan.js",["658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687"],"import React, { useState, useEffect } from 'react';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport axios from 'axios';\r\nimport Editor from \"../../components/SunEditor\"\r\nimport 'suneditor/dist/css/suneditor.min.css';  //Import Sun Editor's CSS File\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ReactExport from \"react-data-export\";\r\nimport ModalSubmit from '../../components/ModalSubmit';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function NaisthyaPrayaan() {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n\r\n  const ExcelFile = ReactExport.ExcelFile;\r\n  const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n  const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [showData, setShowData] = useState(false);\r\n  const [naishtyaStatement, setNaishtyaStatement] = useState(\"Naishtya Statement\");\r\n  const [timePeriod, setTimePeriod] = useState(\"Time Period and No of Vilakshan Units\");\r\n  const [believerGroup, setBelieverGroup] = useState(\"Believer Group\");\r\n  const [impactPoint, setImpactPoint] = useState(\"Impact Point\");\r\n  const [prayaanStatement, setPrayaanStatement] = useState(\"Prayaan Statement\");\r\n  const [dateofLaunch, setDateofLaunch] = useState(\"Date of Launch of Prayaan\");\r\n  const [listofactivities, setListofactivities] = useState(\"List of activities which we will never do\");\r\n  let [naisthyaData, setNaisthyaData] = useState(\"\");\r\n  const [smShow, setSmShow] = useState(false);\r\n  const [MAdd, setMAdd] = useState(false);\r\n  const [pdfShowDes, setpdfShowDes] = useState(0);\r\n\r\n\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n\r\n\r\n  const [BeliverOTP, setBeliverOTP] = useState('');\r\n  const [transOTP, setTransOTP] = useState('');\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [secondsfortrans, setsecondsfortrans] = useState(0);\r\n  const [ShowResetOTP, setShowResetOTP] = useState(true);\r\n  const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\r\n  const [showConfirmBox, setshowConfirmBox] = useState(false);\r\n  const [showHide, setshowHide] = useState(false);\r\n\r\n  const [belEmail, setbelEmail] = useState(\"\");\r\n  const [transEmail, settransEmail] = useState(\"\");\r\n  const [bypassEmail, setbypassEmail] = useState(\"\");\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n  const [varifiedValue, setvarifiedValue] = useState(\"\");\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [varval, setvarval] = useState(\"\");\r\n  const [EnteredBeliverOTP, setEnteredBeliverOTP] = useState('');\r\n  const [showWrongOtp, setshowWrongOtp] = useState(false);\r\n\r\n  // const exportPDFWithMethod = () => {\r\n  //   if (pdfExportComponent.current) {\r\n  //     pdfExportComponent.current.save();\r\n  //   }\r\n  // };\r\n\r\n  const exportPDFWithMethod = () => {\r\n    setpdfShowDes(1);\r\n    setTimeout(() => {\r\n      // alert(pdfShowDes);\r\n      if (pdfExportComponent.current) {\r\n        pdfExportComponent.current.save();\r\n        setTimeout(() => {\r\n          setpdfShowDes(0);\r\n        }, 1000)\r\n      }\r\n    }, 1000)\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // setShowData(false);\r\n    setviewModal(false);\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, []);\r\n\r\n  const OnSubmitForm = () => {\r\n    // alert(Upid)\r\n    if (naisthyaData.length === 0) {\r\n      var myHeaders = new Headers()\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        naisthya_statement: naishtyaStatement,\r\n        time_period: timePeriod,\r\n        believer_group: believerGroup,\r\n        impact_point: impactPoint,\r\n        prayaan_statement: prayaanStatement,\r\n        date_of_lunch: dateofLaunch,\r\n        list_of_activities: listofactivities,\r\n        email_id: s_id,\r\n        created_by: s_id\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/naisthya`, requestOptionsrichtext)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Data Added succesfully\");\r\n            setMAdd(true);\r\n            // setMAdd(false);\r\n            setTimeout(() => {\r\n              setMAdd(false);\r\n            }, 1000)\r\n\r\n            GetallRecords();\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n    else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        naisthya_statement: naishtyaStatement,\r\n        time_period: timePeriod,\r\n        believer_group: believerGroup,\r\n        impact_point: impactPoint,\r\n        prayaan_statement: prayaanStatement,\r\n        date_of_lunch: dateofLaunch,\r\n        list_of_activities: listofactivities,\r\n        email_id: s_id,\r\n        updated_by: s_id\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/naisthya/` + `${Upid}`, requestOptionsrichtext)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Data Added succesfully\");\r\n            // alert(\"hhtt\")\r\n\r\n            setSmShow(true);\r\n            // setSmShow(false);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n            }, 1000)\r\n            GetallRecords();\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const GetallRecords = () => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (resData.data.id > 0) {\r\n          setbelEmail(resData.data.beliver_email);\r\n          settransEmail(resData.data.tranz_email);\r\n          setbypassEmail(resData.data.bypass_email);\r\n          setbeliverName(resData.data.beliver_name);\r\n\r\n        }\r\n      });\r\n\r\n    fetch(`http://localhost:9002/masters/naisthya/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n\r\n        if (resData.data.length > 0) {\r\n          let get_list = resData.data;\r\n          get_list.map((item, key) => {\r\n            console.log(item.naisthya_statement, item.time_period)\r\n            setNaishtyaStatement(item.naisthya_statement);\r\n            setTimePeriod(item.time_period);\r\n            setBelieverGroup(item.believer_group);\r\n            setImpactPoint(item.impact_point);\r\n            setPrayaanStatement(item.prayaan_statement);\r\n            setDateofLaunch(item.date_of_lunch);\r\n            setListofactivities(item.list_of_activities);\r\n          });\r\n          setNaisthyaData(resData.data);\r\n          setvarifiedValue(resData.data[0].verified);\r\n          setUpid(resData.data[0].id);\r\n        }\r\n\r\n        setShowData(true);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n  }\r\n\r\n  const getRandomNum = (length) => {\r\n    var randomNum =\r\n      (Math.pow(10, length).toString().slice(length - 1) +\r\n        Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n    return randomNum;\r\n  }\r\n  const OnVerifyHandle = () => {\r\n    // alert(EnteredBeliverOTP);\r\n    GetallRecords()\r\n\r\n    if (BeliverOTP == EnteredBeliverOTP) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        verifiedVal: \"1\",\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/naisthya/verify/${s_id}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          // console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"updated\");\r\n            // setshowConfirmBox(true);\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n            GetallRecords()\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else if (BeliverOTP != EnteredBeliverOTP) {\r\n      setshowWrongOtp(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n      GetallRecords()\r\n    } else {\r\n      // setshowConfirmBox(true);\r\n      GetallRecords()\r\n\r\n      return false;\r\n    }\r\n\r\n    // setShowResetOTPTrans(true)\r\n    // setSeconds(0)\r\n    // setsecondsfortrans(60)\r\n  }\r\n  const ResendBeliverDataTrans = () => {\r\n    setShowResetOTPTrans(true)\r\n    setSeconds(0)\r\n    setsecondsfortrans(60)\r\n  }\r\n  const HandleInputChange = (event) => {\r\n    setEnteredBeliverOTP(event.target.value);\r\n  }\r\n  const HandleSubmit = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const ResendBeliverData = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const OnVerifyHandleConfirm = () => {\r\n    setShowResetOTPTrans(false)\r\n    setshowConfirmBox(true);\r\n  }\r\n  const HandleConfirmation = () => {\r\n    // setShowPdf(1)\r\n    setshowConfirmBox(false);\r\n  }\r\n  return (\r\n    <>\r\n      <ModalSubmit show={showHide} />\r\n      <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              {seconds == 60 && ShowResetOTP ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Believer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTP(false)\r\n                        setshowConfirmBox(false)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Believer OTP\" name=\"firstName\" value={BeliverOTP} />\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Beliver OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandle} >Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {secondsfortrans == 60 && ShowResetOTPTrans ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Transganizer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTPTrans(0)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Transganizer OTP\" name=\"firstName\" value={transOTP} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Transganizer OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={OnVerifyHandleConfirm}>Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>) : (null)}\r\n              {showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Confirmation </h4>\r\n                  Are You Sure You Want To Submit!!\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTP ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverData}>RESEND OTP For Beliver </button>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTPTrans && !showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={ResendBeliverDataTrans}>RESEND OTP For Transaganiser </button>\r\n                </div>\r\n              ) : (null)}\r\n              {showWrongOtp ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Wrong OTP </h4>\r\n                  You Have Entered Wrong OTP!!\r\n                  <div class=\"modal-footer\">\r\n                    {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button> */}\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={smShow}\r\n        onHide={() => setSmShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={MAdd}\r\n        onHide={() => setSmShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n        {/* {showData ? (\r\n        <Noti />\r\n      ): (null)} */}\r\n        <div class=\"body_scroll\">\r\n          <div className=\"block-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n                <h2>Naisthya </h2>\r\n                <button className=\"btn btn-primary btn-icon mobile_menu\" type=\"button\"><i className=\"zmdi zmdi-sort-amount-desc\"></i></button>\r\n              </div>\r\n              {/* <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n                <button className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\" type=\"button\"><i className=\"zmdi zmdi-arrow-right\"></i></button>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          {showData ? (\r\n            <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                  <div className=\"card p-4 mt-2\">\r\n                    <div className=\"body\">\r\n\r\n                      {/* {naisthyaData.length > 0 ? (\r\n                        <> */}\r\n                      <div className=\"row clearfix\" >\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\"><strong>Naishtya Statement</strong></h2>\r\n                          <div>\r\n                            <Editor contents={naishtyaStatement} getValue={(newContent) => { setNaishtyaStatement(newContent) }} />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\"><strong>Time Period and No of Vilakshan Units</strong></h2>\r\n                          <div>\r\n                            <Editor contents={timePeriod} getValue={(newContent) => { setTimePeriod(newContent) }} />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\"><strong>Believer Group</strong></h2>\r\n                          <div>\r\n                            <Editor contents={believerGroup} getValue={(newContent) => { setBelieverGroup(newContent) }} />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\"><strong>Impact Point</strong></h2>\r\n                          <div>\r\n                            <Editor contents={impactPoint} getValue={(newContent) => { setImpactPoint(newContent) }} />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\"><strong>Prayaan Statement</strong></h2>\r\n                          <div>\r\n                            <Editor contents={prayaanStatement} getValue={(newContent) => { setPrayaanStatement(newContent) }} />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\"><strong>Date of Launch of Prayaan</strong></h2>\r\n                          <div>\r\n                            <Editor contents={dateofLaunch} getValue={(newContent) => { setDateofLaunch(newContent) }} />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-12\">\r\n                          <h2 className=\"card-inside-title\"><strong>List of activities which we will never do</strong></h2>\r\n                          <div>\r\n                            <Editor contents={listofactivities} getValue={(newContent) => { setListofactivities(newContent) }} />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div style={{ marginTop: 20 }}></div>\r\n                      <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnSubmitForm}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button>\r\n\r\n                      {naisthyaData.length > 0 ? (\r\n                        <>\r\n                          <button\r\n                            type=\"button\"\r\n                            class=\"btn viewbtn  waves-effect\"\r\n                            onClick={ViewModel}\r\n                          >\r\n                            View   <i className=\"ml-1 zmdi zmdi-eye \" />\r\n                          </button>\r\n                          <button type=\"button\" class=\"btn savebtn  waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={HandleSubmit}>SUBMIT<i class=\"ml-1 zmdi zmdi-check\"></i></button>\r\n                          {/* <div> */}\r\n                          <button type=\"button\" class=\"btn downloadbtn waves-effect\" onClick={exportPDFWithMethod}>Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                          </button>\r\n                        </>\r\n                      ) : null}\r\n                      <Modal\r\n                        size=\"lg\"\r\n                        show={viewModal}\r\n                        onHide={handleClose}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                      >\r\n                        <Modal.Header closeButton style={{ padding: \"10px\" }}>\r\n                          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                          </Modal.Title>\r\n\r\n                          <div className=\"col-md-12 row\" >\r\n                            <div className=\"col-md-6\">\r\n                              <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                            </div>\r\n                            <div className=\"col-md-6 pageHeading\" >\r\n                              Financial Model\r\n                            </div>\r\n                          </div>\r\n\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                          <div >\r\n                            <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                              <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                  <div className=\"pdfHeader\">Naisthya </div>\r\n                                  <div className=\"headText\">1. Naishtya Statement</div>\r\n                                  <div className=\"dynamicContent\">{naishtyaStatement.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ').replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                  <div className=\"headText\">2. Time Period and No of Vilakshan Units</div>\r\n                                  <div className=\"dynamicContent\">{timePeriod.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                  <div className=\"headText\">3. Believer Group</div>\r\n                                  <div className=\"dynamicContent\">{believerGroup.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                  <div className=\"headText\">4. Impact Point</div>\r\n                                  <div className=\"dynamicContent\">{impactPoint.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                  <div className=\"headText\">5. Prayaan Statement</div>\r\n                                  <div className=\"dynamicContent\">{prayaanStatement.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                  <div className=\"headText\">6. Date of Launch of Prayaan</div>\r\n                                  <div className=\"dynamicContent\">{dateofLaunch.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                  <div className=\"headText\">7. List of activities which we will never do</div>\r\n                                  <div className=\"dynamicContent\">{listofactivities.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </Modal.Body>\r\n                      </Modal>\r\n                      {/* </div> */}\r\n                      {/* </>\r\n                      ) : (null)} */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (null)}\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"-3000px\",\r\n            top: 0,\r\n          }}\r\n        >\r\n\r\n\r\n          {pdfShowDes > 0 ? (\r\n\r\n            <PDFExport\r\n              paperSize=\"A4\"\r\n              margin=\"1cm\"\r\n              ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`}\r\n              forcePageBreak=\".page-break\"\r\n            >\r\n              <Modal.Header closeButton style={{ padding: \"10px\" }}>\r\n                <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                </Modal.Title>\r\n\r\n                <div className=\"col-md-12 row\" >\r\n                  <div className=\"col-md-6\">\r\n                    <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                  </div>\r\n                  <div className=\"col-md-6 pageHeading\" >\r\n                    Financial Model\r\n                  </div>\r\n                </div>\r\n\r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                <div >\r\n                  <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"pdfHeader\">Naisthya </div>\r\n                        <div className=\"headText\">1. Naishtya Statement</div>\r\n                        <div className=\"dynamicContent\">{naishtyaStatement.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ').replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"headText\">2. Time Period and No of Vilakshan Units</div>\r\n                        <div className=\"dynamicContent\">{timePeriod.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"headText\">3. Believer Group</div>\r\n                        <div className=\"dynamicContent\">{believerGroup.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"headText\">4. Impact Point</div>\r\n                        <div className=\"dynamicContent\">{impactPoint.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"headText\">5. Prayaan Statement</div>\r\n                        <div className=\"dynamicContent\">{prayaanStatement.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"headText\">6. Date of Launch of Prayaan</div>\r\n                        <div className=\"dynamicContent\">{dateofLaunch.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"headText\">7. List of activities which we will never do</div>\r\n                        <div className=\"dynamicContent\">{listofactivities.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n            </PDFExport>\r\n          ) : (null)}\r\n\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan10/GoalDriller.js",["688","689"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Goal_drillPage from \"./goal_drillPage\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Parivartan5Tabs() {\r\n  const classes = useStyles();\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <section class=\"content\">\r\n      <div class=\"body_scroll\">\r\n        <div className=\"block-header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n              <h2>Goal Driller Neutral Network</h2>\r\n              <button\r\n                className=\"btn btn-primary btn-icon mobile_menu\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n               {/* <button\r\n                className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"zmdi zmdi-arrow-right\"></i>\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\">\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n              <Tab label=\"Goal Driller\" {...a11yProps(0)} />\r\n              {/* <Tab label=\"Step By Step Process Table\" {...a11yProps(1)} /> */}\r\n            </Tabs>\r\n          </AppBar>\r\n          <TabPanel value={value} index={0}>\r\n            <Goal_drillPage />\r\n          </TabPanel>\r\n          {/* <TabPanel value={value} index={1}>\r\n            <StepProcessTable />\r\n          </TabPanel> */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan06/Prayaan.js",["690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722"],"import React, { useState, useEffect } from \"react\";\r\nimport Editor from \"../../components/SunEditor\";\r\nimport \"suneditor/dist/css/suneditor.min.css\"; //Import Sun Editor's CSS File\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport Table from \"../Parivartan06/NaisthyaTable\";\r\nimport ReactExport from \"react-data-export\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport axios from 'axios';\r\nimport ModalSubmit from \"../../components/ModalSubmit\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function NaisthyaPrayaan() {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n  const ExcelFile = ReactExport.ExcelFile;\r\n  const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n  const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [showData, setShowData] = useState(false);\r\n  const [Prayaan_Category, setPrayaan_Category] = useState(\"\");\r\n  const [Prayaan_Steps, setPrayaan_Steps] = useState(\"\");\r\n  const [Executor, setExecutor] = useState(\"\");\r\n  const [Owner, setOwner] = useState(\"\");\r\n  const [Start_Date, setStart_Date] = useState(\"\");\r\n  const [Date_of_Completion, setDate_of_Completion] = useState(\"\");\r\n\r\n\r\n  // For Edit\r\n  const [Prayaan_CategoryEdit, setPrayaan_CategoryEdit] = useState(\"\");\r\n  const [Prayaan_StepsEdit, setPrayaan_StepsEdit] = useState(\"\");\r\n  const [ExecutorEdit, setExecutorEdit] = useState(\"\");\r\n  const [OwnerEdit, setOwnerEdit] = useState(\"\");\r\n  const [Start_DateEdit, setStart_DateEdit] = useState(\"\");\r\n  const [Date_of_CompletionEdit, setDate_of_CompletionEdit] = useState(\"\");\r\n\r\n\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n\r\n\r\n\r\n\r\n  let [prayaanData, setPrayaanData] = useState(\"\");\r\n\r\n  const [loading, setloading] = useState(false);\r\n  const [editId, seteditId] = useState(\"\");\r\n  const [delId, setdelId] = useState(\"\");\r\n  let [completeData, setcompleteData] = useState(\"\");\r\n  // let [formData, setformData] = useState(\"\");\r\n  let [vilakshanData, setVilakshanData] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [editModal, seteditModal] = useState(false);\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n\r\n\r\n  const [BeliverOTP, setBeliverOTP] = useState('');\r\n  const [transOTP, setTransOTP] = useState('');\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [secondsfortrans, setsecondsfortrans] = useState(0);\r\n  const [ShowResetOTP, setShowResetOTP] = useState(true);\r\n  const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\r\n  const [showConfirmBox, setshowConfirmBox] = useState(false);\r\n\r\n  const [showHide, setshowHide] = useState(false);\r\n\r\n  const [belEmail, setbelEmail] = useState(\"\");\r\n  const [transEmail, settransEmail] = useState(\"\");\r\n  const [bypassEmail, setbypassEmail] = useState(\"\");\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n  const [varifiedValue, setvarifiedValue] = useState(\"\");\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [varval, setvarval] = useState(\"\");\r\n  const [EnteredBeliverOTP, setEnteredBeliverOTP] = useState('');\r\n  const [showWrongOtp, setshowWrongOtp] = useState(false);\r\n\r\n  useEffect(() => {\r\n    var s_id = localStorage.getItem('tr_id')\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, []);\r\n\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    seteditModal(false);\r\n    setviewModal(false);\r\n\r\n  };\r\n\r\n  const deleteConfirm = () => {\r\n    // alert(delId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"delete\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/prayaan/${delId}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        setMdelete(true);\r\n        setTimeout(() => {\r\n          setMdelete(false);\r\n        }, 1000)\r\n        GetallRecords();\r\n        seteditId(resData.data[0].id);\r\n        console.log(\"deleted\");\r\n        setShow(false);\r\n\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    setShow(false);\r\n  };\r\n  // const handleShow = () => setShow(true);\r\n\r\n  const OnSubmitUpdate = (edId) => {\r\n    // alert(edId)\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      prayaan_category: Prayaan_CategoryEdit,\r\n      prayaan_steps: Prayaan_StepsEdit,\r\n      executer: ExecutorEdit,\r\n      owner: OwnerEdit,\r\n      start_date: Start_DateEdit,\r\n      completion_date: Date_of_CompletionEdit,\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/prayaan/${edId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"updated\");\r\n          setMupdate(true);\r\n          // setMupdate(false);\r\n          setTimeout(() => {\r\n            setMupdate(false);\r\n          }, 1000)\r\n          GetallRecords();\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    setShow(false);\r\n    seteditModal(false);\r\n    GetallRecords();\r\n  };\r\n\r\n\r\n  const editfn = (edit_id) => {\r\n    // alert(edit_id);\r\n    seteditModal(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/prayaan/${edit_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData.data[0].id);\r\n        seteditId(resData.data[0].id);\r\n        setPrayaan_CategoryEdit(resData.data[0].prayaan_category);\r\n        setPrayaan_StepsEdit(resData.data[0].prayaan_steps);\r\n        setExecutorEdit(resData.data[0].executer);\r\n        setOwnerEdit(resData.data[0].owner);\r\n        setStart_DateEdit(resData.data[0].start_date);\r\n        setDate_of_CompletionEdit(resData.data[0].completion_date);\r\n\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  const deletefn = (edit_id) => {\r\n    // alert(edit_id)\r\n    setdelId(edit_id);\r\n    setShow(true);\r\n  };\r\n\r\n  const OnSubmitForm = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      prayaan_category: Prayaan_Category,\r\n      prayaan_steps: Prayaan_Steps,\r\n      executer: Executor,\r\n      owner: Owner,\r\n      start_date: Start_Date,\r\n      completion_date: Date_of_Completion,\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/prayaan`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData);\r\n        GetallRecords();\r\n        if (resData.status == 200) {\r\n          console.log(\"All Data Added succesfully\");\r\n          setMadd(true);\r\n          // setMadd(false);\r\n          setTimeout(() => {\r\n            setMadd(false);\r\n          }, 1000)\r\n\r\n          setPrayaan_Category(\"\");\r\n          setPrayaan_Steps(\"\");\r\n          setExecutor(\"\");\r\n          setOwner(\"\");\r\n          setStart_Date(\"\");\r\n          setDate_of_Completion(\"\");\r\n\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  const GetallRecords = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (resData.data.id > 0) {\r\n          setbelEmail(resData.data.beliver_email);\r\n          settransEmail(resData.data.tranz_email);\r\n          setbypassEmail(resData.data.bypass_email);\r\n          setbeliverName(resData.data.beliver_name);\r\n\r\n        }\r\n      });\r\n\r\n    fetch(`http://localhost:9002/masters/prayaan/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData.data);\r\n        setPrayaanData(resData.data);\r\n        setvarifiedValue(resData.data[0].verified);\r\n        setUpid(resData.data[0].id);\r\n\r\n        setShowData(true);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n\r\n  const getRandomNum = (length) => {\r\n    var randomNum =\r\n      (Math.pow(10, length).toString().slice(length - 1) +\r\n        Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n    return randomNum;\r\n  }\r\n  const OnVerifyHandle = () => {\r\n    // alert(EnteredBeliverOTP);\r\n    GetallRecords()\r\n\r\n    if (BeliverOTP == EnteredBeliverOTP) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        verifiedVal: \"1\",\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/prayaan/verify/${Upid}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          // console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"updated\");\r\n            // setshowConfirmBox(true);\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n            GetallRecords()\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else if (BeliverOTP != EnteredBeliverOTP) {\r\n      setshowWrongOtp(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n      GetallRecords()\r\n    } else {\r\n      // setshowConfirmBox(true);\r\n      GetallRecords()\r\n\r\n      return false;\r\n    }\r\n\r\n    // setShowResetOTPTrans(true)\r\n    // setSeconds(0)\r\n    // setsecondsfortrans(60)\r\n  }\r\n  const ResendBeliverDataTrans = () => {\r\n    setShowResetOTPTrans(true)\r\n    setSeconds(0)\r\n    setsecondsfortrans(60)\r\n  }\r\n  const HandleInputChange = (event) => {\r\n    setEnteredBeliverOTP(event.target.value);\r\n  }\r\n  const HandleSubmit = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const ResendBeliverData = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const OnVerifyHandleConfirm = () => {\r\n    setShowResetOTPTrans(false)\r\n    setshowConfirmBox(true);\r\n  }\r\n  const HandleConfirmation = () => {\r\n    // setShowPdf(1)\r\n    setshowConfirmBox(false);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <ModalSubmit show={showHide} />\r\n      <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              {seconds == 60 && ShowResetOTP ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Believer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTP(false)\r\n                        setshowConfirmBox(false)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Believer OTP\" name=\"firstName\" value={BeliverOTP} />\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Beliver OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandle} >Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {secondsfortrans == 60 && ShowResetOTPTrans ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Transganizer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTPTrans(0)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Transganizer OTP\" name=\"firstName\" value={transOTP} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Transganizer OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={OnVerifyHandleConfirm}>Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>) : (null)}\r\n              {showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Confirmation </h4>\r\n                  Are You Sure You Want To Submit!!\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTP ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverData}>RESEND OTP For Beliver </button>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTPTrans && !showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={ResendBeliverDataTrans}>RESEND OTP For Transaganiser </button>\r\n                </div>\r\n              ) : (null)}\r\n              {showWrongOtp ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Wrong OTP </h4>\r\n                  You Have Entered Wrong OTP!!\r\n                  <div class=\"modal-footer\">\r\n                    {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button> */}\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n        <div class=\"body_scroll\">\r\n          <div className=\"block-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n                <h2>Prayaan </h2>\r\n                <button\r\n                  className=\"btn btn-primary btn-icon mobile_menu\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n                </button>\r\n              </div>\r\n              {/* <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n                <button\r\n                  className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"zmdi zmdi-arrow-right\"></i>\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          {/* {showData ? ( */}\r\n          <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card p-4 mt-2\">\r\n                  <div className=\"body p-5\">\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Prayaan Category\"\r\n                            name=\"Prayaan_Category\"\r\n                            value={Prayaan_Category}\r\n                            onChange={(event) => {\r\n                              setPrayaan_Category(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Prayaan Steps\"\r\n                            name=\"Prayaan_Steps\"\r\n                            value={Prayaan_Steps}\r\n                            onChange={(event) => {\r\n                              setPrayaan_Steps(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Executor\"\r\n                            name=\"Executor\"\r\n                            value={Executor}\r\n                            onChange={(event) => {\r\n                              setExecutor(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Owner\"\r\n                            name=\"Owner\"\r\n                            value={Owner}\r\n                            onChange={(event) => {\r\n                              setOwner(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"Date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Start Date\"\r\n                            name=\"Start_Date\"\r\n                            value={Start_Date}\r\n                            onChange={(event) => {\r\n                              setStart_Date(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"Date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Date of Completions\"\r\n                            name=\"Date_of_Completion\"\r\n                            value={Date_of_Completion}\r\n                            onChange={(event) => {\r\n                              setDate_of_Completion(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 20 }}></div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn savebtn  waves-effect\"\r\n                      onClick={OnSubmitForm}\r\n                    >\r\n                      SAVE <i className=\"ml-1 zmdi zmdi-save\"></i>\r\n                    </button>\r\n                    {prayaanData.length > 0 ? (<button type=\"button\" class=\"btn viewbtn  waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={HandleSubmit}>SUBMIT<i className=\"ml-1 zmdi zmdi-check\"></i></button>\r\n                    ) : null}\r\n                    {prayaanData.length > 0 ? (\r\n                      <div>\r\n\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            left: \"-3000px\",\r\n                            top: 0,\r\n                          }}\r\n                        >\r\n                          <PDFExport\r\n                            paperSize=\"A3\"\r\n                            margin=\"1cm\"\r\n                            ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`}\r\n                            forcePageBreak=\".page-break\"\r\n                          >\r\n                            <Modal.Header style={{ padding: \"10px\" }}>\r\n                              <div className=\"col-md-12 row\" >\r\n                                <div className=\"col-md-6\">\r\n                                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                </div>\r\n                                <div className=\"col-md-6 pageHeading\" >\r\n                                  Financial Model\r\n                                </div>\r\n                              </div>\r\n                              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                              </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                              {/* playground business model */}\r\n                              <div >\r\n                                <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n                                  <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                      <div className=\"pdfHeader\">Building Block</div>\r\n                                      <div class=\"table-responsive\" id=\"Table\">\r\n                                        <table class=\"table table-bordered\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th>Prayaan Category</th>\r\n                                              <th>Prayaan Steps</th>\r\n                                              <th>Executer</th>\r\n                                              <th>Owner</th>\r\n                                              <th>Start Date</th>\r\n                                              <th>Date of Completion</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                            {prayaanData.map((item, key) => (\r\n                                              <tr>\r\n                                                <td>{item.prayaan_category}</td>\r\n                                                <td>{item.prayaan_steps}</td>\r\n                                                <td>{item.executer}</td>\r\n                                                <td>{item.owner}</td>\r\n                                                <td>{item.start_date}</td>\r\n                                                <td>{item.completion_date}</td>\r\n                                              </tr>\r\n                                            ))}\r\n                                          </tbody>\r\n                                        </table>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </Modal.Body>\r\n                          </PDFExport>\r\n\r\n\r\n\r\n                          {/* View Modal-----------------------> */}\r\n                          <Modal\r\n                            size=\"lg\"\r\n                            show={viewModal}\r\n                            onHide={handleClose}\r\n                            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                          >\r\n                            <Modal.Header style={{ padding: \"10px\" }}>\r\n                              <div className=\"col-md-12 row\" >\r\n                                <div className=\"col-md-6\">\r\n                                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                </div>\r\n                                <div className=\"col-md-6 pageHeading\" >\r\n                                  Financial Model\r\n                                </div>\r\n                              </div>\r\n                              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                              </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                              {/* playground business model */}\r\n                              <div >\r\n                                <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n                                  <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                      <div className=\"pdfHeader\">Building Block</div>\r\n                                      <div class=\"table-responsive\" id=\"Table\">\r\n                                        <table class=\"table table-bordered\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th>Prayaan Category</th>\r\n                                              <th>Prayaan Steps</th>\r\n                                              <th>Executer</th>\r\n                                              <th>Owner</th>\r\n                                              <th>Start Date</th>\r\n                                              <th>Date of Completion</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                            {prayaanData.map((item, key) => (\r\n                                              <tr>\r\n                                                <td>{item.prayaan_category}</td>\r\n                                                <td>{item.prayaan_steps}</td>\r\n                                                <td>{item.executer}</td>\r\n                                                <td>{item.owner}</td>\r\n                                                <td>{item.start_date}</td>\r\n                                                <td>{item.completion_date}</td>\r\n                                              </tr>\r\n                                            ))}\r\n                                          </tbody>\r\n                                        </table>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </Modal.Body>\r\n                          </Modal>\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                    ) : null}\r\n                    <div style={{ marginTop: 20 }}></div>\r\n                    {prayaanData.length > 0 ? (\r\n                      <div class=\"table-responsive\" id=\"Table\">\r\n                        <table class=\"table table-bordered\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Prayaan Category</th>\r\n                              <th>Prayaan Steps</th>\r\n                              <th>Executer</th>\r\n                              <th>Owner</th>\r\n                              <th>Start Date</th>\r\n                              <th>Date of Completion</th>\r\n                              <th style={{ textAlign: \"center\" }}>Action</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {prayaanData.map((item, key) => (\r\n                              <tr>\r\n                                <td>{item.prayaan_category}</td>\r\n                                <td>{item.prayaan_steps}</td>\r\n                                <td>{item.executer}</td>\r\n                                <td>{item.owner}</td>\r\n                                <td>{item.start_date}</td>\r\n                                <td>{item.completion_date}</td>\r\n                                <td colspan=\"8\">\r\n                                  <div class=\"btn-group\">\r\n                                    <button\r\n                                      type=\"submit\"\r\n                                      title=\"edit\"\r\n                                      class=\"btn  zmdi zmdi-edit waves-effect pull-left\"\r\n                                      style={{ float: \"left\" }}\r\n                                      onClick={() => editfn(item.id)}\r\n                                    ></button>\r\n                                    <button\r\n                                      type=\"submit\"\r\n                                      title=\"delete\"\r\n                                      class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n                                      onClick={() => deletefn(item.id)}\r\n                                    ></button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn viewbtn  waves-effect\"\r\n                          onClick={ViewModel}\r\n                        >\r\n                          View  <i className=\"ml-1 zmdi zmdi-eye \" />                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn downloadbtn waves-effect\"\r\n                          onClick={exportPDFWithMethod}\r\n                        > Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i></button>\r\n\r\n                      </div>\r\n\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* ) : null} */}\r\n        </div>\r\n      </section>\r\n\r\n\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\r\n        </Modal.Header>\r\n        {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Cance\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirm}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* For Edit */}\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={editModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Edit Prayaan\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"body\">\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Prayaan Category\"\r\n                            name=\"Prayaan_Category\"\r\n                            value={Prayaan_CategoryEdit}\r\n                            onChange={(event) => {\r\n                              setPrayaan_CategoryEdit(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Prayaan Steps\"\r\n                            name=\"Prayaan_Steps\"\r\n                            value={Prayaan_StepsEdit}\r\n                            onChange={(event) => {\r\n                              setPrayaan_StepsEdit(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Executor\"\r\n                            name=\"Executor\"\r\n                            value={ExecutorEdit}\r\n                            onChange={(event) => {\r\n                              setExecutorEdit(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Owner\"\r\n                            name=\"Owner\"\r\n                            value={OwnerEdit}\r\n                            onChange={(event) => {\r\n                              setOwnerEdit(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"Date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Start Date\"\r\n                            name=\"Start_Date\"\r\n                            value={Start_DateEdit}\r\n                            onChange={(event) => {\r\n                              setStart_DateEdit(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"Date\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Date of Completions\"\r\n                            name=\"Date_of_Completion\"\r\n                            value={Date_of_CompletionEdit}\r\n                            onChange={(event) => {\r\n                              setDate_of_CompletionEdit(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 20 }}></div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn savebtn waves-effect\"\r\n                      onClick={() => OnSubmitUpdate(editId)}\r\n                    >\r\n                      Update{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan08/ShulkLak.js",["723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767"],"import React, { useEffect, useState } from \"react\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport ReactExport from \"react-data-export\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport axios from 'axios';\r\nimport ModalSubmit from \"../../components/ModalSubmit\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Form() {\r\n  // var dd=getFullYear()\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const ExcelFile = ReactExport.ExcelFile;\r\n  const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n  const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n  const pdfExportComponent = React.useRef(null);\r\n  let [ShulkData, setShulkData] = useState(\"\");\r\n  const [date, setdate] = useState();\r\n  const [Fdate, setFdate] = useState();\r\n  const [showData, setShowData] = useState(false);\r\n  const [formData, setformData] = useState([]);\r\n  const [formValid, setformValid] = useState(false);\r\n  const [revenue, setrevenue] = useState();\r\n  const [cost_of_goods_sold, setcost_of_goods_sold] = useState();\r\n  const [gross_profit, setgross_profit] = useState();\r\n  const [gross_profit_per, setgross_profit_per] = useState();\r\n\r\n  const [overhead_expenses, setoverhead_expenses] = useState();\r\n  const [ebidta, setebidta] = useState();\r\n  const [interest, setinterest] = useState();\r\n  const [ebdte, setebdte] = useState();\r\n  const [depreciation, setdepreciation] = useState();\r\n  const [ebtax, setebtax] = useState();\r\n  const [Tax1, setTax1] = useState();\r\n  const [taxamt, settaxamt] = useState();\r\n  const [patax, setpatax] = useState();\r\n  const [total, settotal] = useState();\r\n\r\n  const [revenue2, setrevenue2] = useState();\r\n  const [cost_of_goods_sold2, setcost_of_goods_sold2] = useState();\r\n  const [gross_profit2, setgross_profit2] = useState();\r\n  const [overhead_expenses2, setoverhead_expenses2] = useState();\r\n  const [ebidta2, setebidta2] = useState();\r\n  const [interest2, setinterest2] = useState();\r\n  const [ebdte2, setebdte2] = useState();\r\n  const [depreciation2, setdepreciation2] = useState();\r\n  const [ebtax2, setebtax2] = useState();\r\n  const [taxamt2, settaxamt2] = useState();\r\n  const [patax2, setpatax2] = useState();\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Madd, setMadd] = useState(false);\r\n  const [avg_rate, setavg_rate] = useState();\r\n  const [avgDevideBy, setavgDevideBy] = useState();\r\n\r\n\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n\r\n  const [BeliverOTP, setBeliverOTP] = useState('');\r\n  const [transOTP, setTransOTP] = useState('');\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [secondsfortrans, setsecondsfortrans] = useState(0);\r\n  const [ShowResetOTP, setShowResetOTP] = useState(true);\r\n  const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\r\n  const [showConfirmBox, setshowConfirmBox] = useState(false);\r\n\r\n  const [showHide, setshowHide] = useState(false);\r\n\r\n  const [belEmail, setbelEmail] = useState(\"\");\r\n  const [transEmail, settransEmail] = useState(\"\");\r\n  const [bypassEmail, setbypassEmail] = useState(\"\");\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n  const [varifiedValue, setvarifiedValue] = useState(\"\");\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [varval, setvarval] = useState(\"\");\r\n  const [EnteredBeliverOTP, setEnteredBeliverOTP] = useState('');\r\n  const [showWrongOtp, setshowWrongOtp] = useState(false);\r\n\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // setShowData(false);\r\n    setviewModal(false);\r\n  };\r\n\r\n  const revenuefn = (event) => {\r\n    let value = Number(event.target.value);\r\n    let value2 = ((Number(gross_profit)) / value);\r\n    setgross_profit_per(value2);\r\n    setgross_profit(value - cost_of_goods_sold);\r\n    setrevenue(value);\r\n\r\n    let cal = (value - cost_of_goods_sold)\r\n    let value3 = (cal / value * 100);\r\n    setgross_profit_per(value3);\r\n\r\n    // setgross_profit(value);\r\n    // setebidta(value);\r\n    // setebdte(value);\r\n    // setebtax(value);\r\n    // setpatax(value);\r\n    // settotal(revenue);\r\n    // console.log(gross_profit, \"/\", value)\r\n    // console.log(gross_profit / value)\r\n\r\n\r\n\r\n  };\r\n  const AVG_ratefn = (event) => {\r\n    setavgDevideBy(event.target.value);\r\n\r\n    let value = Number(event.target.value);\r\n    let cal = Number(revenue2 / value);\r\n\r\n    setavg_rate(cal.toFixed(2));\r\n    // console.log()\r\n    // setrevenue2(value + Number(ebidta2));\r\n    // setcost_of_goods_sold2(value + Number(ebidta2));\r\n\r\n\r\n  };\r\n\r\n  const cost_of_goods_soldfn = (event) => {\r\n    let value = Number(event.target.value);\r\n    let cal = (Number(revenue) - value)\r\n    console.log(cal / (Number(revenue)));\r\n    let value2 = (cal / (Number(revenue)) * 100);\r\n    let cal1 = (revenue - value);\r\n    setgross_profit(cal1.toFixed(2))\r\n    setgross_profit_per(value2);\r\n\r\n    setcost_of_goods_sold(value);\r\n    // setebidta(revenue - value);\r\n    // setebdte(revenue - value);\r\n    // setebtax(revenue - value);\r\n    // setpatax(revenue - value);\r\n  };\r\n\r\n  const gross_profitfn = (event) => {\r\n  };\r\n\r\n  const gross_profit_perfn = (event) => {\r\n  };\r\n\r\n  const overhead_expensesfn = (event) => {\r\n    let value = Number(event.target.value);\r\n    let cal = (Number(gross_profit - value))\r\n    setebidta(cal.toFixed(2));\r\n    setoverhead_expenses(value);\r\n\r\n\r\n    // console.log((Number(cost_of_goods_sold / revenue) / 1));\r\n    setoverhead_expenses2(value);\r\n    let cc = value + Number(ebidta2);\r\n    setgross_profit2(cc.toFixed(2));\r\n    // setrevenue2(value + Number(ebidta2));\r\n    setcost_of_goods_sold2(value + Number(ebidta2));\r\n    // setavg_rate(revenue2 / avgDevideBy);\r\n    let value2 = value + Number(ebidta2)\r\n    setavg_rate(value2 / avgDevideBy);\r\n    let cal1 = (cc / 0.2);\r\n    setrevenue2(cal1.toFixed(2));\r\n    let cal2 = (cal - cc);\r\n    setcost_of_goods_sold2(cal2.toFixed(2));\r\n\r\n  };\r\n\r\n  const ebidtafn = (event) => {\r\n    setebidta(event.target.value);\r\n  };\r\n\r\n\r\n\r\n\r\n  const interestfn = (event) => {\r\n    let value = Number(event.target.value);\r\n    setinterest(value);\r\n    setinterest2(value)\r\n\r\n    let cal = Number(ebidta - value);\r\n\r\n    setebdte(cal.toFixed(2));\r\n    setebtax(cal.toFixed(2));\r\n    setpatax(cal.toFixed(2));\r\n\r\n    let calx = Number(ebdte2) + value;\r\n    setebidta2(calx.toFixed(2))\r\n\r\n    let cal2 = (Number(calx) + Number(overhead_expenses));\r\n    setgross_profit2(cal2.toFixed(2));\r\n\r\n\r\n    let cal3 = (Number(cal2) / Number(gross_profit_per) * 100)\r\n    let revenue2Value = (cal3.toFixed(2));\r\n    setrevenue2(revenue2Value);\r\n\r\n    let cal4 = (Number(revenue2Value) - Number(cal2))\r\n    let cost_of_goods_sold2Value = (cal4.toFixed(2));\r\n    setcost_of_goods_sold2(cost_of_goods_sold2Value);\r\n\r\n    let cal5 = (Number(revenue2Value) / Number(avgDevideBy))\r\n    setavg_rate(cal5.toFixed(2));\r\n\r\n  };\r\n\r\n  const ebdtefn = (event) => {\r\n    setebdte(event.target.value);\r\n  };\r\n\r\n  const depreciationfn = (event) => {\r\n    let value = Number(event.target.value);\r\n\r\n    setdepreciation(value);\r\n    setdepreciation2(value)\r\n\r\n    let calx = (ebdte - value);\r\n\r\n    setebtax(calx.toFixed(2));\r\n\r\n    let cal = value + Number(ebtax2);\r\n\r\n    setebdte2(cal.toFixed(2))\r\n    setebidta2(cal.toFixed(2))\r\n    setgross_profit2(cal.toFixed(2))\r\n    setrevenue2(cal.toFixed(2))\r\n    setcost_of_goods_sold2(cal.toFixed(2))\r\n    let value2 = cal\r\n    setavg_rate(value2 / avgDevideBy);\r\n\r\n    // setpatax(ebdte - event.target.value);\r\n  };\r\n\r\n  const ebtaxfn = (event) => {\r\n    setebtax(event.target.value);\r\n  };\r\n\r\n  const Tax1fn = (event) => {\r\n  };\r\n\r\n  const taxamtfn = (event) => {\r\n    let value = Number(event.target.value);\r\n    let cal = (Number(ebtax) * value / 100)\r\n    setTax1(cal.toFixed(2));\r\n    console.log(Number(ebtax), \"-\", cal);\r\n    let value1 = (Number(ebtax) - cal);\r\n    setpatax(value1.toFixed(2));\r\n\r\n    settaxamt(value);\r\n    settaxamt2(value);\r\n\r\n  };\r\n\r\n  const pataxfn = (event) => {\r\n    setpatax(event.target.value);\r\n  };\r\n\r\n  const dataSet1 = [\r\n    {\r\n      header: \"Revenue\",\r\n      amount: revenue,\r\n    },\r\n    {\r\n      header: \"Cost of Goods Sold\",\r\n      amount: cost_of_goods_sold,\r\n    },\r\n    {\r\n      header: \"Gross Profit\",\r\n      amount: gross_profit,\r\n    },\r\n    {\r\n      header: \"Overhead Expenses\",\r\n      amount: overhead_expenses,\r\n    },\r\n    {\r\n      header: \"Earning Before Interest, Depreciation, Tax & Amount (EBIDTA)\",\r\n      amount: ebidta,\r\n    },\r\n    {\r\n      header: \"Interest\",\r\n      amount: interest,\r\n    },\r\n    {\r\n      header: \"Earning Before Depreciation & Taxes (EBDT)\",\r\n      amount: ebdte,\r\n    },\r\n    {\r\n      header: \"Depreciation\",\r\n      amount: depreciation,\r\n    },\r\n    {\r\n      header: \"Earning Before Tax\",\r\n      amount: ebtax,\r\n    },\r\n    {\r\n      header: \"Tax Amount (as per %)\",\r\n      amount: taxamt,\r\n    },\r\n    {\r\n      header: \"Profit After Tax\",\r\n      amount: patax,\r\n    },\r\n  ]\r\n  const dataSet2 = [\r\n    {\r\n      header: \"Revenue\",\r\n      amount: revenue2,\r\n    },\r\n    {\r\n      header: \"Cost of Goods Sold\",\r\n      amount: cost_of_goods_sold2,\r\n    },\r\n    {\r\n      header: \"Gross Profit\",\r\n      amount: gross_profit2,\r\n    },\r\n    {\r\n      header: \"Overhead Expenses\",\r\n      amount: overhead_expenses2,\r\n    },\r\n    {\r\n      header: \"Earning Before Interest, Depreciation, Tax & Amount (EBIDTA)\",\r\n      amount: ebidta2,\r\n    },\r\n    {\r\n      header: \"Interest\",\r\n      amount: interest2,\r\n    },\r\n    {\r\n      header: \"Earning Before Depreciation & Taxes (EBDT)\",\r\n      amount: ebdte2,\r\n    },\r\n    {\r\n      header: \"Depreciation\",\r\n      amount: depreciation2,\r\n    },\r\n    {\r\n      header: \"Earning Before Tax\",\r\n      amount: ebtax2,\r\n    },\r\n    {\r\n      header: \"Tax Amount (as per %)\",\r\n      amount: taxamt2,\r\n    },\r\n    {\r\n      header: \"Profit After Tax\",\r\n      amount: patax2,\r\n    },\r\n  ]\r\n  const revenuefn2 = (event) => {\r\n    let per = (Number(cost_of_goods_sold / revenue) / 1);\r\n    console.log(\"per : \" + per + \"gross : \" + event);\r\n    let value = ((Number(event)) / per);\r\n    console.log(Number(event) / (Number(cost_of_goods_sold / revenue) / 1))\r\n    setrevenue2(value);\r\n    setcost_of_goods_sold2(value);\r\n    setavg_rate(revenue2 / avgDevideBy);\r\n\r\n\r\n    return value;\r\n  };\r\n\r\n  const cost_of_goods_soldfn2 = (event) => {\r\n    let per = (Number(cost_of_goods_sold / revenue) / 1)\r\n    let value = (Number(event) * per)\r\n    console.log(Number(event) + \"\" + per);\r\n    // setcost_of_goods_sold2(value);\r\n    setavg_rate(revenue2 / avgDevideBy);\r\n\r\n  };\r\n\r\n  const overhead_expensesfn2 = (event) => {\r\n    // console.log((Number(cost_of_goods_sold / revenue) / 1));\r\n    setoverhead_expenses2(event.target.value);\r\n    let value = Number(event.target.value);\r\n    let cc = value + Number(ebidta2);\r\n    setgross_profit2(cc.toFixed(2));\r\n\r\n\r\n    let cal3 = (Number(cc) / Number(gross_profit_per) * 100);\r\n    console.log(Number(cc), \" /\", Number(gross_profit_per));\r\n    let revenue2Value = (cal3.toFixed(2));\r\n    setrevenue2(revenue2Value);\r\n\r\n    let value2 = value + Number(ebidta2)\r\n    setavg_rate(Number(value2 / avgDevideBy).toFixed(2));\r\n\r\n    let cal2 = (cal3 - cc);\r\n    setcost_of_goods_sold2(cal2.toFixed(2));\r\n\r\n  };\r\n\r\n  const ebidtafn2 = (event) => {\r\n    setebidta2(event.target.value)\r\n    let value = Number(event.target.value);\r\n    // setebidta2(value + Number(ebdte2))\r\n    // setgross_profit2(value + Number(ebdte2))\r\n    // setavg_rate(revenue2 / avgDevideBy);\r\n\r\n  };\r\n\r\n  const gross_profitfn2 = (event) => {\r\n\r\n  };\r\n\r\n  const interestfn2 = (event) => {\r\n    setinterest2(event.target.value)\r\n    let value = Number(event.target.value);\r\n    let cal = Number(ebdte2) + value;\r\n    setebidta2(cal.toFixed(2))\r\n\r\n    let cal2 = (Number(cal) + Number(overhead_expenses));\r\n    setgross_profit2(cal2.toFixed(2));\r\n\r\n    let cal3 = (Number(cal2) / Number(gross_profit_per) * 100);\r\n    console.log(Number(cal2), \" /\", Number(gross_profit_per));\r\n    let revenue2Value = (cal3.toFixed(2));\r\n    setrevenue2(revenue2Value);\r\n\r\n    let cal4 = (Number(revenue2Value) - Number(cal2))\r\n    let cost_of_goods_sold2Value = (cal4.toFixed(2));\r\n    setcost_of_goods_sold2(cost_of_goods_sold2Value);\r\n\r\n    let cal5 = (Number(revenue2Value) / Number(avgDevideBy))\r\n    setavg_rate(cal5.toFixed(2));\r\n\r\n  };\r\n\r\n  const ebdtefn2 = (event) => {\r\n\r\n  };\r\n\r\n  const depreciationfn2 = (event) => {\r\n    setdepreciation2(event.target.value)\r\n    let value = Number(event.target.value);\r\n    let cal = value + Number(ebtax2);\r\n\r\n    setebdte2(cal.toFixed(2))\r\n    let cal2 = (Number(cal) + Number(interest2))\r\n    setebidta2(cal2.toFixed(2))\r\n\r\n    let cal3 = (Number(cal2) + Number(overhead_expenses))\r\n    setgross_profit2(cal3.toFixed(2))\r\n\r\n    let cal4 = (Number(cal3) / Number(gross_profit_per) * 100);\r\n    console.log(Number(cal2), \" /\", Number(gross_profit_per));\r\n    let revenue2Value = (cal4.toFixed(2));\r\n    setrevenue2(revenue2Value);\r\n\r\n\r\n    let cal5 = (Number(revenue2Value) - Number(cal3))\r\n    let cost_of_goods_sold2Value = (cal5.toFixed(2));\r\n    setcost_of_goods_sold2(cost_of_goods_sold2Value);\r\n\r\n\r\n    let val = (revenue2Value / avgDevideBy);\r\n    setavg_rate(val.toFixed(2));\r\n\r\n  };\r\n\r\n  const ebtaxfn2 = (event) => {\r\n\r\n  };\r\n\r\n  const pataxfn2 = (event) => {\r\n    setpatax2(event.target.value);\r\n    let value = Number(event.target.value);\r\n    let value2 = (Number(taxamt2) / 100);\r\n    console.log(value2);\r\n\r\n    console.log((value, \" / \", value2))\r\n    let cal = (value / value2);\r\n    setebtax2(cal.toFixed(2))\r\n\r\n    // For depreciation 2\r\n    // setdepreciation2(event.target.value)\r\n    // let value = Number(event.target.value);\r\n    let cal2 = (Number(depreciation) + Number(cal));\r\n    console.log(Number(cal), \"+\", Number(depreciation))\r\n    setebdte2(cal2.toFixed(2))\r\n    setebidta2(cal2.toFixed(2))\r\n    setgross_profit2(cal2.toFixed(2))\r\n    setrevenue2(cal2.toFixed(2))\r\n    setcost_of_goods_sold2(cal2.toFixed(2))\r\n    let value3 = cal2\r\n    setavg_rate(value3 / avgDevideBy);\r\n\r\n\r\n    // for interst fn2\r\n\r\n    // setinterest2(event.target.value)\r\n    // let value = Number(interest);\r\n    let cal3 = Number(cal2) + Number(interest);\r\n    setebidta2(cal3.toFixed(2))\r\n\r\n    let cal4 = (Number(cal3) + Number(overhead_expenses));\r\n    setgross_profit2(cal4.toFixed(2));\r\n\r\n\r\n    let cal5 = (Number(cal4) / Number(gross_profit_per) * 100)\r\n    let revenue2Value = (cal5.toFixed(2));\r\n    setrevenue2(revenue2Value);\r\n\r\n    let cal6 = (Number(revenue2Value) - Number(cal4))\r\n    let cost_of_goods_sold2Value = (cal6.toFixed(2));\r\n    setcost_of_goods_sold2(cost_of_goods_sold2Value.toFixed(2));\r\n\r\n    let cal7 = (Number(revenue2Value) / Number(avgDevideBy))\r\n    setavg_rate(cal7.toFixed(2));\r\n\r\n\r\n\r\n  };\r\n\r\n  const taxamtfn2 = (event) => {\r\n    settaxamt2(event.target.value)\r\n    let value = Number(event.target.value);\r\n\r\n\r\n    let valuex = (Number(value) / 100);\r\n    console.log(valuex);\r\n\r\n    let value2 = value + Number(patax2)\r\n    // setavg_rate(value2 / avgDevideBy);\r\n    let cal = (patax2 / valuex);\r\n    setebtax2(cal.toFixed(2));\r\n\r\n\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetallRecords();\r\n  }, []);\r\n\r\n  const OnSubmitForm = () => {\r\n    if (ShulkData.length === 0) {\r\n      var myHeaders = new Headers()\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        revenue_1: revenue,\r\n        cost_of_goods_sold_1: cost_of_goods_sold,\r\n        gross_profit_1: gross_profit,\r\n\r\n        gross_profit_per: gross_profit_per,\r\n\r\n        overhead_expenses_1: overhead_expenses,\r\n        ebidta_1: ebidta,\r\n        interest_1: interest,\r\n        ebdt_1: ebdte,\r\n        depreciation_1: depreciation,\r\n        earning_before_tax_1: ebtax,\r\n\r\n        Tax1: Tax1,\r\n\r\n        tax_amount_1: taxamt,\r\n        profit_after_tax_1: patax,\r\n        revenue_2: revenue2,\r\n        cost_of_goods_sold_2: cost_of_goods_sold2,\r\n        gross_profit_2: gross_profit2,\r\n        overhead_expenses_2: overhead_expenses2,\r\n        ebidta_2: ebidta2,\r\n        interest_2: interest2,\r\n        ebdt_2: ebdte2,\r\n        depreciation_2: depreciation2,\r\n        earning_before_tax_2: ebtax2,\r\n        tax_amount_2: patax2,\r\n        profit_after_tax_2: patax2,\r\n\r\n        avgDevideBy: avgDevideBy,\r\n        avg_rate: avg_rate,\r\n\r\n        email_id: s_id,\r\n        created_by: s_id\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/shulk-lakshya`, requestOptionsrichtext)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Data Added succesfully\");\r\n            setMadd(true);\r\n            // setMadd(false);\r\n            setTimeout(() => {\r\n              setMadd(false);\r\n            }, 1000)\r\n          }\r\n          GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n    else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        revenue_1: revenue,\r\n        cost_of_goods_sold_1: cost_of_goods_sold,\r\n        gross_profit_1: gross_profit,\r\n\r\n        gross_profit_per: gross_profit_per,\r\n\r\n        overhead_expenses_1: overhead_expenses,\r\n        ebidta_1: ebidta,\r\n        interest_1: interest,\r\n        ebdt_1: ebdte,\r\n        depreciation_1: depreciation,\r\n        earning_before_tax_1: ebtax,\r\n\r\n        Tax1: Tax1,\r\n\r\n        tax_amount_1: taxamt,\r\n        profit_after_tax_1: patax,\r\n        revenue_2: revenue2,\r\n        cost_of_goods_sold_2: cost_of_goods_sold2,\r\n        gross_profit_2: gross_profit2,\r\n        overhead_expenses_2: overhead_expenses2,\r\n        ebidta_2: ebidta2,\r\n        interest_2: interest2,\r\n        ebdt_2: ebdte2,\r\n        depreciation_2: depreciation2,\r\n        earning_before_tax_2: ebtax2,\r\n        tax_amount_2: patax2,\r\n        profit_after_tax_2: patax2,\r\n\r\n        avgDevideBy: avgDevideBy,\r\n        avg_rate: avg_rate,\r\n\r\n        email_id: s_id,\r\n        updated_by: s_id\r\n      });\r\n      console.log(rawrich)\r\n      var requestOptionsrichtext = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      // http://localhost:9002/masters/\r\n      fetch(`http://localhost:9002/masters/shulk-lakshya/` + `${Upid}`, requestOptionsrichtext)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Data Added succesfully\");\r\n            setMupdate(true);\r\n            // setMupdate(false);\r\n            setTimeout(() => {\r\n              setMupdate(false);\r\n            }, 1000)\r\n          }\r\n          GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n\r\n  }\r\n  const GetallRecords = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (s_id) {\r\n          setbelEmail(resData.data.beliver_email);\r\n          settransEmail(resData.data.tranz_email);\r\n          setbypassEmail(resData.data.bypass_email);\r\n          setbeliverName(resData.data.beliver_name);\r\n\r\n        }\r\n      });\r\n    fetch(`http://localhost:9002/masters/shulk-lakshya/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        setvarifiedValue(resData.data[0].verified);\r\n        setUpid(resData.data[0].id);\r\n        let get_list = resData.data;\r\n        get_list.map((item, key) => {\r\n          setrevenue(item.revenue_1)\r\n          setcost_of_goods_sold(item.cost_of_goods_sold_1)\r\n          setgross_profit(item.gross_profit_1)\r\n          setgross_profit_per(item.gross_profit_per)\r\n\r\n          setoverhead_expenses(item.overhead_expenses_1)\r\n          setebidta(item.ebidta_1)\r\n          setinterest(item.interest_1)\r\n          setebdte(item.ebdt_1)\r\n          setdepreciation(item.depreciation_1)\r\n          setebtax(item.earning_before_tax_1)\r\n          setTax1(item.Tax1);\r\n\r\n          settaxamt(item.tax_amount_1)\r\n          setpatax(item.profit_after_tax_1)\r\n          setrevenue2(item.revenue_2)\r\n          setcost_of_goods_sold2(item.cost_of_goods_sold_2)\r\n          setgross_profit2(item.gross_profit_2)\r\n          setoverhead_expenses2(item.overhead_expenses_2)\r\n          setebidta2(item.ebidta_2)\r\n          setinterest2(item.interest_2)\r\n          setebdte2(item.ebdt_2)\r\n          setdepreciation2(item.depreciation_2)\r\n          setebtax2(item.earning_before_tax_2)\r\n          settaxamt2(item.tax_amount_2)\r\n          setpatax2(item.profit_after_tax_2)\r\n          setavgDevideBy(item.avgDevideBy)\r\n          setavg_rate(item.avg_rate)\r\n\r\n\r\n        });\r\n        setShulkData(resData.data);\r\n        setShowData(true);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n\r\n  const getRandomNum = (length) => {\r\n    var randomNum =\r\n      (Math.pow(10, length).toString().slice(length - 1) +\r\n        Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n    return randomNum;\r\n  }\r\n  const OnVerifyHandle = () => {\r\n    // alert(EnteredBeliverOTP);\r\n    GetallRecords()\r\n\r\n    if (BeliverOTP == EnteredBeliverOTP) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        verifiedVal: \"1\",\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/shulk-lakshya/verify/${Upid}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          // console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"updated\");\r\n            // setshowConfirmBox(true);\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n            GetallRecords()\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else if (BeliverOTP != EnteredBeliverOTP) {\r\n      setshowWrongOtp(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n      GetallRecords()\r\n    } else {\r\n      // setshowConfirmBox(true);\r\n      GetallRecords()\r\n\r\n      return false;\r\n    }\r\n\r\n    // setShowResetOTPTrans(true)\r\n    // setSeconds(0)\r\n    // setsecondsfortrans(60)\r\n  }\r\n  const ResendBeliverDataTrans = () => {\r\n    setShowResetOTPTrans(true)\r\n    setSeconds(0)\r\n    setsecondsfortrans(60)\r\n  }\r\n  const HandleInputChange = (event) => {\r\n    setEnteredBeliverOTP(event.target.value);\r\n  }\r\n  const HandleSubmit = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const ResendBeliverData = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const OnVerifyHandleConfirm = () => {\r\n    setShowResetOTPTrans(false)\r\n    setshowConfirmBox(true);\r\n  }\r\n  const HandleConfirmation = () => {\r\n    // setShowPdf(1)\r\n    setshowConfirmBox(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalSubmit show={showHide} />\r\n      <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              {seconds == 60 && ShowResetOTP ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Believer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTP(false)\r\n                        setshowConfirmBox(false)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Believer OTP\" name=\"firstName\" value={BeliverOTP} />\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Beliver OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandle} >Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {secondsfortrans == 60 && ShowResetOTPTrans ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Transganizer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTPTrans(0)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Transganizer OTP\" name=\"firstName\" value={transOTP} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Transganizer OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={OnVerifyHandleConfirm}>Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>) : (null)}\r\n              {showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Confirmation </h4>\r\n                  Are You Sure You Want To Submit!!\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTP ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverData}>RESEND OTP For Beliver </button>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTPTrans && !showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={ResendBeliverDataTrans}>RESEND OTP For Transaganiser </button>\r\n                </div>\r\n              ) : (null)}\r\n              {showWrongOtp ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Wrong OTP </h4>\r\n                  You Have Entered Wrong OTP!!\r\n                  <div class=\"modal-footer\">\r\n                    {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button> */}\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n        <Modal\r\n          size=\"sm\"\r\n          show={Madd}\r\n          onHide={() => setMadd(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Saved Successful</Modal.Body>\r\n        </Modal>\r\n\r\n\r\n\r\n        <Modal\r\n          size=\"sm\"\r\n          show={Mupdate}\r\n          onHide={() => setMupdate(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Update Successful</Modal.Body>\r\n        </Modal>\r\n\r\n\r\n        <div class=\"body_scroll\" >\r\n          <div className=\"block-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n                <h2>Shulk Lakshya</h2>\r\n                <button className=\"btn btn-primary btn-icon mobile_menu\" type=\"button\"><i className=\"zmdi zmdi-sort-amount-desc\"></i></button>\r\n              </div>\r\n              {/* <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n                <button className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\" type=\"button\"><i className=\"zmdi zmdi-arrow-right\"></i></button>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          {/* {showData ? ( */}\r\n          <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card p-4 mt-2\">\r\n                  <div className=\"body p-5\">\r\n                    <form>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-4\">\r\n                          <h2 >\r\n                            <strong>Headers</strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 >\r\n                            <strong>Amount</strong>\r\n                          </h2>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                          <span >\r\n                            {/* <strong>AVG Rate per Vilakshan Unit </strong>\r\n                              <strong>No of Expected Vilakshan to be achived to reach Revenue</strong> */}\r\n\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Revenue</strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"revenue\"\r\n                            onChange={revenuefn}\r\n                            placeholder=\"Revenue\"\r\n                            value={revenue}\r\n                          />\r\n                        </div>\r\n\r\n                        {/* <div className=\"col-md-4\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"AVG_rate\"\r\n                              onChange={AVG_ratefn}\r\n                              // placeholder=\"AVG_rate\"\r\n                              value={avgDevideBy}\r\n                            />\r\n                          </div> */}\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Cost of Goods Sold </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"cost_of_goods_sold\"\r\n                            onChange={cost_of_goods_soldfn}\r\n                            placeholder=\"Cost of Goods Sold\"\r\n                            value={cost_of_goods_sold}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Gross Profit </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"gross_profit\"\r\n                            name=\"gross_profit\"\r\n                            onChange={gross_profitfn}\r\n                            placeholder=\"Gross Profit\"\r\n                            value={gross_profit}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Gross Profit %</strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"gross_profit_per\"\r\n                            name=\"gross_profit_per\"\r\n                            onChange={gross_profit_perfn}\r\n                            placeholder=\"Gross Profit Percent\"\r\n                            value={gross_profit_per}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Overhead Expenses </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"overhead_expenses\"\r\n                            onChange={overhead_expensesfn}\r\n                            placeholder=\"Overhead Expenses\"\r\n                            value={overhead_expenses}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>\r\n                              Earning Before Interest, Depreciation, Tax & Amount\r\n                              (EBIDTA)\r\n                            </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"ebidta\"\r\n                            onChange={ebidtafn}\r\n                            placeholder=\"Earning Before Interest, Depreciation, Tax & Amount (EBIDTA)\"\r\n                            value={ebidta}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Interest </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"setinterest\"\r\n                            onChange={interestfn}\r\n                            placeholder=\"Interest\"\r\n                            value={interest}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>\r\n                              Earning Before Depreciation & Taxes (EBDT){\" \"}\r\n                            </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"ebdtefn\"\r\n                            onChange={ebdtefn}\r\n                            placeholder=\"Earning Before Depreciation & Taxes (EBDT)\"\r\n                            value={ebdte}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Depreciation </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"depreciation\"\r\n                            onChange={depreciationfn}\r\n                            placeholder=\"Depreciation\"\r\n                            value={depreciation}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Earning Before Tax </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"ebtax\"\r\n                            onChange={ebtaxfn}\r\n                            placeholder=\"Earning Before Tax\"\r\n                            value={ebtax}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Tax Amount (as per %) </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"taxamt\"\r\n                            onChange={taxamtfn}\r\n                            placeholder=\"Tax Amount (as per %)\"\r\n                            value={taxamt}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Tax </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"Tax1\"\r\n                            onChange={Tax1fn}\r\n                            placeholder=\"Tax\"\r\n                            value={Tax1}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Profit After Tax </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"patax\"\r\n                            onChange={pataxfn}\r\n                            placeholder=\"Profit After Tax\"\r\n                            value={patax}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                  <div style={{ marginTop: 40 }}></div>\r\n\r\n\r\n\r\n                  {/* Second section start here */}\r\n                  <div className=\"body\">\r\n                    <form>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-4\">\r\n                          <h2 >\r\n                            <strong>Headers</strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 >\r\n                            <strong>Amount</strong>\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Profit After Tax </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"patax\"\r\n                            onChange={pataxfn2}\r\n                            placeholder=\"Profit After Tax\"\r\n                            value={patax2}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Tax Amount (as per %) </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"taxamt\"\r\n                            onChange={taxamtfn2}\r\n                            placeholder=\"Tax Amount (as per %)\"\r\n                            value={taxamt2}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Earning Before Tax </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"ebtax\"\r\n                            onChange={ebtaxfn2}\r\n                            placeholder=\"Earning Before Tax\"\r\n                            value={ebtax2}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Depreciation </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"depreciation\"\r\n                            onChange={depreciationfn2}\r\n                            placeholder=\"Depreciation\"\r\n                            value={depreciation2}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>\r\n                              Earning Before Depreciation & Taxes (EBDT){\" \"}\r\n                            </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"ebdtefn\"\r\n                            onChange={ebdtefn2}\r\n                            placeholder=\"Earning Before Depreciation & Taxes (EBDT)\"\r\n                            value={ebdte2}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Interest </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"setinterest\"\r\n                            onChange={interestfn2}\r\n                            placeholder=\"Interest\"\r\n                            value={interest2}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>\r\n                              Earning Before Interest, Depreciation, Tax & Amount\r\n                              (EBIDTA)\r\n                            </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"ebidta\"\r\n                            onChange={ebidtafn2}\r\n                            placeholder=\"Earning Before Interest, Depreciation, Tax & Amount (EBIDTA)\"\r\n                            value={ebidta2}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Overhead Expenses </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"overhead_expenses\"\r\n                            onChange={overhead_expensesfn2}\r\n                            placeholder=\"Overhead Expenses\"\r\n                            value={overhead_expenses2}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Gross Profit </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"gross_profit\"\r\n                            name=\"gross_profit\"\r\n                            onChange={gross_profitfn2}\r\n                            placeholder=\"Gross Profit\"\r\n                            value={gross_profit2}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Revenue</strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n\r\n\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"revenue\"\r\n                            onChange={revenuefn2}\r\n                            placeholder=\"Revenue\"\r\n                            value={revenue2}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Cost of Goods Sold </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"cost_of_goods_sold\"\r\n                            onChange={cost_of_goods_soldfn2}\r\n                            placeholder=\"Cost of Goods Sold\"\r\n                            value={cost_of_goods_sold2}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 80 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>AVG Rate per Vilakshan Unit</strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"AVG_rate\"\r\n                            onChange={AVG_ratefn}\r\n                            placeholder=\"AVG Rate per Vilakshan Unit\"\r\n                            value={avgDevideBy}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n\r\n                      <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-4\">\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>No of Expected Vilakshan to be achived to reach Revenue </strong>\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"AVG_rate\"\r\n                            // onChange={AVG_ratefn}\r\n                            placeholder=\"AVG_rate\"\r\n                            value={avg_rate}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={OnSubmitForm}\r\n                        class=\"btn savebtn btn-square waves-effect\"\r\n                      >\r\n                        SAVE  <i className=\"ml-1 zmdi zmdi-save\"></i>\r\n                      </button>\r\n\r\n                      {ShulkData.length > 0 ? (<button type=\"button\" class=\"btn viewbtn  waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={HandleSubmit}>SUBMIT  <i className=\"ml-1 zmdi zmdi-check\"></i></button>\r\n                      ) : null}\r\n                    </form>\r\n                    {ShulkData.length > 0 ? (\r\n                      <div>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn viewbtn waves-effect\"\r\n                          onClick={ViewModel}\r\n                        >\r\n                          View  <i className=\"ml-1 zmdi zmdi-eye \" />                        </button>\r\n                        <button type=\"button\" class=\"btn downloadbtn waves-effect\" onClick={exportPDFWithMethod}>Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i></button>\r\n\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            left: \"-3000px\",\r\n                            top: 0,\r\n                          }}>\r\n                          <PDFExport paperSize=\"A3\" margin=\"1cm\" ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`} forcePageBreak=\".page-break\">\r\n                            <Modal.Header style={{ padding: \"10px\" }}>\r\n                              <div className=\"col-md-12 row\" >\r\n                                <div className=\"col-md-6\">\r\n                                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                </div>\r\n                                <div className=\"col-md-6 pageHeading\" >\r\n                                  Financial Model\r\n                                </div>\r\n                              </div>\r\n                              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                              </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                              <div>\r\n                                <div id=\"divToPrint\" className=\"mt4 pdfBody\">\r\n\r\n                                  <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                      <div className=\"pdfHeader\">Shulk Lakshya</div>\r\n                                      <div class=\"table-responsive\" id=\"Table\">\r\n                                        <table class=\"table table-bordered\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th>Headers</th>\r\n                                              <th>Amount</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                            <tr>\r\n                                              <td>Revenue</td>\r\n                                              <td>{ShulkData[0].revenue_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Cost of Goods Sold</td>\r\n                                              <td>{ShulkData[0].cost_of_goods_sold_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Gross Profit</td>\r\n                                              <td>{ShulkData[0].gross_profit_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Overhead Expenses</td>\r\n                                              <td>{ShulkData[0].overhead_expenses_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Earning Before Interest, Depreciation, Tax & Amount (EBIDTA)</td>\r\n                                              <td>{ShulkData[0].ebidta_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Interest</td>\r\n                                              <td>{ShulkData[0].interest_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Earning Before Depreciation & Taxes (EBDT)</td>\r\n                                              <td>{ShulkData[0].ebdt_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Depreciation</td>\r\n                                              <td>{ShulkData[0].depreciation_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Earning Before Tax</td>\r\n                                              <td>{ShulkData[0].earning_before_tax_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Tax Amount (as per %)</td>\r\n                                              <td>{ShulkData[0].tax_amount_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Profit After Tax</td>\r\n                                              <td>{ShulkData[0].profit_after_tax_1}</td>\r\n                                            </tr>\r\n                                          </tbody>\r\n                                        </table>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"row clearfix\" className=\"page-break\">\r\n                                    <div class=\"table-responsive\" id=\"Table\">\r\n                                      <table class=\"table table-bordered\">\r\n                                        <thead>\r\n                                          <tr>\r\n                                            <th>Headers</th>\r\n                                            <th>Amount</th>\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          <tr>\r\n                                            <td>Revenue</td>\r\n                                            <td>{ShulkData[0].revenue_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Cost of Goods Sold</td>\r\n                                            <td>{ShulkData[0].cost_of_goods_sold_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Gross Profit</td>\r\n                                            <td>{ShulkData[0].gross_profit_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Overhead Expenses</td>\r\n                                            <td>{ShulkData[0].overhead_expenses_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Earning Before Interest, Depreciation, Tax & Amount (EBIDTA)</td>\r\n                                            <td>{ShulkData[0].ebidta_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Interest</td>\r\n                                            <td>{ShulkData[0].interest_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Earning Before Depreciation & Taxes (EBDT)</td>\r\n                                            <td>{ShulkData[0].ebdt_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Depreciation</td>\r\n                                            <td>{ShulkData[0].depreciation_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Earning Before Tax</td>\r\n                                            <td>{ShulkData[0].earning_before_tax_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Tax Amount (as per %)</td>\r\n                                            <td>{ShulkData[0].tax_amount_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Profit After Tax</td>\r\n                                            <td>{ShulkData[0].profit_after_tax_2}</td>\r\n                                          </tr>\r\n                                        </tbody>\r\n                                      </table>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                            </Modal.Body>\r\n                          </PDFExport>\r\n\r\n                          {/* View Modal-----------------------> */}\r\n                          <Modal\r\n                            size=\"lg\"\r\n                            show={viewModal}\r\n                            onHide={handleClose}\r\n                            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                          >\r\n                            <Modal.Header style={{ padding: \"10px\" }}>\r\n                              <div className=\"col-md-12 row\" >\r\n                                <div className=\"col-md-6\">\r\n                                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                </div>\r\n                                <div className=\"col-md-6 pageHeading\" >\r\n                                  Financial Model\r\n                                </div>\r\n                              </div>\r\n                              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                              </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                              <div>\r\n                                <div id=\"divToPrint\" className=\"mt4 pdfBody\">\r\n\r\n                                  <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                      <div className=\"pdfHeader\">Shulk Lakshya</div>\r\n                                      <div class=\"table-responsive\" id=\"Table\">\r\n                                        <table class=\"table table-bordered\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th>Headers</th>\r\n                                              <th>Amount</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                            <tr>\r\n                                              <td>Revenue</td>\r\n                                              <td>{ShulkData[0].revenue_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Cost of Goods Sold</td>\r\n                                              <td>{ShulkData[0].cost_of_goods_sold_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Gross Profit</td>\r\n                                              <td>{ShulkData[0].gross_profit_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Overhead Expenses</td>\r\n                                              <td>{ShulkData[0].overhead_expenses_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Earning Before Interest, Depreciation, Tax & Amount (EBIDTA)</td>\r\n                                              <td>{ShulkData[0].ebidta_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Interest</td>\r\n                                              <td>{ShulkData[0].interest_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Earning Before Depreciation & Taxes (EBDT)</td>\r\n                                              <td>{ShulkData[0].ebdt_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Depreciation</td>\r\n                                              <td>{ShulkData[0].depreciation_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Earning Before Tax</td>\r\n                                              <td>{ShulkData[0].earning_before_tax_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Tax Amount (as per %)</td>\r\n                                              <td>{ShulkData[0].tax_amount_1}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td>Profit After Tax</td>\r\n                                              <td>{ShulkData[0].profit_after_tax_1}</td>\r\n                                            </tr>\r\n                                          </tbody>\r\n                                        </table>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"row clearfix\" className=\"page-break\">\r\n                                    <div class=\"table-responsive\" id=\"Table\">\r\n                                      <table class=\"table table-bordered\">\r\n                                        <thead>\r\n                                          <tr>\r\n                                            <th>Headers</th>\r\n                                            <th>Amount</th>\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          <tr>\r\n                                            <td>Revenue</td>\r\n                                            <td>{ShulkData[0].revenue_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Cost of Goods Sold</td>\r\n                                            <td>{ShulkData[0].cost_of_goods_sold_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Gross Profit</td>\r\n                                            <td>{ShulkData[0].gross_profit_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Overhead Expenses</td>\r\n                                            <td>{ShulkData[0].overhead_expenses_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Earning Before Interest, Depreciation, Tax & Amount (EBIDTA)</td>\r\n                                            <td>{ShulkData[0].ebidta_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Interest</td>\r\n                                            <td>{ShulkData[0].interest_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Earning Before Depreciation & Taxes (EBDT)</td>\r\n                                            <td>{ShulkData[0].ebdt_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Depreciation</td>\r\n                                            <td>{ShulkData[0].depreciation_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Earning Before Tax</td>\r\n                                            <td>{ShulkData[0].earning_before_tax_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Tax Amount (as per %)</td>\r\n                                            <td>{ShulkData[0].tax_amount_2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Profit After Tax</td>\r\n                                            <td>{ShulkData[0].profit_after_tax_2}</td>\r\n                                          </tr>\r\n                                        </tbody>\r\n                                      </table>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                            </Modal.Body>\r\n                          </Modal>\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                    ) : (null)\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* ) : (null)} */}\r\n        </div>\r\n      </section >\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan07/DrishtiCal.js",["768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794"],"import React, { useEffect, useState } from \"react\";\r\nimport Table from \"../Parivartan07/CustomerTable\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport axios from 'axios';\r\nimport ModalSubmit from \"../../components/ModalSubmit\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\nconst useStylesVerticle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const classes = useStyles();\r\n  const { children, value, index, ...other } = props;\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Form() {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n\r\n  // var dd=getFullYear()\r\n  const [date, setdate] = useState();\r\n  const [Fdate, setFdate] = useState();\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [formData, setformData] = useState([]);\r\n  const [formValid, setformValid] = useState(false);\r\n  const [vilakPara, setvilakPara] = useState(\r\n    \"Vilakshan and Associated Parameters\"\r\n  );\r\n  const [fy1, setfy1] = useState();\r\n  const [fy2, setfy2] = useState();\r\n  const [fy3, setfy3] = useState();\r\n  const [fy4, setfy4] = useState();\r\n  const [fy5, setfy5] = useState();\r\n  const [Mdelete, setMdelete] = useState(false);\r\n\r\n  const [viewModal, setviewModal] = useState(false);\r\n\r\n  const [BeliverOTP, setBeliverOTP] = useState('');\r\n  const [transOTP, setTransOTP] = useState('');\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [secondsfortrans, setsecondsfortrans] = useState(0);\r\n  const [ShowResetOTP, setShowResetOTP] = useState(true);\r\n  const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\r\n  const [showConfirmBox, setshowConfirmBox] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const [showHide, setshowHide] = useState(false);\r\n\r\n  const [belEmail, setbelEmail] = useState(\"\");\r\n  const [transEmail, settransEmail] = useState(\"\");\r\n  const [bypassEmail, setbypassEmail] = useState(\"\");\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n  const [varifiedValue, setvarifiedValue] = useState(\"\");\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [varval, setvarval] = useState(\"\");\r\n  const [EnteredBeliverOTP, setEnteredBeliverOTP] = useState('');\r\n  const [showWrongOtp, setshowWrongOtp] = useState(false);\r\n\r\n\r\n\r\n  const [fyE1, setfyE1] = useState(\"\");\r\n  const [fyE2, setfyE2] = useState(\"\");\r\n  const [fyE3, setfyE3] = useState(\"\");\r\n  const [fyE4, setfyE4] = useState(\"\");\r\n  const [fyE5, setfyE5] = useState(\"\");\r\n\r\n  const [editId, seteditId] = useState(\"\");\r\n  const [delId, setdelId] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [editModal, seteditModal] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [vilakParaE, setvilakParaE] = useState(\"\");\r\n\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // setShowData(false);\r\n    setviewModal(false);\r\n    seteditModal(false);\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n  const changeInpts = (event) => {\r\n    setvilakParaE(event.target.value);\r\n  };\r\n\r\n\r\n  const OnSubmitUpdate = (edId) => {\r\n    // alert(edId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      drishti_parameter: vilakParaE,\r\n      year_1: fyE1,\r\n      year_2: fyE2,\r\n      year_3: fyE3,\r\n      year_4: fyE4,\r\n      year_5: fyE5,\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/drishti/${edId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData);\r\n        if (resData.status == 200) {\r\n          // console.log(\"updated\");\r\n          setMupdate(true);\r\n          // setMupdate(false);\r\n          setTimeout(() => {\r\n            setMupdate(false);\r\n          }, 1000)\r\n          GetallRecords();\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    setShow(false);\r\n    seteditModal(false);\r\n    GetallRecords();\r\n  };\r\n\r\n  const getYear = () => {\r\n    let ddts = new Date().getFullYear();\r\n    let ddti = ddts.toString().substr(-2);\r\n    let ddt = parseInt(ddti);\r\n\r\n    let ddtF1 = ddts + 1;\r\n    let ddtF2 = ddts + 2;\r\n    let ddtF3 = ddts + 3;\r\n    let ddtF4 = ddts + 4;\r\n    // let ddtF5 = ddts + 5;\r\n\r\n    let ddt1 = ddt + 1;\r\n    let ddt2 = ddt + 2;\r\n    let ddt3 = ddt + 3;\r\n    let ddt4 = ddt + 4;\r\n    let ddt5 = ddt + 5;\r\n\r\n    setdate(ddt);\r\n    setFdate(ddts);\r\n\r\n    setfy1(\"FY \" + ddts + \"-\" + ddt1);\r\n    setfy2(\"FY \" + ddtF1 + \"-\" + ddt2);\r\n    setfy3(\"FY \" + ddtF2 + \"-\" + ddt3);\r\n    setfy4(\"FY \" + ddtF3 + \"-\" + ddt4);\r\n    setfy5(\"FY \" + ddtF4 + \"-\" + ddt5);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const verticleclasses = useStylesVerticle();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const [completeData, setcompleteData] = useState(\"\");\r\n  const [Madd, setMadd] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    getYear();\r\n    GetallRecords();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const deleteConfirm = () => {\r\n    // alert(delId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"delete\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/drishti/${delId}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // seteditId(resData.data[0].id);\r\n        // console.log(\"deleted\");\r\n        setShow(false);\r\n        setMdelete(true);\r\n        // setMdelete(false);\r\n        setTimeout(() => {\r\n          setMdelete(false);\r\n        }, 1000)\r\n        GetallRecords();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const editfn = (edit_id) => {\r\n    // alert(edit_id);\r\n    seteditModal(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/drishti/${edit_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        seteditId(resData.data[0].id);\r\n        // console.log(resData.data);\r\n        setvilakParaE(resData.data[0].drishti_parameter);\r\n        setfyE1(resData.data[0].year_1);\r\n        setfyE2(resData.data[0].year_2);\r\n        setfyE3(resData.data[0].year_3);\r\n        setfyE4(resData.data[0].year_4);\r\n        setfyE5(resData.data[0].year_5);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n\r\n\r\n\r\n  const deletefn = (edit_id) => {\r\n    // alert(edit_id);\r\n    setdelId(edit_id);\r\n    setShow(true);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var rawrich = JSON.stringify({\r\n      drishti_parameter: vilakPara,\r\n      year_1: fy1,\r\n      year_2: fy2,\r\n      year_3: fy3,\r\n      year_4: fy4,\r\n      year_5: fy5,\r\n      email_id: s_id,\r\n      created_by: s_id\r\n    });\r\n    var requestOptionsrichtext = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: rawrich,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/drishti`, requestOptionsrichtext)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n          setMadd(true);\r\n          // setMadd(false);\r\n          // renderTable();\r\n\r\n          setTimeout(() => {\r\n            setMadd(false);\r\n          }, 1000)\r\n          GetallRecords();\r\n          // renderTable();\r\n\r\n\r\n        }\r\n        // renderTable();\r\n\r\n        GetallRecords();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    setformValid(true);\r\n  };\r\n\r\n  const GetallRecords = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (resData.data.id > 0) {\r\n          setbelEmail(resData.data.beliver_email);\r\n          settransEmail(resData.data.tranz_email);\r\n          setbypassEmail(resData.data.bypass_email);\r\n          setbeliverName(resData.data.beliver_name);\r\n\r\n        }\r\n      });\r\n\r\n    fetch(\r\n      `http://localhost:9002/masters/drishti/user/1`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (resData.data.id > 0) {\r\n          setvarifiedValue(resData.data[0].verified);\r\n          setUpid(resData.data[0].id);\r\n        }\r\n\r\n      });\r\n\r\n    fetch(`http://localhost:9002/masters/drishti/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData.data);\r\n        setcompleteData(resData.data);\r\n        // console.log(\"dddddddd\", completeData);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n  // const renderTable = () => {\r\n  //   return <Table AllData={completeData} />;\r\n  // };\r\n\r\n  const getRandomNum = (length) => {\r\n    var randomNum =\r\n      (Math.pow(10, length).toString().slice(length - 1) +\r\n        Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n    return randomNum;\r\n  }\r\n  const OnVerifyHandle = () => {\r\n    // alert(EnteredBeliverOTP);\r\n    GetallRecords()\r\n\r\n    if (BeliverOTP == EnteredBeliverOTP) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        verifiedVal: \"1\",\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/drishti/verify/${Upid}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          // console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"updated\");\r\n            // setshowConfirmBox(true);\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n            GetallRecords()\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else if (BeliverOTP != EnteredBeliverOTP) {\r\n      setshowWrongOtp(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n      GetallRecords()\r\n    } else {\r\n      // setshowConfirmBox(true);\r\n      GetallRecords()\r\n\r\n      return false;\r\n    }\r\n\r\n    // setShowResetOTPTrans(true)\r\n    // setSeconds(0)\r\n    // setsecondsfortrans(60)\r\n  }\r\n  const ResendBeliverDataTrans = () => {\r\n    setShowResetOTPTrans(true)\r\n    setSeconds(0)\r\n    setsecondsfortrans(60)\r\n  }\r\n  const HandleInputChange = (event) => {\r\n    setEnteredBeliverOTP(event.target.value);\r\n  }\r\n  const HandleSubmit = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const ResendBeliverData = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const OnVerifyHandleConfirm = () => {\r\n    setShowResetOTPTrans(false)\r\n    setshowConfirmBox(true);\r\n  }\r\n  const HandleConfirmation = () => {\r\n    // setShowPdf(1)\r\n    setshowConfirmBox(false);\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <ModalSubmit show={showHide} />\r\n      <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              {seconds == 60 && ShowResetOTP ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Believer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTP(false)\r\n                        setshowConfirmBox(false)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Believer OTP\" name=\"firstName\" value={BeliverOTP} />\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Beliver OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandle} >Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {secondsfortrans == 60 && ShowResetOTPTrans ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Transganizer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTPTrans(0)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Transganizer OTP\" name=\"firstName\" value={transOTP} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Transganizer OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={OnVerifyHandleConfirm}>Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>) : (null)}\r\n              {showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Confirmation </h4>\r\n                  Are You Sure You Want To Submit!!\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTP ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverData}>RESEND OTP For Beliver </button>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTPTrans && !showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={ResendBeliverDataTrans}>RESEND OTP For Transaganiser </button>\r\n                </div>\r\n              ) : (null)}\r\n              {showWrongOtp ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Wrong OTP </h4>\r\n                  You Have Entered Wrong OTP!!\r\n                  <div class=\"modal-footer\">\r\n                    {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button> */}\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n      <section class=\"content\" style={{ backgroundColor: \"white\" }}>\r\n        <div class=\"body_scroll\">\r\n          <div className=\"block-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 col-md-6 col-sm-12\">\r\n                <h2>Drishti Calculator</h2>\r\n                <button\r\n                  className=\"btn btn-primary btn-icon mobile_menu\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"zmdi zmdi-sort-amount-desc\"></i>\r\n                </button>\r\n              </div>\r\n\r\n              {/* <div className=\"col-lg-5 col-md-6 col-sm-12\">\r\n                <button\r\n                  className=\"btn btn-primary btn-icon float-right right_icon_toggle_btn\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"zmdi zmdi-arrow-right\"></i>\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          <div className={classes.root}>\r\n            <TabPanel value={value} index={0}>\r\n              <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                    <div className=\"card p-4 mt-2\">\r\n                      <div className=\"body p-5\">\r\n                        <form>\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>Vilakshan and Associated Parameters </strong>\r\n                          </h2>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Vilakshan and Associated Parameters\"\r\n                            name=\"Vilakshan\"\r\n                            onChange={(event) => { setvilakPara(event.target.value) }}\r\n                            value={vilakPara}\r\n                          // placeholder=\"Vilakshan\"\r\n                          />\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>\r\n                              FY {Fdate}-{date + 1}\r\n                            </strong>\r\n                          </h2>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder={`FY ${Fdate}-${date + 1}`}\r\n                            name=\"fy1\"\r\n                            onChange={(event) => { setfy1(event.target.value) }}\r\n                            value={fy1}\r\n                          />\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>FY {Fdate + 1}-{date + 2}\r\n                            </strong>\r\n                          </h2>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder={`FY ${Fdate + 1}-${date + 2}`}\r\n                            name=\"fy2\"\r\n                            onChange={(event) => { setfy2(event.target.value) }}\r\n                            value={fy2}\r\n                          />\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>FY {Fdate + 2}-{date + 3}\r\n                            </strong>\r\n                          </h2>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder={`FY ${Fdate + 2}-${date + 3}`}\r\n                            name=\"fy3\"\r\n                            onChange={(event) => { setfy3(event.target.value) }}\r\n                            value={fy3}\r\n                          />\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>FY {Fdate + 3}-{date + 4}\r\n                            </strong>\r\n                          </h2>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder={`FY ${Fdate + 3}-${date + 4}`}\r\n                            name=\"fy4\"\r\n                            onChange={(event) => { setfy4(event.target.value) }}\r\n                            value={fy4}\r\n                          />\r\n\r\n                          <h2 className=\"card-inside-title\">\r\n                            <strong>FY {Fdate + 4}-{date + 5}\r\n                            </strong>\r\n                          </h2>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"setfy5\"\r\n                            placeholder={`FY ${Fdate + 4}-${date + 5}`}\r\n                            onChange={(event) => { setfy5(event.target.value) }}\r\n                            value={fy5}\r\n                          />\r\n                          <div style={{ marginTop: 20 }}></div>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={handleSubmit}\r\n                            class=\"btn savebtn btn-square waves-effect\"\r\n                          >\r\n                            SAVE <i className=\"ml-1 zmdi zmdi-save \" />\r\n                          </button>\r\n                          {completeData.length > 0 ? (<button type=\"button\" class=\"btn viewbtn  waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={HandleSubmit}>SUBMIT <i className=\"ml-1 zmdi zmdi-check \" /> </button>\r\n                          ) : null}\r\n                        </form>\r\n                        {completeData.length > 0 ? (\r\n                          <>\r\n                            {/* For Pdf -----------------------> */}\r\n                            <div\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                left: \"-3000px\",\r\n                                top: 0,\r\n                              }}\r\n                            >\r\n\r\n                              <PDFExport\r\n                                paperSize=\"A4\"\r\n                                margin=\"1cm\"\r\n                                ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`}\r\n                                forcePageBreak=\".page-break\"\r\n                              >\r\n                                <Modal.Header style={{ padding: \"10px\" }}>\r\n                                  <div className=\"col-md-12 row\" >\r\n                                    <div className=\"col-md-6\">\r\n                                      <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                    </div>\r\n                                    <div className=\"col-md-6 pageHeading\" >\r\n                                      Financial Model\r\n                                    </div>\r\n                                  </div>\r\n                                  <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                                  </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n\r\n                                  <div >\r\n                                    <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                                      <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12\">\r\n                                          <div className=\"pdfHeader\">Drishti Calculator</div>\r\n                                          <div class=\"table-responsive\" id=\"Table\">\r\n                                            <table class=\"table table-bordered\">\r\n                                              <thead>\r\n                                                <tr>\r\n                                                  <th>Vilakshan and Associated Parameters</th>\r\n                                                  <th>FY 2021-22</th>\r\n                                                  <th>FY 2022-23</th>\r\n                                                  <th>FY 2023-24</th>\r\n                                                  <th>FY 2024-25</th>\r\n                                                  <th>FY 2025-26</th>\r\n                                                </tr>\r\n                                              </thead>\r\n                                              <tbody>\r\n                                                {completeData.map((item, key) => (\r\n                                                  <tr>\r\n                                                    <td>{item.drishti_parameter}</td>\r\n                                                    <td>{item.year_1}</td>\r\n                                                    <td>{item.year_2}</td>\r\n                                                    <td>{item.year_3}</td>\r\n                                                    <td>{item.year_4}</td>\r\n                                                    <td>{item.year_5}</td>\r\n                                                  </tr>\r\n                                                ))}\r\n                                              </tbody>\r\n                                            </table>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                </Modal.Body>\r\n\r\n                              </PDFExport>\r\n                            </div>\r\n\r\n\r\n                            <Modal\r\n                              size=\"lg\"\r\n                              show={viewModal}\r\n                              onHide={handleClose}\r\n                              aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                            >\r\n                              <Modal.Header style={{ padding: \"10px\" }}>\r\n                                <div className=\"col-md-12 row\" >\r\n                                  <div className=\"col-md-6\">\r\n                                    <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                  </div>\r\n                                  <div className=\"col-md-6 pageHeading\" >\r\n                                    Financial Model\r\n                                  </div>\r\n                                </div>\r\n                                <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                                </Modal.Title>\r\n                              </Modal.Header>\r\n                              <Modal.Body>\r\n\r\n                                <div >\r\n                                  <div id=\"divToPrint\" className=\"mt4 pdfBody\" >\r\n\r\n                                    <div className=\"row clearfix\">\r\n                                      <div className=\"col-md-12\">\r\n                                        <div className=\"pdfHeader\">Drishti Calculator</div>\r\n                                        <div class=\"table-responsive\" id=\"Table\">\r\n                                          <table class=\"table table-bordered\">\r\n                                            <thead>\r\n                                              <tr>\r\n                                                <th>Vilakshan and Associated Parameters</th>\r\n                                                <th>FY 2021-22</th>\r\n                                                <th>FY 2022-23</th>\r\n                                                <th>FY 2023-24</th>\r\n                                                <th>FY 2024-25</th>\r\n                                                <th>FY 2025-26</th>\r\n                                              </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                              {completeData.map((item, key) => (\r\n                                                <tr>\r\n                                                  <td>{item.drishti_parameter}</td>\r\n                                                  <td>{item.year_1}</td>\r\n                                                  <td>{item.year_2}</td>\r\n                                                  <td>{item.year_3}</td>\r\n                                                  <td>{item.year_4}</td>\r\n                                                  <td>{item.year_5}</td>\r\n                                                </tr>\r\n                                              ))}\r\n                                            </tbody>\r\n                                          </table>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                              </Modal.Body>\r\n                            </Modal>\r\n\r\n                            <div style={{ marginTop: 30 }}></div>\r\n                            {/* {renderTable()} */}\r\n\r\n                            {/* <div className=\"row clearfix\">\r\n                              <div className=\"col-md-12\">\r\n                                <div class=\"table-responsive\" id=\"Table\">\r\n                                  <table class=\"table table-bordered\">\r\n                                    <thead>\r\n                                      <tr>\r\n                                        <th>Vilakshan and Associated Parameters</th>\r\n                                        <th>FY 2021-22</th>\r\n                                        <th>FY 2022-23</th>\r\n                                        <th>FY 2023-24</th>\r\n                                        <th>FY 2024-25</th>\r\n                                        <th>FY 2025-26</th>\r\n                                        <th>Action</th>\r\n\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {completeData.map((item, key) => (\r\n                                        <tr>\r\n                                          <td>{item.drishti_parameter}</td>\r\n                                          <td>{item.year_1}</td>\r\n                                          <td>{item.year_2}</td>\r\n                                          <td>{item.year_3}</td>\r\n                                          <td>{item.year_4}</td>\r\n                                          <td>{item.year_5}</td>\r\n                                          <td colspan=\"8\">\r\n                                            <div class=\"btn-group\">\r\n                                              <button\r\n                                                type=\"submit\"\r\n                                                title=\"edit\"\r\n                                                class=\"btn btn-success zmdi zmdi-edit waves-effect pull-left\"\r\n                                                style={{ float: \"left\" }}\r\n                                                onClick={() => editfn(item.id)}\r\n                                              ></button>\r\n                                              <button\r\n                                                type=\"submit\"\r\n                                                title=\"delete\"\r\n                                                class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n                                                onClick={() => deletefn(item.id)}\r\n                                              ></button>\r\n                                            </div>\r\n                                          </td>\r\n                                        </tr>\r\n                                      ))}\r\n                                    </tbody>\r\n                                  </table>\r\n                                </div>\r\n                              </div>\r\n                            </div> */}\r\n\r\n\r\n\r\n                            <Modal\r\n                              size=\"sm\"\r\n                              show={Mupdate}\r\n                              onHide={() => setMupdate(false)}\r\n                              aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                            >\r\n                              <Modal.Body >Form Update Successful</Modal.Body>\r\n                            </Modal>\r\n                            <div class=\"table-responsive\" id=\"Table\">\r\n                              <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th>Vilakshan and Associated Parameters</th>\r\n                                    <th>FYE 2021-22</th>\r\n                                    <th>FYE 2022-23 </th>\r\n                                    <th>FYE 2023-24 </th>\r\n                                    <th>FYE 2024-25 </th>\r\n                                    <th>FYE 2025-26 </th>\r\n                                    <th style={{ textAlign: \"center\" }}>Action</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                {completeData.map((item, key) => (\r\n                                  <tr>\r\n                                    <td>{item.drishti_parameter}</td>\r\n                                    <td>{item.year_1}</td>\r\n                                    <td>{item.year_2}</td>\r\n                                    <td>{item.year_3}</td>\r\n                                    <td>{item.year_4}</td>\r\n                                    <td>{item.year_5}</td>\r\n                                    <td colspan=\"8\">\r\n                                      <div class=\"btn-group\">\r\n                                        <button\r\n                                          type=\"submit\"\r\n                                          title=\"edit\"\r\n                                          class=\"btn zmdi zmdi-edit waves-effect pull-left\"\r\n                                          style={{ float: \"left\" }}\r\n                                          onClick={() => editfn(item.id)}\r\n                                        ></button>\r\n                                        <button\r\n                                          type=\"submit\"\r\n                                          title=\"delete\"\r\n                                          class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n                                          onClick={() => deletefn(item.id)}\r\n                                        ></button>\r\n                                      </div>\r\n                                    </td>\r\n                                  </tr>\r\n                                ))}\r\n                              </table>\r\n                            </div>\r\n\r\n                          </>\r\n                        ) : (null)\r\n                        }\r\n\r\n                      </div>\r\n                      {completeData.length > 0 ? (\r\n                        <>\r\n                          <button\r\n                            type=\"button\"\r\n                            class=\"ml-4 btn viewbtn waves-effect ml-5\"\r\n                            onClick={ViewModel}\r\n                          >\r\n                            View  <i className=\"ml-1 zmdi zmdi-eye \" />                        </button>\r\n                          <button type=\"button\" class=\"btn downloadbtn waves-effect\" onClick={exportPDFWithMethod}>Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i></button>\r\n                        </>\r\n                      ) : null}\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </TabPanel>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\r\n        </Modal.Header>\r\n        {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirm}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={editModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Edit VilakshanMap\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"body\">\r\n                    {/* <form> */}\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>Vilakshan and Associated Parameters </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Vilakshan and Associated Parameters\"\r\n                      name=\"vilakParaE\"\r\n                      onChange={changeInpts}\r\n                      value={vilakParaE}\r\n                    />\r\n                    {/* <input type=\"text\" onChange={changeInpt} value={vilakParaE}/> */}\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate}-{date + 1}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder={`FYE ${Fdate}-${date + 1}`}\r\n                      name=\"fyE1\"\r\n                      onChange={(event) => {\r\n                        setfyE1(event.target.value);\r\n                      }}\r\n                      value={fyE1}\r\n                    />\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate + 1}-{date + 2}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder={`FYE ${Fdate + 1}-${date + 2}`}\r\n                      name=\"fyE2\"\r\n                      onChange={(event) => {\r\n                        setfyE2(event.target.value);\r\n                      }}\r\n                      value={fyE2}\r\n                    />\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate + 2}-{date + 3}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder={`FYE ${Fdate + 2}-${date + 3}`}\r\n                      name=\"fyE3\"\r\n                      onChange={(event) => {\r\n                        setfyE3(event.target.value);\r\n                      }}\r\n                      value={fyE3}\r\n                    />\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate + 3}-{date + 4}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder={fyE4}\r\n                      name=\"fyE4\"\r\n                      onChange={(event) => {\r\n                        setfyE4(event.target.value);\r\n                      }}\r\n                      value={fyE4}\r\n                    />\r\n\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate + 4}-{date + 5}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"setfyE5\"\r\n                      placeholder={`FYE ${Fdate + 4}-${date + 5}`}\r\n                      onChange={(event) => {\r\n                        setfyE5(event.target.value);\r\n                      }}\r\n                      value={fyE5}\r\n                    />\r\n                    <div style={{ marginTop: 20 }}></div>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => OnSubmitUpdate(editId)}\r\n                      class=\"btn savebtn btn-square waves-effect\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                    {/* </form> */}\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/SunEditor.js",["795","796","797","798"],"\r\nimport React, { useRef, useState, useMemo } from 'react'\r\n// import JoditEditor from 'jodit-react'\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\nimport {\r\n  align,\r\n  font,\r\n  fontColor,\r\n  fontSize,\r\n  formatBlock,\r\n  hiliteColor,\r\n  horizontalRule,\r\n  lineHeight,\r\n  list,\r\n  paragraphStyle,\r\n  table,\r\n  template,\r\n  textStyle,\r\n  image,\r\n  link\r\n} from \"suneditor/src/plugins\";\r\n\r\n\r\nconst Editor = (props) => {\r\n  //contents is the dynamic value from parent\r\n  const { contents, getValue } = props\r\n  const editor = useRef(null)\r\n  const config = {}\r\n  return useMemo(() => (\r\n    <SunEditor\r\n      autoFocus={true}\r\n      setDefaultStyle=\"font-family:times new roman; font-size: 17px;\"\r\n      lang=\"en\"\r\n      setOptions={{\r\n        showPathLabel: false,\r\n        minHeight: \"10vh\",\r\n        maxHeight: \"50vh\",\r\n        placeholder: \"Enter your text here!!!\",\r\n        plugins: [\r\n          align,\r\n          font,\r\n          fontColor,\r\n          fontSize,\r\n          formatBlock,\r\n          hiliteColor,\r\n          horizontalRule,\r\n          lineHeight,\r\n          list,\r\n          paragraphStyle,\r\n          table,\r\n          template,\r\n          textStyle,\r\n\r\n        ],\r\n        buttonList: [\r\n          [\"undo\", \"redo\"],\r\n          [\"font\", \"fontSize\", \"formatBlock\"],\r\n          [\"paragraphStyle\"],\r\n          [\r\n            \"bold\",\r\n            \"underline\",\r\n            \"italic\",\r\n            \"strike\",\r\n            \"subscript\",\r\n            \"superscript\"\r\n          ],\r\n          [\"fontColor\", \"hiliteColor\"],\r\n          [\"removeFormat\"],\r\n          \"/\", // Line break\r\n          [\"outdent\", \"indent\"],\r\n          [\"align\", \"horizontalRule\", \"list\", \"lineHeight\"],\r\n          [\"table\"]\r\n        ],\r\n        formats: [\"p\", \"div\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\r\n        font: [\r\n          \"Arial\",\r\n          \"Calibri\",\r\n          \"Comic Sans\",\r\n          \"Courier\",\r\n          \"Garamond\",\r\n          \"Georgia\",\r\n          \"Impact\",\r\n          \"Lucida Console\",\r\n          \"Palatino Linotype\",\r\n          \"Segoe UI\",\r\n          \"Tahoma\",\r\n          \"Times New Roman\",\r\n          \"Trebuchet MS\"\r\n        ]\r\n      }}\r\n      ref={editor} setContents={contents} config={config} onChange={content => getValue(content)}\r\n    />\r\n\r\n  ), [])\r\n}\r\n\r\nexport default Editor\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/ModalSubmit.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan07/CustomerTable.js",["799","800","801","802","803","804","805","806","807","808","809","810","811","812","813"],"import React, { useEffect, useState } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Editor from \"../../components/SunEditor\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Table = (props) => {\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const [loading, setloading] = useState(false);\r\n  const [date, setdate] = useState();\r\n  const [Fdate, setFdate] = useState();\r\n  let [completeData, setcompleteData] = useState(\"\");\r\n\r\n  const [fyE1, setfyE1] = useState(\"\");\r\n  const [fyE2, setfyE2] = useState(\"\");\r\n  const [fyE3, setfyE3] = useState(\"\");\r\n  const [fyE4, setfyE4] = useState(\"\");\r\n  const [fyE5, setfyE5] = useState(\"\");\r\n\r\n  const [editId, seteditId] = useState(\"\");\r\n  const [delId, setdelId] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [editModal, seteditModal] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n  const [vilakParaE, setvilakParaE] = useState(\"\");\r\n\r\n\r\n\r\n  // const classes = useStyles();\r\n  // const verticleclasses = useStylesVerticle();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n\r\n  const changeInpts = (event) => {\r\n    setvilakParaE(event.target.value);\r\n  };\r\n\r\n  const getYear = () => {\r\n    let ddts = new Date().getFullYear();\r\n    let ddti = ddts.toString().substr(-2);\r\n    let ddt = parseInt(ddti);\r\n\r\n    let ddtF1 = ddts + 1;\r\n    let ddtF2 = ddts + 2;\r\n    let ddtF3 = ddts + 3;\r\n    let ddtF4 = ddts + 4;\r\n    // let ddtF5 = ddts + 5;\r\n\r\n    let ddt1 = ddt + 1;\r\n    let ddt2 = ddt + 2;\r\n    let ddt3 = ddt + 3;\r\n    let ddt4 = ddt + 4;\r\n    let ddt5 = ddt + 5;\r\n\r\n    setdate(ddt);\r\n    setFdate(ddts);\r\n\r\n    setfyE1(\"FYE \" + ddts + \"-\" + ddt1);\r\n    setfyE2(\"FYE \" + ddtF1 + \"-\" + ddt2);\r\n    setfyE3(\"FYE \" + ddtF2 + \"-\" + ddt3);\r\n    setfyE4(\"FYE \" + ddtF3 + \"-\" + ddt4);\r\n    setfyE5(\"FYE \" + ddtF4 + \"-\" + ddt5);\r\n  };\r\n\r\n  function TabPanel(props) {\r\n    // const classes = useStyles();\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    getYear();\r\n\r\n    GetallRecored();\r\n    setloading(true);\r\n    setTimeout(() => {\r\n      setloading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    seteditModal(false);\r\n  };\r\n\r\n  const deleteConfirm = () => {\r\n    // alert(delId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"delete\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/drishti/${delId}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // seteditId(resData.data[0].id);\r\n        // console.log(\"deleted\");\r\n        setShow(false);\r\n        setMdelete(true);\r\n        // setMdelete(false);\r\n        setTimeout(() => {\r\n          setMdelete(false);\r\n        }, 1000)\r\n        GetallRecored();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const editfn = (edit_id) => {\r\n    // alert(edit_id);\r\n    seteditModal(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/drishti/${edit_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        seteditId(resData.data[0].id);\r\n        // console.log(resData.data);\r\n        setvilakParaE(resData.data[0].drishti_parameter);\r\n        setfyE1(resData.data[0].year_1);\r\n        setfyE2(resData.data[0].year_2);\r\n        setfyE3(resData.data[0].year_3);\r\n        setfyE4(resData.data[0].year_4);\r\n        setfyE5(resData.data[0].year_5);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const OnSubmitUpdate = (edId) => {\r\n    // alert(edId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      drishti_parameter: vilakParaE,\r\n      year_1: fyE1,\r\n      year_2: fyE2,\r\n      year_3: fyE3,\r\n      year_4: fyE4,\r\n      year_5: fyE5,\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/drishti/${edId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData);\r\n        if (resData.status == 200) {\r\n          // console.log(\"updated\");\r\n          setMupdate(true);\r\n          // setMupdate(false);\r\n          setTimeout(() => {\r\n            setMupdate(false);\r\n          }, 1000)\r\n          GetallRecored();\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    setShow(false);\r\n    seteditModal(false);\r\n    GetallRecored();\r\n  };\r\n\r\n  const deletefn = (edit_id) => {\r\n    // alert(edit_id);\r\n    setdelId(edit_id);\r\n    setShow(true);\r\n  };\r\n\r\n  const GetallRecored = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/drishti/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        setcompleteData(resData.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  // let formData = props.AllData;\r\n  let rows = [];\r\n  if (completeData) {\r\n    completeData.map((item, key) => {\r\n      rows.push(\r\n        <tbody>\r\n          <td>{item.drishti_parameter}</td>\r\n          <td>{item.year_1}</td>\r\n          <td>{item.year_2}</td>\r\n          <td>{item.year_3}</td>\r\n          <td>{item.year_4}</td>\r\n          <td>{item.year_5}</td>\r\n          <td colspan=\"8\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                title=\"edit\"\r\n                class=\"btn btn-success zmdi zmdi-edit waves-effect pull-left\"\r\n                style={{ float: \"left\" }}\r\n                onClick={() => editfn(item.id)}\r\n              ></button>\r\n              <button\r\n                type=\"submit\"\r\n                title=\"delete\"\r\n                class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n                onClick={() => deletefn(item.id)}\r\n              ></button>\r\n            </div>\r\n          </td>\r\n        </tbody>\r\n      );\r\n    });\r\n  }\r\n\r\n  return loading ? (\r\n    <div sytle={{ display: \"flex\", justifyEContent: \"center\" }}>\r\n      <CircularProgress />\r\n    </div>\r\n  ) : (\r\n    <>\r\n\r\n\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n      <div class=\"table-responsive\" id=\"Table\">\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Vilakshan and Associated Parameters</th>\r\n              <th>FYE 2021-22</th>\r\n              <th>FYE 2022-23 </th>\r\n              <th>FYE 2023-24 </th>\r\n              <th>FYE 2024-25 </th>\r\n              <th>FYE 2025-26 </th>\r\n              <th style={{ textAlign: \"center\" }}>Action</th>\r\n            </tr>\r\n          </thead>\r\n          {rows}\r\n        </table>\r\n      </div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\r\n        </Modal.Header>\r\n        {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Cance\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirm}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        size=\"lg\"\r\n        show={editModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Edit VilakshanMap\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"body\">\r\n                    {/* <form> */}\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>Vilakshan and Associated Parameters </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Vilakshan and Associated Parameters\"\r\n                      name=\"vilakParaE\"\r\n                      onChange={changeInpts}\r\n                      value={vilakParaE}\r\n                    />\r\n                    {/* <input type=\"text\" onChange={changeInpt} value={vilakParaE}/> */}\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate}-{date + 1}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder={`FYE ${Fdate}-${date + 1}`}\r\n                      name=\"fyE1\"\r\n                      onChange={(event) => {\r\n                        setfyE1(event.target.value);\r\n                      }}\r\n                      value={fyE1}\r\n                    />\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate + 1}-{date + 2}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder={`FYE ${Fdate + 1}-${date + 2}`}\r\n                      name=\"fyE2\"\r\n                      onChange={(event) => {\r\n                        setfyE2(event.target.value);\r\n                      }}\r\n                      value={fyE2}\r\n                    />\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate + 2}-{date + 3}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder={`FYE ${Fdate + 2}-${date + 3}`}\r\n                      name=\"fyE3\"\r\n                      onChange={(event) => {\r\n                        setfyE3(event.target.value);\r\n                      }}\r\n                      value={fyE3}\r\n                    />\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate + 3}-{date + 4}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder={fyE4}\r\n                      name=\"fyE4\"\r\n                      onChange={(event) => {\r\n                        setfyE4(event.target.value);\r\n                      }}\r\n                      value={fyE4}\r\n                    />\r\n\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>\r\n                        FYE {Fdate + 4}-{date + 5}\r\n                      </strong>\r\n                    </h2>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"setfyE5\"\r\n                      placeholder={`FYE ${Fdate + 4}-${date + 5}`}\r\n                      onChange={(event) => {\r\n                        setfyE5(event.target.value);\r\n                      }}\r\n                      value={fyE5}\r\n                    />\r\n                    <div style={{ marginTop: 20 }}></div>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => OnSubmitUpdate(editId)}\r\n                      class=\"btn btn-success btn-square waves-effect\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                    {/* </form> */}\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n  );\r\n};\r\nexport default Table;\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan06/NaisthyaTable.js",["814","815"],"import React, { useEffect, useState } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Table = (props) => {\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const [loading, setloading] = useState(false);\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    setloading(true);\r\n    setTimeout(() => {\r\n      setloading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  let formData = props.AllData;\r\n  let rows = [];\r\n  if (formData) {\r\n    formData.map((item, key) => {\r\n      rows.push(\r\n        <tbody>\r\n          <td>{item.prayaan_category}</td>\r\n          <td>{item.prayaan_steps}</td>\r\n          <td>{item.executer}</td>\r\n          <td>{item.owner}</td>\r\n          <td>{item.start_date}</td>\r\n          <td>{item.completion_date}</td>\r\n        </tbody>\r\n      );\r\n    });\r\n  }\r\n\r\n  return loading ? (\r\n    <div sytle={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <CircularProgress />\r\n    </div>\r\n  ) : (\r\n    <div class=\"table-responsive\" id=\"Table\">\r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Prayaan Category</th>\r\n            <th>Prayaan Steps</th>\r\n            <th>Executer</th>\r\n            <th>Owner</th>\r\n            <th>StartDate</th>\r\n            <th>Date of Completion</th>\r\n          </tr>\r\n        </thead>\r\n        {rows}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default Table;\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan10/goal_drillPage.js",["816","817","818","819","820","821","822","823","824","825"],"import React, { useState, useEffect } from \"react\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Editor from \"../../components/SunEditor\";\r\n// import Table from \"./VilakshanMapTable\";\r\nimport Table from \"./RawTable\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Vilakshan(props) {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n\r\n  const pdfExportComponent = React.useRef(null);\r\n  let [completeData, setcompleteData] = useState(\"\");\r\n  const [formValid, setformValid] = useState(false);\r\n  const [business_unit, setbusiness_unit] = useState();\r\n  const [insteelObjective, setinsteelObjective] = useState();\r\n  const [FY, setFY] = useState();\r\n  const [goalDescription, setgoalDescription] = useState();\r\n  const [department, setdepartment] = useState();\r\n  const [division, setdivision] = useState();\r\n  const [role, setrole] = useState();\r\n  const [name, setname] = useState();\r\n  const [exptMngmt, setexptMngmt] = useState();\r\n  const [Weightages, setWeightages] = useState();\r\n  const [fy_target, setfy_target] = useState();\r\n  const [fy_actuals, setfy_actuals] = useState();\r\n  const [achievement_till_date, setachievement_till_date] = useState();\r\n\r\n  const changebusiness_unit = (event) => {\r\n    setbusiness_unit(event.target.value);\r\n  };\r\n\r\n  const changeinsteelObjective = (event) => {\r\n    setinsteelObjective(event.target.value);\r\n  };\r\n\r\n  const changeFY = (event) => {\r\n    setFY(event.target.value);\r\n  };\r\n\r\n  const changegoalDescription = (event) => {\r\n    setgoalDescription(event.target.value);\r\n  };\r\n\r\n  const changedepartment = (event) => {\r\n    setdepartment(event.target.value);\r\n  };\r\n\r\n  const changedivision = (event) => {\r\n    setdivision(event.target.value);\r\n  };\r\n\r\n  const changerole = (event) => {\r\n    setrole(event.target.value);\r\n  };\r\n\r\n  const changename = (event) => {\r\n    setname(event.target.value);\r\n  };\r\n\r\n  const changeexptMngmt = (event) => {\r\n    setexptMngmt(event.target.value);\r\n  };\r\n\r\n  const changeWeightages = (event) => {\r\n    setWeightages(event.target.value);\r\n  };\r\n\r\n  const changefy_target = (event) => {\r\n    setfy_target(event.target.value);\r\n  };\r\n\r\n  const changefy_actuals = (event) => {\r\n    setfy_actuals(event.target.value);\r\n  };\r\n\r\n  const changechangeachievement_till_date = (event) => {\r\n    setachievement_till_date(event.target.value);\r\n  };\r\n  // handle input change\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecored();\r\n  }, []);\r\n\r\n  const GetallRecored = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/goal_drillerRaw/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        setcompleteData(resData.data);\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n  const handleSubmit = (e) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var rawrich = JSON.stringify({\r\n      business_unit: business_unit,\r\n      insteelObjective: insteelObjective,\r\n      FY: FY,\r\n      goalDescription: goalDescription,\r\n      department: department,\r\n      division: division,\r\n      role: role,\r\n      name: name,\r\n      exptMngmt: exptMngmt,\r\n      Weightages: Weightages,\r\n      fy_target: fy_target,\r\n      fy_actuals: fy_actuals,\r\n      achievement_till_date: achievement_till_date,\r\n\r\n      email_id: s_id,\r\n      created_by: s_id\r\n    });\r\n    var requestOptionsrichtext = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: rawrich,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/goal_drillerRaw`,\r\n      requestOptionsrichtext\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n        }\r\n        GetallRecored();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    setformValid(true);\r\n  };\r\n  const renderTable = () => {\r\n    return <Table AllData={completeData} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row clearfix\">\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n          <div className=\"card\">\r\n            <div className=\"body\">\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Business Unit</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Business Unit\"\r\n                      name=\"business_unit\"\r\n                      onChange={changebusiness_unit}\r\n                      value={business_unit}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Insteel Objective</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Insteel Objective\"\r\n                      name=\"insteelObjective\"\r\n                      onChange={changeinsteelObjective}\r\n                      value={insteelObjective}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>FY</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"FY\"\r\n                      name=\"FY\"\r\n                      onChange={changeFY}\r\n                      value={FY}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Goal Description</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Goal Description\"\r\n                      name=\"goalDescription\"\r\n                      onChange={changegoalDescription}\r\n                      value={goalDescription}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Department</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Department\"\r\n                      name=\"department\"\r\n                      onChange={changedepartment}\r\n                      value={department}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Division</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Division\"\r\n                      name=\"division\"\r\n                      onChange={changedivision}\r\n                      value={division}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Role</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Role\"\r\n                      name=\"role\"\r\n                      onChange={changerole}\r\n                      value={role}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Name</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Name\"\r\n                      name=\"name\"\r\n                      onChange={changename}\r\n                      value={name}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Expectations from Management (Target)</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Expectations from Management (Target)\"\r\n                      name=\"exptMngmt\"\r\n                      onChange={changeexptMngmt}\r\n                      value={exptMngmt}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Weightages</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Weightages\"\r\n                      name=\"Weightages\"\r\n                      onChange={changeWeightages}\r\n                      value={Weightages}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>FY Target</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"FY Target\"\r\n                      name=\"fy_target\"\r\n                      onChange={changefy_target}\r\n                      value={fy_target}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>FY Actuals</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"FY Actuals\"\r\n                      name=\"fy_actuals\"\r\n                      onChange={changefy_actuals}\r\n                      value={fy_actuals}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-md-12\">\r\n                  <h2 className=\"card-inside-title\">\r\n                    <strong>Achievement Till date</strong>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Achievement Till date\"\r\n                      name=\"achievement_till_date\"\r\n                      onChange={changechangeachievement_till_date}\r\n                      value={achievement_till_date}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn btn-success  waves-effect\"\r\n                onClick={handleSubmit}\r\n              >\r\n                SAVE\r\n              </button>\r\n            </div>\r\n\r\n            <div style={{ marginTop: 30 }}></div>\r\n            {renderTable()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/apiServices/reflectionapi.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/vilakshanMapTab2.js",["826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867"],"import React, { useState, useEffect } from \"react\";\r\nimport { StickyTable, Row, Cell } from \"react-sticky-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport List from \"./data\";\r\nimport { ListContainer, ListItem } from \"../components/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragHandle } from \"../components/DragHandle\";\r\n\r\nexport default function Form(props) {\r\n\r\n  const list = List.getList();\r\n\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n  const [inputListFeature, setInputListFeature] = useState([{ featues: \"\" }]);\r\n  const [inputListFeature2, setInputListFeature2] = useState([{ featues2: \"\" }]);\r\n\r\n  const [inputList, setInputList] = useState([{ competition: \"\" }]);\r\n  const [inputListFinal, setInputListFinal] = useState([{ competition: \"\" }]);\r\n  const [inputListFinal2, setInputListFinal2] = useState([{}]);\r\n\r\n  const [customerList, setCustomerList] = useState([{}]);\r\n  const [allList, setallList] = useState(\"\");\r\n  const [EditList, setEditList] = useState([{}]);\r\n  const [edituser, setedituser] = useState(false);\r\n  const [PossibleCombination, setPossibleCombination] = useState(0);\r\n  const [total, settotal] = useState(0);\r\n  const [holdValue, setholdValue] = useState([]);\r\n  const [org_name, setorg_name] = useState(\"\");\r\n  const [completeData, setcompleteData] = useState('')\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [ShowHideErr, setShowHideErr] = useState(false);\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [errorshow, seterrorshow] = useState(false);\r\n\r\n  let [DrpValues, setDrpValues] = useState(\"\");\r\n\r\n  let no = holdValue.length;\r\n  const inputs = [];\r\n  useEffect(() => {\r\n    GetallRecords();\r\n\r\n  }, []);\r\n\r\n\r\n  const GetallRecords = () => {\r\n    // alert(\"ok\")\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n    setShowHideErr(false)\r\n    var myGetHeaders = new Headers();\r\n    myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myGetHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    // fetch(`http://localhost:9002/masters/valueprop/` + `${1}`, requestOptions)\r\n    fetch(`http://localhost:9002/masters/valueprop/user/` + `${s_id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        let MyValues = resData.data;\r\n        console.log(\"In UseEffect Function\", MyValues);\r\n        let data;\r\n        MyValues.map((item, key) => {\r\n          let Feature = eval(item.features);\r\n          let Feature2 = eval(item.features2);\r\n\r\n          settotal(Feature.length);\r\n          Feature.map((item, key) => {\r\n            // data.push([{competition:\"\", [`value${key}`]:\"\"}])\r\n            holdValue.push({});\r\n            console.log(\"Pushed data\", holdValue);\r\n          });\r\n\r\n\r\n\r\n          // setInputList(data)\r\n          setCustomerList(holdValue);\r\n          console.log(\"Dataa to get map\", Feature);\r\n          console.log(\"Dataa to get map2\", Feature2);\r\n\r\n          setPossibleCombination(item.possible_combination);\r\n          setInputListFeature(Feature);\r\n          setInputListFeature2(Feature2);\r\n          // props.OnValidateTab1(true);\r\n\r\n        });\r\n      });\r\n    fetch(\r\n      `http://localhost:9002/masters/vilakshanMapTab2/user/` + `${s_id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n\r\n        setcompleteData(resData.data);\r\n        console.log(\"---resDAta--->\", resData.data[0]);\r\n        let MyValues1 = resData.data;\r\n\r\n        let MyValues = resData.data;\r\n        if (MyValues.length > 0) {\r\n          setedituser(true);\r\n          setUpid(resData.data[0].id);\r\n\r\n        }\r\n        console.log(\"Edit Values\", MyValues);\r\n\r\n        MyValues.map((item, key) => {\r\n          console.log(\"before Eval\", item.features);\r\n          let Feature = eval(item.features);\r\n          let Feature2 = eval(item.features2);\r\n\r\n          console.log(\"SDfjdskjfn jsdhfkjsdfn\", Feature);\r\n          console.log(\"SDfjdskjfn jsdhfkjsdfn22\", Feature2);\r\n\r\n          setCustomerList(Feature);\r\n          setInputList(Feature);\r\n          setInputListFinal(Feature)\r\n          setInputListFinal2(Feature2)\r\n\r\n        });\r\n\r\n        console.log(\"Edit Values\", MyValues1);\r\n\r\n        // MyValues1.map((i, key) => {\r\n        //   console.log(\"before Eval\", i.features);\r\n        //   let Feature2 = eval(i.features);\r\n\r\n        //   console.log(\"SDfjdskjfn jsdhfkjsdfn\", Feature2);\r\n\r\n        //   setCustomerList(Feature);\r\n        //   setInputList(Feature);\r\n        //   setInputListFinal(Feature)\r\n        //   setInputListFinal2(Feature2)\r\n\r\n        // });\r\n      });\r\n\r\n    fetch(`http://localhost:9002/masters/customerSegment/user/${s_id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // setcompleteData(resData.data)\r\n        console.log(\"In Beliver Get all Reccords Function\", resData.data.length);\r\n        if (resData.data.length > 0) {\r\n          setorg_name(resData.data[0].org_name);\r\n          console.log(resData.data)\r\n          let MyValues = resData.data;\r\n          console.log(\"In UseEffect Function\", MyValues);\r\n          // MyValues.map((item, key) => {\r\n          //   let customerFaceMap = eval(item.customer_face);\r\n          //   console.log(\"Data customerFaceMap \", customerFaceMap);\r\n          //   setcustomerSegmentData(customerFaceMap)\r\n          //   setInputList(customerFaceMap);\r\n          // });\r\n        }\r\n        // setShowHideErrData(true)\r\n      });\r\n\r\n    fetch(`http://localhost:9002/masters/vilakshanMapTab1/user/${s_id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        setDrpValues(resData.data[0].features);\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    console.log(completeData, \"reso\");\r\n    console.log(DrpValues, \"DrpValues\");\r\n\r\n  }\r\n\r\n \r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    // console.log(e.target.id)\r\n    // console.log(index)\r\n\r\n    if (e.target.value > 9) {\r\n      setShowHideErr(false)\r\n    } else {\r\n      setShowHideErr(true);\r\n      // alert(Show)\r\n    }\r\n\r\n    const { name, value, ips } = e.target;\r\n    const list = [...inputListFinal];\r\n    console.log(\"Here is the Value---1>\", list);\r\n    list[index][name] = value;\r\n    list[index][\"is_display\"] = 0;\r\n\r\n    console.log(list[index][name]);\r\n    console.log(value + \"val\");\r\n\r\n    setInputListFinal(list);\r\n  };\r\n\r\n\r\n  const handleInputChange2 = (e, index) => {\r\n    if (e.target.value > 9) {\r\n      setShowHideErr(false)\r\n    } else {\r\n      setShowHideErr(true);\r\n      // alert(Show)\r\n    }\r\n\r\n    const { name, value } = e.target;\r\n    const list2 = [...inputListFinal2];\r\n    console.log(\"Here is the Value2\", list2);\r\n    list2[0][name] = value;\r\n    setInputListFinal2(list2);\r\n  };\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputListFinal];\r\n    setInputListFinal(list);\r\n    list.splice(index, 1);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    let value = [];\r\n    let key = [];\r\n    value.push('competition');\r\n    for (let i = 1; i <= total; i++) {\r\n      value.push(`value${i}`)\r\n    }\r\n    for (let i = 1; i <= total; i++) {\r\n      key.push([`${i}`])\r\n    }\r\n    var pack = function (arr) {\r\n      var length = arr.length,\r\n        result = {},\r\n        i;\r\n      for (i = 0; i < length; i++) {\r\n        result[(i < 10 ? '0' : '') + (i + 1)] = arr[i];\r\n      }\r\n      return result;\r\n    };\r\n    const finalobject = pack(value); //{01: \"one\", 02: \"two\", 03: \"three\"}      \r\n    console.log(\"object is\", finalobject)\r\n    setInputListFinal([...inputListFinal, finalobject]);\r\n    console.log(inputList);\r\n  };\r\n\r\n  const updateJson = (featureJson) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      features: featureJson,\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/vilakshanMapTab2/${Upid}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        GetallRecords();\r\n\r\n        if (resData.status == 200) {\r\n          // console.log(\"Values Submitted Succesfully==>\");\r\n          // setMupdate(true);\r\n          // setTimeout(() => {\r\n          //   setMupdate(false);\r\n          // }, 1000)\r\n          // props.OnValidate1(true)\r\n\r\n\r\n          GetallRecords();\r\n\r\n        }\r\n        GetallRecords();\r\n\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n\r\n\r\n  const OnSubmitHandle = () => {\r\n    for (var i = 0; i < inputListFinal.length; i++) {\r\n      if (inputListFinal[i].value0 == \"\" || !inputListFinal[i].value0) {\r\n        seterrorshow(true);\r\n        return false;\r\n      }\r\n    }\r\n    setCustomerList([...customerList], inputList);\r\n    let competition = [];\r\n    let Values = [];\r\n    // allObject.push(inputList);\r\n    inputList.map((comp, key) => {\r\n      competition.push(comp);\r\n    });\r\n    customerList.map((item, key) => {\r\n      if (Object.keys(item).length === 3) {\r\n        Values.push(item);\r\n        for (var key in item) {\r\n          console.log(\"Key Value is\", item);\r\n          console.log(\"Key Value is\", item[key]);\r\n          console.log(\"Key Value is\", allObject);\r\n        }\r\n      }\r\n    });\r\n\r\n    var allObject = [...competition, ...Values];\r\n    console.log(\"all datra\", allObject);\r\n    console.log(\"all data inputlist\", inputListFinal);\r\n    console.log(\"all data inputlist2\", inputListFinal2);\r\n\r\n    if (completeData.length === 0) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        features: inputListFinal,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/vilakshanMapTab2/`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          // props.OnValidate1(true)\r\n\r\n\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully==>\");\r\n            setMadd(true);\r\n            setTimeout(() => {\r\n              setMadd(false);\r\n            }, 1000)\r\n            // props.OnValidate1(true)\r\n            GetallRecords();\r\n\r\n            //             props.OnValidate1(true)\r\n\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        features: inputListFinal,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/vilakshanMapTab2/${Upid}`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully==>\");\r\n            setMupdate(true);\r\n            setTimeout(() => {\r\n              setMupdate(false);\r\n            }, 1000)\r\n            // props.OnValidate1(true)\r\n\r\n\r\n            GetallRecords();\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"container-fluid\">\r\n\r\n        <Modal\r\n          size=\"sm\"\r\n          show={Madd}\r\n          onHide={() => setMadd(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Saved Successful</Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          size=\"sm\"\r\n          show={Mupdate}\r\n          onHide={() => setMupdate(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Update Successful</Modal.Body>\r\n        </Modal>\r\n        {/* <div className=\"row clearfix \" style={{ backgroundColor: \"#F3F6F9\",width:\"100rem\",overflowX:\"auto\",whiteSpace:\"nowrap\" }}> */}\r\n        <div className=\"row clearfix \" style={{ backgroundColor: \"white\", width: \"80rem\", backgroundColor: \"#F3F6F9\" }}>\r\n\r\n          <div className=\"col-lg-12 col-md-12 col-sm-12\" >\r\n            <div className=\"card p-4 mt-2\" >\r\n\r\n\r\n              <div style={{ backgroundColor: \"white\", width: \"80rem\", overflowX: \"auto\", }}>\r\n                {console.log(inputListFinal[0].value0)}\r\n\r\n                {inputListFeature && inputListFinal ? (\r\n                  <div className=\"body p-5\">\r\n\r\n                    {errorshow == true ? (<div style={{ margin: \"10px\", marginLeft: \"30px\", text: \"red\" }}>\r\n                      <span className=\"text-danger\">Please fill the parent process name</span>\r\n                    </div>) : null}\r\n                    <div style={{ marginTop: 20 }}></div>\r\n\r\n\r\n                    <DragDropContext\r\n                      onDragEnd={(param) => {\r\n                        const srcI = param.source.index;\r\n                        const desI = param.destination?.index;\r\n                        if (desI) {\r\n                          inputListFinal.splice(desI, 0, inputListFinal.splice(srcI, 1)[0]);\r\n                          List.saveList(inputListFinal);\r\n                          console.log(inputListFinal)\r\n                          updateJson(inputListFinal);\r\n                        }\r\n                      }}\r\n                    >\r\n                      <ListContainer>\r\n\r\n                        <div className=\"row clearfix flex-nowrap\">\r\n                          <div className=\"col-lg-2\">\r\n                            <div className=\"form-group\">\r\n                              <strong>Select Vilakshan Journey</strong>\r\n                            </div>\r\n                            {/* {org_name} */}\r\n                          </div>\r\n                          <div className=\"col-lg-2\">\r\n                            <div className=\"form-group\">\r\n                              <strong>Parent Process Name</strong>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-lg-2\">\r\n                            <div className=\"form-group\">\r\n                              <strong>Parent Process Input</strong>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-2\">\r\n                            <div className=\"form-group\">\r\n                              <strong>Parent Process Output</strong>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-2\">\r\n                            <div className=\"form-group\">\r\n                              <strong>Parent Process Owner</strong>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-2\">\r\n                            <div className=\"form-group\">\r\n                              <strong>Strategic Support Process</strong>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-2\">\r\n                            <div className=\"form-group\">\r\n                              <strong>Strategic Support Input</strong>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-2\">\r\n                            <div className=\"form-group\">\r\n                              <strong>Strategic Support Output</strong>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <Droppable droppableId=\"droppable-1\">\r\n                          {(provided, _) => (\r\n                            <div ref={provided.innerRef} {...provided.droppableProps}>\r\n\r\n                              {inputListFinal.map((x, i) => {\r\n                                console.log(\"The competion sheet\", x)\r\n                                return (\r\n\r\n                                  <Draggable\r\n                                    key={i}\r\n                                    draggableId={\"draggable-\" + i}\r\n                                    index={i}\r\n                                  >\r\n                                    {(provided, snapshot) => (\r\n                                      <ListItem\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        style={{\r\n                                          ...provided.draggableProps.style,\r\n                                          boxShadow: snapshot.isDragging\r\n                                            ? \"0 0 .4rem #666\"\r\n                                            : \"none\",\r\n                                        }}\r\n                                      >\r\n\r\n                                        <div className=\"row clearfix flex-nowrap\">\r\n                                          {Array.from({ length: 1 }, (item, index) => {\r\n                                            return (\r\n                                              <>\r\n                                                {DrpValues.length > 0 ? (\r\n                                                  <div className=\"col-lg-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                      <div className=\"row clearfix flex-nowrap\">\r\n                                                        <DragHandle {...provided.dragHandleProps} className=\"mr-2\" />\r\n                                                        <select name=\"tag\" id=\"add_tag\" value={x[`tag`]} className=\"form-control\" onChange={(e) => handleInputChange(e, i)}>\r\n                                                          {DrpValues.map((item, key) => (\r\n                                                            // console.log(item.vilakshan_journey)\r\n                                                            <option value={item.id}>{item.value0}</option>\r\n                                                          ))}\r\n                                                        </select>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                ) : (null)}\r\n                                              </>\r\n                                            );\r\n                                          })\r\n                                          }\r\n\r\n\r\n                                          {Array.from({ length: 7 }, (item, index) => {\r\n                                            return (\r\n                                              <>\r\n                                                <div className=\"col-lg-2\">\r\n                                                  <div className=\"form-group\">\r\n                                                    <input\r\n                                                      type=\"text\"\r\n                                                      className=\"form-control\"\r\n                                                      placeholder=\"0\"\r\n                                                      maxLength={200}\r\n                                                      max={200}\r\n                                                      name={`value${index}`}\r\n                                                      value={x[`value${index}`]}\r\n                                                      onChange={(e) => handleInputChange(e, i)}\r\n                                                      required\r\n                                                    />\r\n\r\n                                                  </div>\r\n                                                </div>\r\n\r\n                                              </>\r\n                                            );\r\n                                          })\r\n\r\n                                          }\r\n\r\n\r\n                                          <div className=\"col-md-2\">\r\n                                            {inputListFinal.length !== 1 && (\r\n                                              <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\"\r\n                                                onClick={() => handleRemoveClick(i)}\r\n                                              >\r\n                                                <strong>REMOVE</strong>\r\n                                              </button>\r\n                                            )}\r\n                                            {inputListFinal.length - 1 === i && (\r\n                                              <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                                                onClick={handleAddClick}\r\n                                              >\r\n                                                <strong>ADD</strong>\r\n                                              </button>\r\n                                            )}\r\n                                          </div>\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                                      </ListItem>\r\n                                    )}\r\n                                  </Draggable>\r\n                                );\r\n                              })}\r\n\r\n                              {provided.placeholder}\r\n                            </div>\r\n                          )}\r\n                        </Droppable>\r\n                      </ListContainer>\r\n                    </DragDropContext>\r\n\r\n\r\n\r\n                    <div style={{ marginTop: 30 }}></div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn savebtn waves-effect\"\r\n                      onClick={OnSubmitHandle}\r\n                    >\r\n                      SAVE <i className=\"ml-1 zmdi zmdi-save \" />\r\n                    </button>\r\n\r\n                    {completeData.length > 0 ? (<button type=\"button\" class=\"btn viewbtn waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={() => props.OnValidate1(true)}>SUBMIT <i className=\"ml-1 zmdi zmdi-check \" /> </button>\r\n                ) : null}\r\n\r\n                  </div>\r\n                ) : null}\r\n              </div>          </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  );\r\n\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/vilakshanMapTab1.js",["868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938"],"import React, { useState, useEffect } from \"react\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Editor from \"../../components/SunEditor\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ListContainer, ListItem } from \"../components/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragHandle } from \"../components/DragHandle\";\r\nimport List from \"./data\";\r\n\r\nexport default function Vilakshan(props) {\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n  const [total, settotal] = useState(0);\r\n\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [completeData, setcompleteData] = useState('');\r\n  const [formValid, setformValid] = useState(false);\r\n  const [vilakshan_journey, setvilakshan_journey] = useState();\r\n  const [vilakshan_form, setvilakshan_form] = useState();\r\n  // const [vccs, setvccs] = useState();\r\n  const [parent_process_name, setparent_process_name] = useState();\r\n  const [parent_process_input, setparent_process_input] = useState();\r\n  const [parent_process_output, setparent_process_output] = useState();\r\n  const [parent_process_owner, setparent_process_owner] = useState();\r\n  const [strategic_support_process, setstrategic_support_process] = useState();\r\n  const [strategic_support_input, setstrategic_support_input] = useState();\r\n  const [strategic_support_output, setstrategic_support_output] = useState();\r\n\r\n\r\n  const [editId, seteditId] = useState(\"\");\r\n  const [delId, setdelId] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [editModal, seteditModal] = useState(false);\r\n\r\n  const [editvilakshan_journey, seteditvilakshan_journey] = useState();\r\n  const [editvilakshan_form, seteditvilakshan_form] = useState();\r\n  // const [editvccs, seteditvccs] = useState();\r\n  const [editparent_process_name, seteditparent_process_name] = useState();\r\n  const [editparent_process_input, seteditparent_process_input] = useState();\r\n  const [editparent_process_output, seteditparent_process_output] = useState();\r\n  const [editparent_process_owner, seteditparent_process_owner] = useState();\r\n  const [editstrategic_support_process, seteditstrategic_support_process] = useState();\r\n  const [editstrategic_support_input, seteditstrategic_support_input] = useState();\r\n  const [editstrategic_support_output, seteditstrategic_support_output] = useState();\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n  const [inputListFinal, setInputListFinal] = useState([{ competition: \"\" }]);\r\n  const [inputList, setInputList] = useState([{ competition: \"\" }]);\r\n  const [customerList, setCustomerList] = useState([{}]);\r\n  const [inputListFinal2, setInputListFinal2] = useState([{}]);\r\n\r\n\r\n  const handleInputChange = (e, index) => {\r\n    console.log(e.target.id)\r\n    console.log(e.target.name)\r\n    console.log(e.target.value)\r\n    // console.log(e.target.ips)\r\n\r\n    // console.log(index)\r\n\r\n    // if (e.target.value > 9) {\r\n    //   setShowHideErr(false)\r\n    // } else {\r\n    //   setShowHideErr(true);\r\n    //   // alert(Show)\r\n    // }\r\n\r\n    const { name, value, ips } = e.target;\r\n    const list = [...inputListFinal];\r\n    console.log(\"Here is the Value---1>\", list);\r\n    list[index][name] = value;\r\n    list[index][\"is_display\"] = 0;\r\n\r\n    console.log(list[index][name]);\r\n    console.log(value + \"val\");\r\n\r\n\r\n    setInputListFinal(list);\r\n    // setcompleteData(list);\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // handle input change\r\n  const exportPDFWithMethod = () => {\r\n    GetallRecored();\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecored();\r\n  }, []);\r\n\r\n  const GetallRecored = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/vilakshanMapTab1/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        // setcompleteData(resData.data);\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n        }\r\n\r\n        setcompleteData(resData.data);\r\n        console.log(\"---resDAta--->\", resData.data[0]);\r\n        let MyValues1 = resData.data;\r\n\r\n        let MyValues = resData.data;\r\n        if (MyValues.length > 0) {\r\n          // setedituser(true);\r\n          setUpid(resData.data[0].id);\r\n\r\n        }\r\n        console.log(\"Edit Values\", MyValues);\r\n\r\n        MyValues.map((item, key) => {\r\n          console.log(\"before Eval\", item.features);\r\n          let Feature = eval(item.features);\r\n          let Feature2 = eval(item.features2);\r\n\r\n          console.log(\"SDfjdskjfn jsdhfkjsdfn\", Feature);\r\n          console.log(\"SDfjdskjfn jsdhfkjsdfn22\", Feature2);\r\n\r\n          setCustomerList(Feature);\r\n          setInputList(Feature);\r\n          setInputListFinal(Feature)\r\n          setInputListFinal2(Feature2)\r\n\r\n        });\r\n\r\n        console.log(\"Edit Values\", MyValues1);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // if (resData.data.id > 0) {\r\n        // console.log(\"ttt--->\", resData.data[0].bypass_email);\r\n        // setbelEmail(resData.data[0].beliver_email);\r\n        // settransEmail(resData.data[0].tranz_email);\r\n        // setbypassEmail(resData.data[0].bypass_email);\r\n        setbeliverName(resData.data[0].beliver_name);\r\n\r\n        // }\r\n      });\r\n    console.log(completeData, \"reso\");\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    seteditModal(false);\r\n  };\r\n\r\n  const updateJson = (featureJson) => {\r\n    console.log(featureJson)\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      features: featureJson,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/vilakshanMapTab1/${s_id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        GetallRecored();\r\n\r\n        if (resData.status == 200) {\r\n          // console.log(\"Values Submitted Succesfully==>\");\r\n          // setMupdate(true);\r\n          // setTimeout(() => {\r\n          //   setMupdate(false);\r\n          // }, 1000)\r\n          // props.OnValidate1(true)\r\n\r\n\r\n          GetallRecored();\r\n\r\n        }\r\n        GetallRecored();\r\n\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputListFinal];\r\n    setInputListFinal(list);\r\n    list.splice(index, 1);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    let value = [];\r\n    let key = [];\r\n    value.push('competition');\r\n    for (let i = 1; i <= total; i++) {\r\n      value.push(`value${i}`)\r\n    }\r\n    for (let i = 1; i <= total; i++) {\r\n      key.push([`${i}`])\r\n    }\r\n    var pack = function (arr) {\r\n      var length = arr.length,\r\n        result = {},\r\n        i;\r\n      for (i = 0; i < length; i++) {\r\n        result[(i < 10 ? '0' : '') + (i + 1)] = arr[i];\r\n      }\r\n      return result;\r\n    };\r\n    const finalobject = pack(value); //{01: \"one\", 02: \"two\", 03: \"three\"}      \r\n    console.log(\"object is\", finalobject)\r\n    setInputListFinal([...inputListFinal, finalobject]);\r\n    console.log(inputList);\r\n  };\r\n\r\n\r\n  const OnSubmitHandle = () => {\r\n    GetallRecored();\r\n    console.log(completeData)\r\n\r\n    for (var i = 0; i < inputListFinal.length; i++) {\r\n      if (inputListFinal[i].value0 == \"\" || !inputListFinal[i].value0) {\r\n        // seterrorshow(true);\r\n        return false;\r\n      }\r\n    }\r\n    setCustomerList([...customerList], inputList);\r\n    let competition = [];\r\n    let Values = [];\r\n    // allObject.push(inputList);\r\n    inputList.map((comp, key) => {\r\n      competition.push(comp);\r\n    });\r\n\r\n    customerList.map((item, key) => {\r\n      if (Object.keys(item).length === 3) {\r\n        Values.push(item);\r\n        for (var key in item) {\r\n          console.log(\"Key Value is\", item);\r\n          console.log(\"Key Value is\", item[key]);\r\n          console.log(\"Key Value is\", allObject);\r\n        }\r\n      }\r\n    });\r\n\r\n    var allObject = [...competition, ...Values];\r\n    console.log(\"all datra\", allObject);\r\n    console.log(\"all data inputlist\", inputListFinal);\r\n    console.log(\"all data inputlist2\", inputListFinal2);\r\n\r\n    console.log(completeData.length)\r\n    if (completeData.length === 0) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        features: inputListFinal,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/vilakshanMapTab1`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully==>\");\r\n            setMadd(true);\r\n            setTimeout(() => {\r\n              setMadd(false);\r\n            }, 1000)\r\n            GetallRecored();\r\n\r\n            // props.OnValidate(true)\r\n\r\n\r\n\r\n            //             props.OnValidate1(true)\r\n\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        updated_by: s_id,\r\n        features: inputListFinal\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/vilakshanMapTab1/${s_id}`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n\r\n\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully==>\");\r\n            setMupdate(true);\r\n            setTimeout(() => {\r\n              setMupdate(false);\r\n            }, 1000)\r\n\r\n            GetallRecored()\r\n            // props.OnValidate(true)\r\n\r\n\r\n\r\n            // GetallRecored();\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n\r\n      <div className=\"row clearfix\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n          <div className=\"card p-4 mt-2\">\r\n            {completeData ? (\r\n              <div className=\"body p-5\" style={{ overflowX: \"scroll\" }}>\r\n                <DragDropContext\r\n                  onDragEnd={(param) => {\r\n                    const srcI = param.source.index;\r\n                    const desI = param.destination?.index;\r\n                    if (desI) {\r\n                      inputListFinal.splice(desI, 0, inputListFinal.splice(srcI, 1)[0]);\r\n                      List.saveList(inputListFinal);\r\n                      console.log(inputListFinal)\r\n                      updateJson(inputListFinal);\r\n                    }\r\n                  }}\r\n                >\r\n                  <ListContainer>\r\n\r\n                    <div style={{ marginTop: 20 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix ml-3\" >\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title text-center\">\r\n                          <strong>Vilakshan Journey</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title text-center ml-2\">\r\n                          <strong>Vilakshan Form</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <Droppable droppableId=\"droppable-1\">\r\n                      {(provided, _) => (\r\n                        <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                          {inputListFinal.map((x, i) => {\r\n                            console.log(\"The competion sheet\", x)\r\n\r\n                            return (\r\n                              <>\r\n                                <Draggable\r\n                                  key={x.id}\r\n                                  draggableId={\"draggable-\" + i}\r\n                                  index={i}\r\n                                // recId={x.id}\r\n                                >\r\n                                  {(provided, snapshot) => (\r\n                                    <ListItem\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      style={{\r\n                                        ...provided.draggableProps.style,\r\n                                        boxShadow: snapshot.isDragging\r\n                                          ? \"0 0 .4rem #666\"\r\n                                          : \"none\",\r\n                                      }}\r\n                                    >\r\n\r\n\r\n                                      <div className=\"row clearfix flex-nowrap\">\r\n                                        <DragHandle {...provided.dragHandleProps} className=\"mr-2\" />\r\n\r\n                                        {Array.from({ length: 2 }, (item, index) => {\r\n                                          return (\r\n                                            <>\r\n                                              <div className=\"col-md-2\">\r\n                                                <div className=\"form-group\">\r\n                                                  <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    maxLength={200}\r\n                                                    max={200}\r\n                                                    name={`value${index}`}\r\n                                                    value={x[`value${index}`]}\r\n                                                    onChange={(e) => handleInputChange(e, i)}\r\n                                                    required\r\n                                                  />\r\n\r\n                                                </div>\r\n                                              </div>\r\n\r\n\r\n                                            </>\r\n                                          );\r\n                                        })}\r\n\r\n\r\n                                        <div className=\"col-md-2\">\r\n                                          {inputListFinal.length !== 1 && (\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\"\r\n                                              onClick={() => handleRemoveClick(i)}\r\n                                            >\r\n                                              <strong>REMOVE</strong>\r\n                                            </button>\r\n                                          )}\r\n                                          {inputListFinal.length - 1 === i && (\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                                              onClick={handleAddClick}\r\n                                            >\r\n                                              <strong>ADD</strong>\r\n                                            </button>\r\n                                          )}\r\n                                        </div>\r\n                                        {/* <div className=\"col-md-2\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <SelectBox onChangeTag={onChange} keyValue={x.point_to_be_considered} keyid={x.id} />\r\n                                                                </div>\r\n\r\n                                                            </div> */}\r\n                                      </div>\r\n\r\n\r\n                                      {/* <div className=\"col-md-2\">\r\n                                                                {completeData.length !== 1 && (\r\n                                                                    <button\r\n                                                                        type=\"button\"\r\n                                                                        className=\"btn btn-raised rembtn btn-square waves-effect m-l-40 \"\r\n                                                                        onClick={() => handleRemoveClick(i)}\r\n                                                                    >\r\n                                                                        <strong>REMOVE</strong>\r\n                                                                    </button>\r\n                                                                )}\r\n                                                                {completeData.length - 1 === i && (\r\n                                                                    <button\r\n                                                                        type=\"button\"\r\n                                                                        className=\"btn  addbtn btn-square waves-effect m-l-40 \"\r\n                                                                        onClick={handleAddClick}\r\n                                                                    >\r\n                                                                        <strong>ADD</strong>\r\n                                                                    </button>\r\n                                                                )}\r\n                                                            </div> */}\r\n\r\n                                    </ListItem>\r\n                                  )}\r\n                                </Draggable>\r\n\r\n                              </>\r\n                            );\r\n\r\n                          })}\r\n                          {provided.placeholder}\r\n\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n\r\n\r\n                  </ListContainer>\r\n\r\n                </DragDropContext>\r\n\r\n\r\n\r\n                <div style={{ marginTop: 30 }}></div>\r\n\r\n                {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnSubmitHandle}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button> */}\r\n                <button type=\"button\" class=\"btn savebtn waves-effect\"\r\n                  onClick={OnSubmitHandle}>SAVE</button>\r\n\r\n                {completeData.length > 0 ? (<button type=\"button\" class=\"btn viewbtn waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={() => props.OnValidate(true)}>SUBMIT <i className=\"ml-1 zmdi zmdi-check \" /> </button>\r\n                ) : null}\r\n\r\n              </div>\r\n            ) : (null)}\r\n          </div>\r\n        </div>\r\n      </div >\r\n\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/StepPDFTable.js",["939","940","941","942","943","944","945","946"],"import React, { useEffect, useState } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Table = (props) => {\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const [loading, setloading] = useState(false);\r\n  let [completeData, setcompleteData] = useState(\"\");\r\n  let inner_id = props.AllData;\r\n  console.log(inner_id);\r\n\r\n  const GetallRecored = () => {\r\n    var myHeaders2 = new Headers();\r\n    myHeaders2.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders2,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/process/` + `${inner_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setcompleteData(res.data);\r\n        if (res.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecored();\r\n  }, []);\r\n\r\n  let rows = [];\r\n  if (completeData) {\r\n    completeData.map((item, key) => {\r\n      rows.push(\r\n        <tbody>\r\n          <td>{item.sr_no}</td>\r\n          <td>{item.step_decription}</td>\r\n          <td>{item.trasaction_time}</td>\r\n          <td>{item.resource_allocated}</td>\r\n          <td>{item.resource_name}</td>\r\n        </tbody>\r\n      );\r\n    });\r\n  }\r\n\r\n  return loading ? (\r\n    <div sytle={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <CircularProgress />\r\n    </div>\r\n  ) : (\r\n    <>\r\n      <div class=\"table-responsive\" id=\"Table\">\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Sr. No.</th>\r\n              <th>Step Description</th>\r\n              <th>Transaction Time (Days / Hours)</th>\r\n              <th>Resource Allocated (Departments)</th>\r\n              <th>Name of Resources (Individuals)</th>\r\n            </tr>\r\n          </thead>\r\n          {rows}\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Table;\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/StepTable.js",["947","948","949","950","951","952","953","954","955","956","957","958","959"],"import React, { useEffect, forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Table = forwardRef((props, ref) => {\r\n\r\n\r\n\r\n  const [childName, changeChildName] = useState(\"Iamchild\")\r\n\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n  const [loading, setloading] = useState(false);\r\n  let [completeData, setcompleteData] = useState(\"\");\r\n  let [inner_id, setinner_id] = useState(props.AllData);\r\n\r\n  // let inner_id = props.AllData;\r\n  console.log(inner_id, \"innerId\");\r\n  const [editId, seteditId] = useState(\"\");\r\n  const [delId, setdelId] = useState(\"\");\r\n  let [vilakshanData, setVilakshanData] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [editModal, seteditModal] = useState(false);\r\n  const [sr_no, setsr_no] = useState();\r\n  const [step_decription, setstep_decription] = useState();\r\n  const [trasaction_time, settrasaction_time] = useState();\r\n  const [resource_allocated, setresource_allocated] = useState();\r\n  const [resource_name, setresource_name] = useState();\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n  const [AddCheck, setAddCheck] = useState(\"\");\r\n\r\n\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    callChildFunction(pid, a) {\r\n      // alert(pid);\r\n      // alert(a);\r\n      setAddCheck(a);\r\n\r\n      // var myHeaders = new Headers();\r\n      // myHeaders.append(\"Content-Type\", \"application/json\");\r\n      // var raw = JSON.stringify({\r\n      //   sr_no: 2,\r\n      //   step_decription: 2,\r\n      //   trasaction_time: 2,\r\n      //   resource_allocated: 2,\r\n      //   resource_name: 2,\r\n      //   email_id: s_id,\r\n      //   created_by: s_id\r\n      // });\r\n      // var requestOptions = {\r\n      //   method: \"PUT\",\r\n      //   headers: myHeaders,\r\n      //   body: raw,\r\n      //   redirect: \"follow\",\r\n      // };\r\n      // fetch(`http://localhost:9002/masters/process/1`, requestOptions)\r\n      //   .then((response) => response.json())\r\n      //   .then((resData) => {\r\n      //     console.log(resData);\r\n      //     if (resData.status == 200) {\r\n      //       console.log(\"updated\");\r\n      //       setMupdate(true);\r\n      //       // setMupdate(false);\r\n      //       setTimeout(() => {\r\n      //         setMupdate(false);\r\n      //       }, 1000)\r\n      //     }\r\n      //     GetallRecored();\r\n      //   })\r\n      //   .catch((error) => console.log(\"error\", error));\r\n\r\n      // props.callparentfunction()\r\n\r\n      // setinner_id(\"\");\r\n\r\n      // GetallRecored(pid, a);\r\n      // GetallRecored();\r\n      // window.location.reload(false);\r\n\r\n      // editfn(1);\r\n\r\n\r\n      // setTimeout(() => {\r\n      //   alert(\"ok\")\r\n      //   history.push(\"/processes\")\r\n      //   // props.OnValidate(true);\r\n      GetallRecored();\r\n\r\n      // }, 1000)\r\n\r\n    }\r\n  }))\r\n\r\n\r\n  const sr_noFn = (event) => {\r\n    setsr_no(event.target.value);\r\n  };\r\n\r\n  const step_decriptionFn = (event) => {\r\n    setstep_decription(event.target.value);\r\n  };\r\n\r\n  const trasaction_timeFn = (event) => {\r\n    settrasaction_time(event.target.value);\r\n  };\r\n\r\n  const resource_allocatedFn = (event) => {\r\n    setresource_allocated(event.target.value);\r\n  };\r\n\r\n  const resource_nameFn = (event) => {\r\n    setresource_name(event.target.value);\r\n  };\r\n\r\n\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    seteditModal(false);\r\n  };\r\n\r\n  const OnSubmitUpdate = (edId) => {\r\n    // alert(edId)\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      sr_no: sr_no,\r\n      step_decription: step_decription,\r\n      trasaction_time: trasaction_time,\r\n      resource_allocated: resource_allocated,\r\n      resource_name: resource_name,\r\n      email_id: s_id,\r\n      created_by: s_id\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/process/${edId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"updated\");\r\n          setMupdate(true);\r\n          // setMupdate(false);\r\n          setTimeout(() => {\r\n            setMupdate(false);\r\n          }, 1000)\r\n        }\r\n        GetallRecored();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    // console.log(formData);\r\n    setShow(false);\r\n    seteditModal(false);\r\n    // GetallRecored();\r\n  };\r\n\r\n  const deleteConfirm = () => {\r\n    // alert(delId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"delete\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/process/${delId}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // seteditId(resData.data[0].id);\r\n        console.log(\"deleted\");\r\n        setShow(false);\r\n        setMdelete(true);\r\n        // setMdelete(false);\r\n        setTimeout(() => {\r\n          setMdelete(false);\r\n        }, 1000)\r\n        setShow(false);\r\n        GetallRecored();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n\r\n\r\n  const editfn = (edit_id) => {\r\n    GetallRecored();\r\n\r\n    seteditModal(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/processprocessId/${edit_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data[0].id);\r\n        console.log(resData.data);\r\n        seteditId(resData.data[0].id);\r\n        setsr_no(resData.data[0].sr_no);\r\n        setstep_decription(resData.data[0].step_decription);\r\n        settrasaction_time(resData.data[0].trasaction_time);\r\n        setresource_allocated(resData.data[0].resource_allocated);\r\n        setresource_name(resData.data[0].resource_name);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n\r\n  const deletefn = (edit_id) => {\r\n    // alert(edit_id)\r\n    setdelId(edit_id);\r\n    setShow(true);\r\n  };\r\n\r\n\r\n  // const OnValidateTab1 = (e) => {\r\n  //   alert(\"hi shubh\");\r\n\r\n  //   // setValue(1);\r\n  //   // setvalidateTab1(e);\r\n  // }\r\n\r\n  const GetallRecored = (pid, a) => {\r\n    // let inner_id=pid;\r\n    // alert(\"hallo\" + inner_id);\r\n    // if (a==\"upd\") {\r\n    //   setinner_id('1');\r\n    //   alert(\"hallob\" + inner_id);\r\n\r\n    //   var myHeaders2 = new Headers();\r\n    //   myHeaders2.append(\"Content-Type\", \"application/json\");\r\n    //   var requestOptionsget = {\r\n    //     method: \"GET\",\r\n    //     headers: myHeaders2,\r\n    //     redirect: \"follow\",\r\n    //   };\r\n    //   fetch(`http://localhost:9002/masters/process/` + `${inner_id}`, requestOptionsget)\r\n    //     .then((response) => response.json())\r\n    //     .then((res) => {\r\n    //       // console.log(res.data);\r\n    //       setcompleteData(res.data);\r\n    //       if (res.status == 200) {\r\n    //         console.log(\"Data Added succesfully\");\r\n\r\n    //       }\r\n    //     })\r\n    //     .catch((error) => console.log(\"error\", error));\r\n    // }\r\n    // alert(`${inner_id}`)\r\n    var myHeaders2 = new Headers();\r\n    myHeaders2.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders2,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/process/user/` + `${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setcompleteData(res.data);\r\n        if (res.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n    // OnValidateTab1();\r\n    GetallRecored();\r\n  }, []);\r\n\r\n  let rows = [];\r\n  if (completeData) {\r\n\r\n    // {GetallRecored()}\r\n    var optionVal = completeData.filter(({ parent_process_id, created_by }) => parent_process_id === \"test3\" && created_by === 1 )\r\n    console.log(inner_id);\r\n    console.log(s_id);\r\n\r\n    console.log(optionVal);\r\n    console.log(completeData);\r\n\r\n    completeData.map((item, key) => {\r\n      rows.push(\r\n\r\n        <tbody>\r\n          <td>{item.sr_no}</td>\r\n          <td>{item.step_decription}</td>\r\n          <td>{item.trasaction_time}</td>\r\n          <td>{item.resource_allocated}</td>\r\n          <td>{item.resource_name}</td>\r\n          <td colspan=\"8\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                title=\"edit\"\r\n                class=\"btn  zmdi zmdi-edit waves-effect pull-left\"\r\n                style={{ float: \"left\" }}\r\n                onClick={() => editfn(item.id)}\r\n              ></button>\r\n              <button\r\n                type=\"submit\"\r\n                title=\"delete\"\r\n                class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n                onClick={() => deletefn(item.id)}\r\n              ></button>\r\n            </div>\r\n          </td>\r\n        </tbody>\r\n      );\r\n    });\r\n  }\r\n\r\n  return loading ? (\r\n    <div sytle={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <CircularProgress />\r\n    </div>\r\n  ) : (\r\n    <>\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <div class=\"table-responsive\" id=\"Table\">\r\n        <div class=\"col-12\" >\r\n          <button type=\"button\" class=\"btn waves-effect\" style={{ marginLeft: \"88%\" }} onClick={GetallRecored}>Get Table Data </button>\r\n        </div>\r\n        {/* {setTimeout(()=>{\r\n          alert(\"hallo\")\r\n        }),5000} */}\r\n        {/* <button type=\"button\" class=\"btn downloadbtn waves-effect\" onClick={GetallRecored}>Get Data   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i></button> */}\r\n\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            {/* Child Component {childName} */}\r\n\r\n            <tr>\r\n              <th>Sr. No.</th>\r\n              <th>Step Description</th>\r\n              <th>Transaction Time (Days / Hours)</th>\r\n              <th>Resource Allocated (Departments)</th>\r\n              <th>Name of Resources (Individuals)</th>\r\n              <th style={{ textAlign: \"center\" }}>Action</th>\r\n            </tr>\r\n          </thead>\r\n          {rows}\r\n        </table>\r\n      </div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\r\n        </Modal.Header>\r\n        {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirm}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {/* For Edit */}\r\n      <Modal\r\n        size=\"lg\"\r\n        show={editModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Edit Step Process\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div class=\"card\" >\r\n            <h2 className=\"card-inside-title\">\r\n              {/* <strong>Process Name : </strong> */}\r\n            </h2>\r\n            <div class=\"card-body\">\r\n              <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-2\">\r\n                    <label>Sr.No &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Sr.No.\"\r\n                      name=\"sr_no\"\r\n                      onChange={sr_noFn}\r\n                      value={sr_no}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <label>Step Description</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Step Description\"\r\n                      name=\"step_descreption\"\r\n                      onChange={step_decriptionFn}\r\n                      value={step_decription}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <label>Transaction Time</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Transaction Time\"\r\n                      name=\"vilakshan_journey\"\r\n                      onChange={trasaction_timeFn}\r\n                      value={trasaction_time}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <label>Resource Allocated</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Resource Allocated (Departments)\"\r\n                      name=\"resource_allocated\"\r\n                      onChange={resource_allocatedFn}\r\n                      value={resource_allocated}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <label>Name of Resources</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Name of Resources (Individuals)\"\r\n                      name=\"resource_name\"\r\n                      onChange={resource_nameFn}\r\n                      value={resource_name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn savebtn  waves-effect mt-4\"\r\n                      onClick={() => {\r\n                        OnSubmitUpdate(editId);\r\n                      }}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n})\r\nexport default Table;\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan04/UrjaChar.js",["960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015"],"import React, { useEffect, useState } from \"react\";\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\nimport ReactExport from \"react-data-export\";\nimport { useHistory } from \"react-router-dom\";\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction UrjaChar() {\n    const history = useHistory();\n    var s_id = localStorage.getItem('tr_id')\n    let [completeData, setcompleteData] = useState(\"\");\n\n    const [date, setdate] = useState();\n    const [Fdate, setFdate] = useState();\n    const pdfExportComponent = React.useRef(null);\n    const [Upid, setUpid] = useState(\"\");\n\n    const [TotalRevenue1, setTotalRevenue1] = useState(1000);\n    const [RevenueReadOnly1, setRevenueReadOnly1] = useState(\"%\");\n    const [DirectExpences1, setDirectExpences1] = useState(150);\n    const [DirectExpencesReadOnly1, setDirectExpencesReadOnly1] = useState(\"%\");\n    const [GrossProfit1, setGrossProfit1] = useState();\n    const [GrossProfitID1, setGrossProfitID1] = useState(\"%\");\n    const [IndirectExpences1, setIndirectExpences1] = useState(450);\n    const [IndirectExpencesID1, setIndirectExpencesID1] = useState(\"%\");\n    const [EBITDA1, setEBITDA1] = useState();\n    const [EBITDApercent1, setEBITDApercent1] = useState(\"0\");\n    const [EBITDA_ID1, setEBITDA_ID1] = useState(\"%\");\n\n\n\n    const [TotalRevenue2, setTotalRevenue2] = useState(1000);\n    const [RevenueReadOnly2, setRevenueReadOnly2] = useState(\"%\");\n    const [DirectExpences2, setDirectExpences2] = useState(150);\n    const [DirectExpencesReadOnly2, setDirectExpencesReadOnly2] = useState(\"%\");\n    const [GrossProfit2, setGrossProfit2] = useState();\n    const [GrossProfitID2, setGrossProfitID2] = useState(\"%\");\n    const [IndirectExpences2, setIndirectExpences2] = useState(450);\n    const [IndirectExpencesID2, setIndirectExpencesID2] = useState(\"%\");\n    const [EBITDA2, setEBITDA2] = useState();\n    const [EBITDApercent2, setEBITDApercent2] = useState(\"0\");\n    const [EBITDA_ID2, setEBITDA_ID2] = useState(\"%\");\n\n\n\n    const [TotalRevenue3, setTotalRevenue3] = useState(0);\n    const [RevenueReadOnly3, setRevenueReadOnly3] = useState(\"%\");\n    const [DirectExpences3, setDirectExpences3] = useState(0);\n    const [DirectExpencesReadOnly3, setDirectExpencesReadOnly3] = useState(\"%\");\n    const [GrossProfit3, setGrossProfit3] = useState(0);\n    const [GrossProfitID3, setGrossProfitID3] = useState(\"%\");\n    const [IndirectExpences3, setIndirectExpences3] = useState(0);\n    const [IndirectExpencesID3, setIndirectExpencesID3] = useState(\"%\");\n    const [EBITDA3, setEBITDA3] = useState(0);\n    const [EBITDApercent3, setEBITDApercent3] = useState(\"0\");\n    const [EBITDA_ID3, setEBITDA_ID3] = useState(\"%\");\n\n    const [TotalRevenue4, setTotalRevenue4] = useState(0);\n    const [RevenueReadOnly4, setRevenueReadOnly4] = useState(\"%\");\n    const [DirectExpences4, setDirectExpences4] = useState(0);\n    const [DirectExpencesReadOnly4, setDirectExpencesReadOnly4] = useState(\"%\");\n    const [GrossProfit4, setGrossProfit4] = useState(0);\n    const [GrossProfitID4, setGrossProfitID4] = useState(\"%\");\n    const [IndirectExpences4, setIndirectExpences4] = useState(0);\n    const [IndirectExpencesID4, setIndirectExpencesID4] = useState(\"%\");\n    const [EBITDA4, setEBITDA4] = useState(0);\n    const [EBITDApercent4, setEBITDApercent4] = useState(\"0\");\n    const [EBITDA_ID4, setEBITDA_ID4] = useState(\"%\");\n\n\n    const [TotalRevenue5, setTotalRevenue5] = useState(0);\n    const [RevenueReadOnly5, setRevenueReadOnly5] = useState(\"%\");\n    const [DirectExpences5, setDirectExpences5] = useState(0);\n    const [DirectExpencesReadOnly5, setDirectExpencesReadOnly5] = useState(\"%\");\n    const [GrossProfit5, setGrossProfit5] = useState(0);\n    const [GrossProfitID5, setGrossProfitID5] = useState(\"%\");\n    const [IndirectExpences5, setIndirectExpences5] = useState(0);\n    const [IndirectExpencesID5, setIndirectExpencesID5] = useState(\"%\");\n    const [EBITDA5, setEBITDA5] = useState(0);\n    const [EBITDApercent5, setEBITDApercent5] = useState(\"0\");\n    const [EBITDA_ID5, setEBITDA_ID5] = useState(\"%\");\n\n\n    const [TotalRevenue6, setTotalRevenue6] = useState(0);\n    const [RevenueReadOnly6, setRevenueReadOnly6] = useState(\"%\");\n    const [DirectExpences6, setDirectExpences6] = useState(0);\n    const [DirectExpencesReadOnly6, setDirectExpencesReadOnly6] = useState(\"%\");\n    const [GrossProfit6, setGrossProfit6] = useState(0);\n    const [GrossProfitID6, setGrossProfitID6] = useState(\"%\");\n    const [IndirectExpences6, setIndirectExpences6] = useState(0);\n    const [IndirectExpencesID6, setIndirectExpencesID6] = useState(\"%\");\n    const [EBITDA6, setEBITDA6] = useState(0);\n    const [EBITDApercent6, setEBITDApercent6] = useState(\"0\");\n    const [EBITDA_ID6, setEBITDA_ID6] = useState(\"%\");\n\n    const [Madd, setMadd] = useState(false);\n    const [Mupdate, setMupdate] = useState(false);\n    const [Mdelete, setMdelete] = useState(false);\n    const [beliverName, setbeliverName] = useState(\"\");\n\n\n    const GetallRecords = () => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\",\n        };\n        fetch(`http://localhost:9002/masters/urjaChar/user/${s_id}`, requestOptionsget)\n            .then((response) => response.json())\n            .then((resData) => {\n                setcompleteData(resData.data);\n                setUpid(resData.data[0].id);\n\n                console.log(resData.data[0].TotalRevenue1);\n                // alert(resData.status)\n                console.log(resData);\n                setTotalRevenue1(resData.data[0].TotalRevenue1)\n                setDirectExpences1(resData.data[0].DirectExpences1)\n                setGrossProfit1(resData.data[0].GrossProfit1)\n                setIndirectExpences1(resData.data[0].IndirectExpences1)\n                setEBITDA1(resData.data[0].EBITDA1)\n                setEBITDApercent1(resData.data[0].EBITDApercent1)\n\n                setTotalRevenue2(resData.data[0].TotalRevenue2)\n                setDirectExpences2(resData.data[0].DirectExpences2)\n                setGrossProfit2(resData.data[0].GrossProfit2)\n                setIndirectExpences2(resData.data[0].IndirectExpences2)\n                setEBITDA2(resData.data[0].EBITDA2)\n                setEBITDApercent2(resData.data[0].EBITDApercent2)\n\n                setTotalRevenue3(resData.data[0].TotalRevenue3)\n                setDirectExpences3(resData.data[0].DirectExpences3)\n                setGrossProfit3(resData.data[0].GrossProfit3)\n                setIndirectExpences3(resData.data[0].IndirectExpences3)\n                setEBITDA3(resData.data[0].EBITDA3)\n                setEBITDApercent3(resData.data[0].EBITDApercent3)\n\n                setTotalRevenue4(resData.data[0].TotalRevenue4)\n                setDirectExpences4(resData.data[0].DirectExpences4)\n                setGrossProfit4(resData.data[0].GrossProfit4)\n                setIndirectExpences4(resData.data[0].IndirectExpences4)\n                setEBITDA4(resData.data[0].EBITDA4)\n                setEBITDApercent4(resData.data[0].EBITDApercent4)\n\n                setTotalRevenue5(resData.data[0].TotalRevenue5)\n                setDirectExpences5(resData.data[0].DirectExpences5)\n                setGrossProfit5(resData.data[0].GrossProfit5)\n                setIndirectExpences5(resData.data[0].IndirectExpences5)\n                setEBITDA5(resData.data[0].EBITDA5)\n                setEBITDApercent5(resData.data[0].EBITDApercent5)\n\n\n                setTotalRevenue6(resData.data[0].TotalRevenue6)\n                setDirectExpences6(resData.data[0].DirectExpences6)\n                setGrossProfit6(resData.data[0].GrossProfit6)\n                setIndirectExpences6(resData.data[0].IndirectExpences6)\n                setEBITDA6(resData.data[0].EBITDA6)\n                setEBITDApercent6(resData.data[0].EBITDApercent6)\n\n                if (resData.status == 200) {\n                    console.log(\"Data Added succesfully\");\n                    // alert(\"hhh\")\n                    // alert(resData.status)\n\n                    // alert(resData.data[0].TotalRevenue1)\n\n\n\n\n                }\n            })\n            .catch((error) => console.log(\"error\", error));\n\n        fetch(\n            `http://localhost:9002/masters/parivartan_user/${s_id}`,\n            requestOptionsget\n        )\n            .then((response) => response.json())\n            .then((resData) => {\n                // if (resData.data.id > 0) {\n                // console.log(\"ttt--->\", resData.data[0].bypass_email);\n                // setbelEmail(resData.data[0].beliver_email);\n                // settransEmail(resData.data[0].tranz_email);\n                // setbypassEmail(resData.data[0].bypass_email);\n                setbeliverName(resData.data[0].beliver_name);\n\n                // }\n            });\n        console.log(completeData, \"reso\");\n\n    }\n\n\n\n    const percentageCal = () => {\n        setEBITDApercent1(Number(EBITDA1 / TotalRevenue1 * 100));\n        setEBITDApercent2(Number(EBITDA2 / TotalRevenue2 * 100));\n        setEBITDApercent3(Number(EBITDA3 / TotalRevenue3 * 100));\n        setEBITDApercent4(Number(EBITDA4 / TotalRevenue4 * 100));\n        setEBITDApercent5(Number(EBITDA5 / TotalRevenue5 * 100));\n        setEBITDApercent6(Number(EBITDA6 / TotalRevenue6 * 100));\n\n    }\n\n    const exportPDFWithMethod = () => {\n        if (pdfExportComponent.current) {\n            pdfExportComponent.current.save();\n        }\n    };\n\n    const getYear = () => {\n        let ddts = new Date().getFullYear();\n        let ddti = ddts.toString().substr(-2);\n        let ddt = parseInt(ddti);\n        setdate(ddt);\n        setFdate(ddts);\n    };\n\n    // function allStateUpd(){\n\n    // }\n    useEffect(() => {\n        if (!s_id) {\n            history.push(\"Not_support\");\n        }\n        GetallRecords();\n        getYear();\n\n        let valGross1 = Number(TotalRevenue1) - Number(DirectExpences1)\n        // let cal4 = (Number(revenue2Value) - Number(cal2))\n        setGrossProfit1(valGross1);\n        let valEbidta1 = Number(valGross1) - Number(IndirectExpences1)\n        setEBITDA1(valEbidta1);\n        // console.log(Number(Number(valEbidta1) / Number(TotalRevenue1) * 100));\n        let valEBITDApercent1 = (Number(Number(valEbidta1) / Number(TotalRevenue1) * 100));\n        console.log(valEBITDApercent1);\n        setEBITDApercent1(valEBITDApercent1);\n\n\n        let valGross2 = Number(TotalRevenue2) - Number(DirectExpences2)\n        // let cal4 = (Number(revenue2Value) - Number(cal2))\n        setGrossProfit2(valGross2);\n        let valEbidta2 = Number(valGross2) - Number(IndirectExpences2)\n        setEBITDA2(valEbidta2);\n        // console.log(Number(Number(valEbidta2) / Number(TotalRevenue2) * 200));\n        let valEBITDApercent2 = (Number(Number(valEbidta2) / Number(TotalRevenue2) * 100));\n        console.log(valEBITDApercent2);\n        setEBITDApercent2(valEBITDApercent2);\n\n        let valGross3 = Number(TotalRevenue3) - Number(DirectExpences3)\n        // let cal4 = (Number(revenue3Value) - Number(cal3))\n        setGrossProfit3(valGross3);\n        let valEbidta3 = Number(valGross3) - Number(IndirectExpences3)\n        setEBITDA3(valEbidta3);\n        // console.log(Number(Number(valEbidta3) / Number(TotalRevenue3) * 300));\n        let valEBITDApercent3 = (Number(Number(valEbidta3) / Number(TotalRevenue3) * 100));\n        console.log(valEBITDApercent3);\n        if (valEBITDApercent3 != \"\" || valEBITDApercent3 == NaN) {\n            setEBITDApercent3(\"0\");\n        }\n        // setEBITDApercent3(valEBITDApercent3);\n\n\n        let valGross4 = Number(TotalRevenue4) - Number(DirectExpences4)\n        // let cal4 = (Number(revenue4Value) - Number(cal4))\n        setGrossProfit4(valGross4);\n        let valEbidta4 = Number(valGross4) - Number(IndirectExpences4)\n        setEBITDA4(valEbidta4);\n        // console.log(Number(Number(valEbidta4) / Number(TotalRevenue4) * 400));\n        let valEBITDApercent4 = (Number(Number(valEbidta4) / Number(TotalRevenue4) * 100));\n        console.log(valEBITDApercent4);\n        // setEBITDApercent4(valEBITDApercent4);\n        if (valEBITDApercent4 != \"\" || valEBITDApercent4 == NaN) {\n            setEBITDApercent4(\"0\");\n        }\n\n        let valGross5 = Number(TotalRevenue5) - Number(DirectExpences5)\n        // let cal4 = (Number(revenue5Value) - Number(cal5))\n        setGrossProfit5(valGross5);\n        let valEbidta5 = Number(valGross5) - Number(IndirectExpences5)\n        setEBITDA5(valEbidta5);\n        // console.log(Number(Number(valEbidta5) / Number(TotalRevenue5) * 500));\n        let valEBITDApercent5 = (Number(Number(valEbidta5) / Number(TotalRevenue5) * 100));\n        console.log(valEBITDApercent5);\n        // setEBITDApercent5(valEBITDApercent5);\n        if (valEBITDApercent5 != \"\" || valEBITDApercent5 == NaN) {\n            setEBITDApercent5(\"0\");\n        }\n\n\n        let valGross6 = Number(TotalRevenue6) - Number(DirectExpences6)\n        // let cal4 = (Number(revenue6Value) - Number(cal6))\n        setGrossProfit6(valGross6);\n        let valEbidta6 = Number(valGross6) - Number(IndirectExpences6)\n        setEBITDA6(valEbidta6);\n        // console.log(Number(Number(valEbidta6) / Number(TotalRevenue6) * 600));\n        let valEBITDApercent6 = (Number(Number(valEbidta6) / Number(TotalRevenue6) * 100));\n        console.log(valEBITDApercent6);\n        // setEBITDApercent6(valEBITDApercent6);\n        if (valEBITDApercent6 != \"\" || valEBITDApercent6 == NaN) {\n            setEBITDApercent6(\"0\");\n        }\n        // setGrossProfit2(TotalRevenue2 - DirectExpences2);\n        // setEBITDA2(GrossProfit2 - IndirectExpences2);\n\n        // setGrossProfit3(TotalRevenue3 - DirectExpences3);\n        // setEBITDA3(GrossProfit3 - IndirectExpences3);\n\n        // setGrossProfit4(TotalRevenue4 - DirectExpences4);\n        // setEBITDA4(GrossProfit4 - IndirectExpences4);\n\n        // setGrossProfit5(TotalRevenue5 - DirectExpences5);\n        // setEBITDA5(GrossProfit5 - IndirectExpences5);\n\n        // setGrossProfit6(TotalRevenue6 - DirectExpences6);\n        // setEBITDA6(GrossProfit6 - IndirectExpences6);\n\n\n        // GetallRecords();\n        // percentageCal();\n        GetallRecords();\n\n    }, []);\n\n\n\n    const handleInputChangeTotalRevenue1 = (e) => {\n        // setTotalRevenue1(e.target.value);\n        // let value = Number(e.target.value);\n        // let valTotalRevenue = value - Number(DirectExpences1)\n        // setGrossProfit1(valTotalRevenue);\n        // percentageCal();\n        // setEBITDA1(valTotalRevenue - Number(IndirectExpences1));\n\n        setTotalRevenue1(e.target.value);\n        let value = Number(e.target.value);\n        let valTotalRevenue = value - Number(DirectExpences1)\n        setGrossProfit1(valTotalRevenue);\n        // percentageCal();\n        let h1valEBITDA1 = (valTotalRevenue - Number(IndirectExpences1));\n        setEBITDA1(h1valEBITDA1);\n\n        let h1valEBITDApercent1 = Number(h1valEBITDA1) / Number(TotalRevenue1) * 100;\n        setEBITDApercent1(Number(EBITDA1 / TotalRevenue1 * 100));\n\n        console.log(h1valEBITDApercent1);\n        setEBITDApercent1(h1valEBITDApercent1);\n\n\n    }\n\n    const handleInputChangeDirectExpences1 = (e) => {\n        // alert(IndirectExpences1)\n        setDirectExpences1(e.target.value);\n        let value = Number(e.target.value);\n        let grossProfitVal = Number(TotalRevenue1 - value);\n        setGrossProfit1(grossProfitVal);\n        let EBITDAVal = Number(TotalRevenue1 - value);\n        setEBITDA1(EBITDAVal);\n        // let EBITDAVal = grossProfitVal - IndirectExpences1\n        // percentageCal();\n    }\n\n\n    const handleInputChangeIndirectExpences1 = (e) => {\n        setIndirectExpences1(e.target.value);\n        let value = Number(e.target.value);\n        let ebidtaVal = Number(GrossProfit1 - value)\n        setEBITDA1(ebidtaVal);\n        // percentageCal();\n        let EBITDApercent1Val = (Number(ebidtaVal / TotalRevenue1) * 100);\n        setEBITDApercent1(EBITDApercent1Val);\n\n    }\n\n    // for column 2\n    const handleInputChangeTotalRevenue2 = (e) => {\n        // setTotalRevenue2(e.target.value);\n        // let value = Number(e.target.value);\n        // setGrossProfit2(value - DirectExpences2);\n        // percentageCal();\n        // setEBITDA2(GrossProfit2 - IndirectExpences2);\n\n        setTotalRevenue2(e.target.value);\n        let value = Number(e.target.value);\n        let valTotalRevenue = value - Number(DirectExpences2)\n        setGrossProfit2(valTotalRevenue);\n        // percentageCal();\n        let h2valEBITDA2 = (valTotalRevenue - Number(IndirectExpences2));\n        setEBITDA2(h2valEBITDA2);\n\n        let h2valEBITDApercent2 = Number(h2valEBITDA2) / Number(TotalRevenue2) * 100;\n        setEBITDApercent2(Number(EBITDA2 / TotalRevenue2 * 100));\n\n        console.log(h2valEBITDApercent2);\n        setEBITDApercent2(h2valEBITDApercent2);\n\n\n    }\n\n    const handleInputChangeDirectExpences2 = (e) => {\n        setDirectExpences2(e.target.value);\n        let value = Number(e.target.value);\n        setGrossProfit2(TotalRevenue2 - value);\n        setEBITDA2(GrossProfit2 - IndirectExpences2);\n        console.log(GrossProfit2);\n        console.log(IndirectExpences2);\n        percentageCal();\n    }\n\n\n    const handleInputChangeIndirectExpences2 = (e) => {\n        setIndirectExpences2(e.target.value);\n        let value = Number(e.target.value);\n        let ebidtaVal = Number(GrossProfit2 - value)\n        setEBITDA2(ebidtaVal);\n        // percentageCal();\n        let EBITDApercent2Val = (Number(ebidtaVal / TotalRevenue2) * 100);\n        setEBITDApercent2(EBITDApercent2Val);\n\n    }\n\n\n\n    // for column 3\n    const handleInputChangeTotalRevenue3 = (e) => {\n        // setTotalRevenue3(e.target.value);\n        // let value = Number(e.target.value);\n        // setGrossProfit3(value - DirectExpences3);\n        // percentageCal();\n        // setEBITDA3(GrossProfit3 - IndirectExpences3);\n\n\n        setTotalRevenue3(e.target.value);\n        let value = Number(e.target.value);\n        let valTotalRevenue = value - Number(DirectExpences3)\n        setGrossProfit3(valTotalRevenue);\n        // percentageCal();\n        let h3valEBITDA3 = (valTotalRevenue - Number(IndirectExpences3));\n        setEBITDA3(h3valEBITDA3);\n\n        let h3valEBITDApercent3 = Number(h3valEBITDA3) / Number(TotalRevenue3) * 100;\n        setEBITDApercent3(Number(EBITDA3 / TotalRevenue3 * 100));\n\n        console.log(h3valEBITDApercent3);\n        setEBITDApercent3(h3valEBITDApercent3);\n\n    }\n\n    const handleInputChangeDirectExpences3 = (e) => {\n        setDirectExpences3(e.target.value);\n        let value = Number(e.target.value);\n        setGrossProfit3(TotalRevenue3 - value);\n        setEBITDA3(GrossProfit3 - IndirectExpences3);\n        console.log(GrossProfit3);\n        console.log(IndirectExpences3);\n        percentageCal();\n    }\n\n\n    const handleInputChangeIndirectExpences3 = (e) => {\n        setIndirectExpences3(e.target.value);\n        let value = Number(e.target.value);\n        let ebidtaVal = Number(GrossProfit3 - value)\n        setEBITDA3(ebidtaVal);\n        // percentageCal();\n        let EBITDApercent3Val = (Number(ebidtaVal / TotalRevenue3) * 100);\n        setEBITDApercent3(EBITDApercent3Val);\n\n\n\n    }\n\n\n\n    // for column 4\n    const handleInputChangeTotalRevenue4 = (e) => {\n        // setTotalRevenue4(e.target.value);\n        // let value = Number(e.target.value);\n        // setGrossProfit4(value - DirectExpences4);\n        // percentageCal();\n        // setEBITDA4(GrossProfit4 - IndirectExpences4);\n\n        setTotalRevenue4(e.target.value);\n        let value = Number(e.target.value);\n        let valTotalRevenue = value - Number(DirectExpences4)\n        setGrossProfit4(valTotalRevenue);\n        // percentageCal();\n        let h4valEBITDA4 = (valTotalRevenue - Number(IndirectExpences4));\n        setEBITDA4(h4valEBITDA4);\n\n        let h4valEBITDApercent4 = Number(h4valEBITDA4) / Number(TotalRevenue4) * 100;\n        setEBITDApercent4(Number(EBITDA4 / TotalRevenue4 * 100));\n\n        console.log(h4valEBITDApercent4);\n        setEBITDApercent4(h4valEBITDApercent4);\n\n\n    }\n\n    const handleInputChangeDirectExpences4 = (e) => {\n        setDirectExpences4(e.target.value);\n        let value = Number(e.target.value);\n        setGrossProfit4(TotalRevenue4 - value);\n        setEBITDA4(GrossProfit4 - IndirectExpences4);\n        console.log(GrossProfit4);\n        console.log(IndirectExpences4);\n        percentageCal();\n    }\n\n\n    const handleInputChangeIndirectExpences4 = (e) => {\n        setIndirectExpences4(e.target.value);\n        let value = Number(e.target.value);\n        let ebidtaVal = Number(GrossProfit4 - value)\n        setEBITDA4(ebidtaVal);\n        // percentageCal();\n        let EBITDApercent4Val = (Number(ebidtaVal / TotalRevenue4) * 100);\n        setEBITDApercent4(EBITDApercent4Val);\n\n\n    }\n\n\n    // for column 5\n    const handleInputChangeTotalRevenue5 = (e) => {\n        // setTotalRevenue5(e.target.value);\n        // let value = Number(e.target.value);\n        // setGrossProfit5(value - DirectExpences5);\n        // percentageCal();\n        // setEBITDA5(GrossProfit5 - IndirectExpences5);\n\n        setTotalRevenue5(e.target.value);\n        let value = Number(e.target.value);\n        let valTotalRevenue = value - Number(DirectExpences5)\n        setGrossProfit5(valTotalRevenue);\n        // percentageCal();\n        let h5valEBITDA5 = (valTotalRevenue - Number(IndirectExpences5));\n        setEBITDA5(h5valEBITDA5);\n\n        let h5valEBITDApercent5 = Number(h5valEBITDA5) / Number(TotalRevenue5) * 100;\n        setEBITDApercent5(Number(EBITDA5 / TotalRevenue5 * 100));\n\n        console.log(h5valEBITDApercent5);\n        setEBITDApercent5(h5valEBITDApercent5);\n\n    }\n\n    const handleInputChangeDirectExpences5 = (e) => {\n        setDirectExpences5(e.target.value);\n        let value = Number(e.target.value);\n        setGrossProfit5(TotalRevenue5 - value);\n        setEBITDA5(GrossProfit5 - IndirectExpences5);\n        console.log(GrossProfit5);\n        console.log(IndirectExpences5);\n        percentageCal();\n    }\n\n\n    const handleInputChangeIndirectExpences5 = (e) => {\n        setIndirectExpences5(e.target.value);\n        let value = Number(e.target.value);\n        let ebidtaVal = Number(GrossProfit5 - value)\n        setEBITDA5(ebidtaVal);\n        // percentageCal();\n        let EBITDApercent5Val = (Number(ebidtaVal / TotalRevenue5) * 100);\n        setEBITDApercent5(EBITDApercent5Val);\n\n\n    }\n\n\n    // for column 6\n    const handleInputChangeTotalRevenue6 = (e) => {\n        // setTotalRevenue6(e.target.value);\n        // let value = Number(e.target.value);\n        // setGrossProfit6(value - DirectExpences6);\n        // percentageCal();\n        // setEBITDA6(GrossProfit6 - IndirectExpences6);\n\n        setTotalRevenue6(e.target.value);\n        let value = Number(e.target.value);\n        let valTotalRevenue = value - Number(DirectExpences6)\n        setGrossProfit6(valTotalRevenue);\n        // percentageCal();\n        let h6valEBITDA6 = (valTotalRevenue - Number(IndirectExpences6));\n        setEBITDA6(h6valEBITDA6);\n\n        let h6valEBITDApercent6 = Number(h6valEBITDA6) / Number(TotalRevenue6) * 100;\n        setEBITDApercent6(Number(EBITDA6 / TotalRevenue6 * 100));\n\n        console.log(h6valEBITDApercent6);\n        setEBITDApercent6(h6valEBITDApercent6);\n\n    }\n\n    const handleInputChangeDirectExpences6 = (e) => {\n        setDirectExpences6(e.target.value);\n        let value = Number(e.target.value);\n        setGrossProfit6(TotalRevenue6 - value);\n        setEBITDA6(GrossProfit6 - IndirectExpences6);\n        console.log(GrossProfit6);\n        console.log(IndirectExpences6);\n        percentageCal();\n    }\n\n\n    const handleInputChangeIndirectExpences6 = (e) => {\n        setIndirectExpences6(e.target.value);\n        let value = Number(e.target.value);\n        let ebidtaVal = Number(GrossProfit6 - value)\n        setEBITDA6(ebidtaVal);\n        // percentageCal();\n        let EBITDApercent6Val = (Number(ebidtaVal / TotalRevenue6) * 100);\n        setEBITDApercent6(EBITDApercent6Val);\n\n\n    }\n\n\n    const OnSubmitForm = () => {\n        // console.log(totalRevenue)\n        // var st = eval([totalRevenue]);\n        // console.log(st);\n        // alert(completeData.length)\n        if (completeData.length === 0) {\n\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            var rawrich = JSON.stringify({\n                TotalRevenue1: TotalRevenue1,\n                RevenueReadOnly1: RevenueReadOnly1,\n                DirectExpences1: DirectExpences1,\n                DirectExpencesReadOnly1: DirectExpencesReadOnly1,\n                GrossProfit1: GrossProfit1,\n                GrossProfitID1: GrossProfitID1,\n                IndirectExpences1: IndirectExpences1,\n                IndirectExpencesID1: IndirectExpencesID1,\n                EBITDA1: EBITDA1,\n                EBITDApercent1: EBITDApercent1,\n                EBITDA_ID1: EBITDA_ID1,\n\n                TotalRevenue2: TotalRevenue2,\n                RevenueReadOnly2: RevenueReadOnly2,\n                DirectExpences2: DirectExpences2,\n                DirectExpencesReadOnly2: DirectExpencesReadOnly2,\n                GrossProfit2: GrossProfit2,\n                GrossProfitID2: GrossProfitID2,\n                IndirectExpences2: IndirectExpences2,\n                IndirectExpencesID2: IndirectExpencesID2,\n                EBITDA2: EBITDA2,\n                EBITDApercent2: EBITDApercent2,\n                EBITDA_ID2: EBITDA_ID2,\n\n                TotalRevenue3: TotalRevenue3,\n                RevenueReadOnly3: RevenueReadOnly3,\n                DirectExpences3: DirectExpences3,\n                DirectExpencesReadOnly3: DirectExpencesReadOnly3,\n                GrossProfit3: GrossProfit3,\n                GrossProfitID3: GrossProfitID3,\n                IndirectExpences3: IndirectExpences3,\n                IndirectExpencesID3: IndirectExpencesID3,\n                EBITDA3: EBITDA3,\n                EBITDApercent3: EBITDApercent3,\n                EBITDA_ID3: EBITDA_ID3,\n\n\n\n                TotalRevenue4: TotalRevenue4,\n                RevenueReadOnly4: RevenueReadOnly4,\n                DirectExpences4: DirectExpences4,\n                DirectExpencesReadOnly4: DirectExpencesReadOnly4,\n                GrossProfit4: GrossProfit4,\n                GrossProfitID4: GrossProfitID4,\n                IndirectExpences4: IndirectExpences4,\n                IndirectExpencesID4: IndirectExpencesID4,\n                EBITDA4: EBITDA4,\n                EBITDApercent4: EBITDApercent4,\n                EBITDA_ID4: EBITDA_ID4,\n\n\n                TotalRevenue5: TotalRevenue5,\n                RevenueReadOnly5: RevenueReadOnly5,\n                DirectExpences5: DirectExpences5,\n                DirectExpencesReadOnly5: DirectExpencesReadOnly5,\n                GrossProfit5: GrossProfit5,\n                GrossProfitID5: GrossProfitID5,\n                IndirectExpences5: IndirectExpences5,\n                IndirectExpencesID5: IndirectExpencesID5,\n                EBITDA5: EBITDA5,\n                EBITDApercent5: EBITDApercent5,\n                EBITDA_ID5: EBITDA_ID5,\n\n\n\n                TotalRevenue6: TotalRevenue6,\n                RevenueReadOnly6: RevenueReadOnly6,\n                DirectExpences6: DirectExpences6,\n                DirectExpencesReadOnly6: DirectExpencesReadOnly6,\n                GrossProfit6: GrossProfit6,\n                GrossProfitID6: GrossProfitID6,\n                IndirectExpences6: IndirectExpences6,\n                IndirectExpencesID6: IndirectExpencesID6,\n                EBITDA6: EBITDA6,\n                EBITDApercent6: EBITDApercent6,\n                EBITDA_ID6: EBITDA_ID6,\n\n                email_id: s_id,\n                created_by: s_id\n            })\n            var requestOptionsrichtext = {\n                method: \"POST\",\n                headers: myHeaders,\n                body: rawrich,\n                redirect: \"follow\",\n            };\n            fetch(`http://localhost:9002/masters/urjaChar`, requestOptionsrichtext)\n                .then((response) => response.json())\n                .then((resData) => {\n                    // console.log(resData);\n                    if (resData.status == 200) {\n                        // alert(\"success\")\n\n                        // console.log(\"Data Added succesfully\")\n                        setMadd(true);\n                        // setMadd(false);\n                        setTimeout(() => {\n                            setMadd(false);\n                        }, 1000)\n\n                        GetallRecords();\n\n                    }\n                    GetallRecords();\n                })\n                .catch((error) => console.log(\"error\", error))\n        } else {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            var rawrich = JSON.stringify({\n                TotalRevenue1: TotalRevenue1,\n                RevenueReadOnly1: RevenueReadOnly1,\n                DirectExpences1: DirectExpences1,\n                DirectExpencesReadOnly1: DirectExpencesReadOnly1,\n                GrossProfit1: GrossProfit1,\n                GrossProfitID1: GrossProfitID1,\n                IndirectExpences1: IndirectExpences1,\n                IndirectExpencesID1: IndirectExpencesID1,\n                EBITDA1: EBITDA1,\n                EBITDApercent1: EBITDApercent1,\n                EBITDA_ID1: EBITDA_ID1,\n\n                TotalRevenue2: TotalRevenue2,\n                RevenueReadOnly2: RevenueReadOnly2,\n                DirectExpences2: DirectExpences2,\n                DirectExpencesReadOnly2: DirectExpencesReadOnly2,\n                GrossProfit2: GrossProfit2,\n                GrossProfitID2: GrossProfitID2,\n                IndirectExpences2: IndirectExpences2,\n                IndirectExpencesID2: IndirectExpencesID2,\n                EBITDA2: EBITDA2,\n                EBITDApercent2: EBITDApercent2,\n                EBITDA_ID2: EBITDA_ID2,\n\n                TotalRevenue3: TotalRevenue3,\n                RevenueReadOnly3: RevenueReadOnly3,\n                DirectExpences3: DirectExpences3,\n                DirectExpencesReadOnly3: DirectExpencesReadOnly3,\n                GrossProfit3: GrossProfit3,\n                GrossProfitID3: GrossProfitID3,\n                IndirectExpences3: IndirectExpences3,\n                IndirectExpencesID3: IndirectExpencesID3,\n                EBITDA3: EBITDA3,\n                EBITDApercent3: EBITDApercent3,\n                EBITDA_ID3: EBITDA_ID3,\n\n\n\n                TotalRevenue4: TotalRevenue4,\n                RevenueReadOnly4: RevenueReadOnly4,\n                DirectExpences4: DirectExpences4,\n                DirectExpencesReadOnly4: DirectExpencesReadOnly4,\n                GrossProfit4: GrossProfit4,\n                GrossProfitID4: GrossProfitID4,\n                IndirectExpences4: IndirectExpences4,\n                IndirectExpencesID4: IndirectExpencesID4,\n                EBITDA4: EBITDA4,\n                EBITDApercent4: EBITDApercent4,\n                EBITDA_ID4: EBITDA_ID4,\n\n\n                TotalRevenue5: TotalRevenue5,\n                RevenueReadOnly5: RevenueReadOnly5,\n                DirectExpences5: DirectExpences5,\n                DirectExpencesReadOnly5: DirectExpencesReadOnly5,\n                GrossProfit5: GrossProfit5,\n                GrossProfitID5: GrossProfitID5,\n                IndirectExpences5: IndirectExpences5,\n                IndirectExpencesID5: IndirectExpencesID5,\n                EBITDA5: EBITDA5,\n                EBITDApercent5: EBITDApercent5,\n                EBITDA_ID5: EBITDA_ID5,\n\n\n\n                TotalRevenue6: TotalRevenue6,\n                RevenueReadOnly6: RevenueReadOnly6,\n                DirectExpences6: DirectExpences6,\n                DirectExpencesReadOnly6: DirectExpencesReadOnly6,\n                GrossProfit6: GrossProfit6,\n                GrossProfitID6: GrossProfitID6,\n                IndirectExpences6: IndirectExpences6,\n                IndirectExpencesID6: IndirectExpencesID6,\n                EBITDA6: EBITDA6,\n                EBITDApercent6: EBITDApercent6,\n                EBITDA_ID6: EBITDA_ID6,\n\n                email_id: s_id,\n                created_by: s_id\n            })\n            var requestOptionsrichtext = {\n                method: \"PUT\",\n                headers: myHeaders,\n                body: rawrich,\n                redirect: \"follow\",\n            };\n            fetch(`http://localhost:9002/masters/urjaChar/${Upid}`, requestOptionsrichtext)\n                .then((response) => response.json())\n                .then((resData) => {\n                    // console.log(resData);\n                    if (resData.status == 200) {\n                        // alert(\"updated\")\n                        // console.log(\"Data Added succesfully\")\n                        setMupdate(true);\n                        // setMupdate(false);\n                        setTimeout(() => {\n                            setMupdate(false);\n                        }, 1000)\n\n                        GetallRecords();\n\n                    }\n                    GetallRecords();\n                })\n                .catch((error) => console.log(\"error\", error))\n\n        }\n    }\n\n    return (\n\n        <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\n            <Modal\n                size=\"sm\"\n                show={Madd}\n                onHide={() => setMadd(false)}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Body >Form Saved Successful</Modal.Body>\n            </Modal>\n\n\n\n            <Modal\n                size=\"sm\"\n                show={Mupdate}\n                onHide={() => setMupdate(false)}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Body >Form Update Successful</Modal.Body>\n            </Modal>\n            <div className=\"row clearfix\">\n                <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                    <div className=\"card p-4 mt-2\">\n                        <div className=\"body p-5\" >\n                            <div >\n                                <table class=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">Particulars</th>\n                                            <th scope=\"col\">FY {Fdate - 1}-{date}</th>\n                                            <th scope=\"col\">FY {Fdate - 2}-{date - 1}</th>\n                                            <th scope=\"col\">FY {Fdate - 3}-{date - 2}</th>\n                                            <th scope=\"col\">FY {Fdate - 4}-{date - 3}</th>\n                                            <th scope=\"col\">FY {Fdate - 5}-{date - 4}</th>\n                                            <th scope=\"col\">FY {Fdate - 6}-{date - 5}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <th scope=\"row\">Total Revenue</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={TotalRevenue1}\n                                                onChange={handleInputChangeTotalRevenue1}\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={TotalRevenue2}\n                                                onChange={handleInputChangeTotalRevenue2}\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={TotalRevenue3}\n                                                onChange={handleInputChangeTotalRevenue3}\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={TotalRevenue4}\n                                                onChange={handleInputChangeTotalRevenue4}\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={TotalRevenue5}\n                                                onChange={handleInputChangeTotalRevenue5}\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={TotalRevenue6}\n                                                onChange={handleInputChangeTotalRevenue6}\n                                            /></td>\n                                        </tr>\n\n                                        <tr>\n                                            <th scope=\"row\">Total Revenue (Growth / Degrowth %)</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={RevenueReadOnly1}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={RevenueReadOnly2}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={RevenueReadOnly3}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={RevenueReadOnly4}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={RevenueReadOnly5}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={RevenueReadOnly6}\n\n                                                readOnly\n                                            /></td>\n                                        </tr>\n\n\n\n                                        <tr>\n                                            <th scope=\"row\">Direct Expenses</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpences1}\n                                                onChange={handleInputChangeDirectExpences1}\n\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpences2}\n                                                onChange={handleInputChangeDirectExpences2}\n\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpences3}\n                                                onChange={handleInputChangeDirectExpences3}\n\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpences4}\n                                                onChange={handleInputChangeDirectExpences4}\n\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpences5}\n                                                onChange={handleInputChangeDirectExpences5}\n\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpences6}\n                                                onChange={handleInputChangeDirectExpences6}\n\n                                            /></td>\n                                        </tr>\n\n\n\n                                        <tr>\n                                            <th scope=\"row\" >Direct Expenses</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpencesReadOnly1}\n                                                onChange={handleInputChangeDirectExpences1}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpencesReadOnly2}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpencesReadOnly3}\n                                                onChange={handleInputChangeDirectExpences3}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpencesReadOnly4}\n                                                onChange={handleInputChangeDirectExpences4}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpencesReadOnly5}\n                                                onChange={handleInputChangeDirectExpences5}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={DirectExpencesReadOnly6}\n                                                onChange={handleInputChangeDirectExpences6}\n                                                readOnly\n                                            /></td>\n                                        </tr>\n\n\n                                        <tr>\n                                            <th scope=\"row\">Gross Profit</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfit1}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfit2}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfit3}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfit4}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfit5}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfit6}\n                                                readOnly\n                                            /></td>\n                                        </tr>\n\n                                        <tr>\n                                            <th scope=\"row\">Gross Profit ( Increase / Decrease)</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfitID1}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfitID2}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfitID3}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfitID4}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfitID5}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={GrossProfitID6}\n                                                readOnly\n                                            /></td>\n                                        </tr>\n\n                                        <tr>\n                                            <th scope=\"row\">Indirect Expenses</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpences1}\n                                                onChange={handleInputChangeIndirectExpences1}\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpences2}\n                                                onChange={handleInputChangeIndirectExpences2}\n\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpences3}\n                                                onChange={handleInputChangeIndirectExpences3}\n\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpences4}\n                                                onChange={handleInputChangeIndirectExpences4}\n\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpences5}\n                                                onChange={handleInputChangeIndirectExpences5}\n\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpences6}\n                                                onChange={handleInputChangeIndirectExpences6}\n\n                                            /></td>\n                                        </tr>\n\n\n                                        <tr>\n                                            <th scope=\"row\">Indirect Expenses (Increase / Decrease)</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpencesID1}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpencesID2}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpencesID3}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpencesID4}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpencesID5}\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={IndirectExpencesID6}\n                                                readOnly\n                                            /></td>\n                                        </tr>\n\n                                        <tr>\n                                            <th scope=\"row\">EBITDA</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA1}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA2}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA3}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA4}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA5}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA6}\n\n                                                readOnly\n                                            /></td>\n                                        </tr>\n\n\n                                        <tr>\n                                            <th scope=\"row\">EBITDA%</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDApercent1 + \"%\"}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDApercent2 + \"%\"}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDApercent3 + \"%\"}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDApercent4 + \"%\"}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDApercent5 + \"%\"}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDApercent6 + \"%\"}\n\n                                                readOnly\n                                            /></td>\n                                        </tr>\n\n\n                                        <tr>\n                                            <th scope=\"row\">EBITDA (Increase / Decrease)</th>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA_ID1}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA_ID2}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA_ID3}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA_ID4}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA_ID5}\n\n                                                readOnly\n                                            /></td>\n                                            <td><input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"0\"\n                                                value={EBITDA_ID6}\n\n                                                readOnly\n                                            /></td>\n                                        </tr>\n\n                                    </tbody>\n                                </table>\n                            </div>\n                            <button type=\"submit\" class=\"btn savebtn ml-2 waves-effect\" onClick={OnSubmitForm}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default UrjaChar","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan10/RawTable.js",["1016","1017","1018","1019","1020","1021"],"import React, { useEffect, useState } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Table = (props) => {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history=useHistory();\r\n  const classes = useStyles();\r\n  const [loading, setloading] = useState(false)\r\n  const [editId, seteditId] = useState(\"\");\r\n  const [delId, setdelId] = useState(\"\");\r\n  let [vilakshanData, setVilakshanData] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [editModal, seteditModal] = useState(false);\r\n  const [business_unit, setbusiness_unit] = useState();\r\n  const [insteelObjective, setinsteelObjective] = useState();\r\n  const [FY, setFY] = useState();\r\n  const [goalDescription, setgoalDescription] = useState();\r\n  const [department, setdepartment] = useState();\r\n  const [division, setdivision] = useState();\r\n  const [role, setrole] = useState();\r\n  const [name, setname] = useState();\r\n  const [exptMngmt, setexptMngmt] = useState();\r\n  const [Weightages, setWeightages] = useState();\r\n  const [fy_target, setfy_target] = useState();\r\n  const [fy_actuals, setfy_actuals] = useState();\r\n  const [achievement_till_date, setachievement_till_date] = useState();\r\n\r\n  const changebusiness_unit = (event) => {\r\n    setbusiness_unit(event.target.value);\r\n  };\r\n\r\n  const changeinsteelObjective = (event) => {\r\n    setinsteelObjective(event.target.value);\r\n  };\r\n\r\n  const changeFY = (event) => {\r\n    setFY(event.target.value);\r\n  };\r\n\r\n  const changegoalDescription = (event) => {\r\n    setgoalDescription(event.target.value);\r\n  };\r\n\r\n  const changedepartment = (event) => {\r\n    setdepartment(event.target.value);\r\n  };\r\n\r\n  const changedivision = (event) => {\r\n    setdivision(event.target.value);\r\n  };\r\n\r\n  const changerole = (event) => {\r\n    setrole(event.target.value);\r\n  };\r\n\r\n  const changename = (event) => {\r\n    setname(event.target.value);\r\n  };\r\n\r\n  const changeexptMngmt = (event) => {\r\n    setexptMngmt(event.target.value);\r\n  };\r\n\r\n  const changeWeightages = (event) => {\r\n    setWeightages(event.target.value);\r\n  };\r\n\r\n  const changefy_target = (event) => {\r\n    setfy_target(event.target.value);\r\n  };\r\n\r\n  const changefy_actuals = (event) => {\r\n    setfy_actuals(event.target.value);\r\n  };\r\n\r\n  const changechangeachievement_till_date = (event) => {\r\n    setachievement_till_date(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    seteditModal(false);\r\n  };\r\n\r\n  const OnSubmitUpdate = (edId) => {\r\n    // alert(edId)\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      business_unit: business_unit,\r\n      insteelObjective: insteelObjective,\r\n      FY: FY,\r\n      goalDescription: goalDescription,\r\n      department: department,\r\n      division: division,\r\n      role: role,\r\n      name: name,\r\n      exptMngmt: exptMngmt,\r\n      Weightages: Weightages,\r\n      fy_target: fy_target,\r\n      fy_actuals: fy_actuals,\r\n      achievement_till_date: achievement_till_date,\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/goal_drillerRaw/${edId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"updated\");\r\n          // GetallRecored();\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    // console.log(formData);\r\n\r\n    setShow(false);\r\n    seteditModal(false);\r\n    // GetallRecored();\r\n  };\r\n\r\n  const deleteConfirm = () => {\r\n    // alert(delId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"delete\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/goal_drillerRaw/${delId}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // seteditId(resData.data[0].id);\r\n        console.log(\"deleted\");\r\n        window.location.reload();\r\n\r\n        setShow(false);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const editfn = (edit_id) => {\r\n    // alert(edit_id);\r\n    seteditModal(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/goal_drillerRaw/${edit_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data[0].id);\r\n        console.log(resData.data);\r\n\r\n        seteditId(resData.data[0].id);\r\n        setbusiness_unit(resData.data[0].business_unit);\r\n\r\n        setinsteelObjective(resData.data[0].insteelObjective);\r\n        setFY(resData.data[0].FY);\r\n        setgoalDescription(resData.data[0].goalDescription);\r\n        setdepartment(resData.data[0].department);\r\n        setdivision(resData.data[0].division);\r\n        setrole(resData.data[0].role);\r\n        setname(resData.data[0].name);\r\n        setexptMngmt(resData.data[0].exptMngmt);\r\n        setWeightages(resData.data[0].Weightages);\r\n        setfy_target(resData.data[0].fy_target);\r\n\r\n        setfy_actuals(resData.data[0].fy_actuals);\r\n        setachievement_till_date(resData.data[0].achievement_till_date);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  const deletefn = (edit_id) => {\r\n    // alert(edit_id);\r\n    setdelId(edit_id);\r\n    setShow(true);\r\n  };\r\n\r\n  useEffect(() => {      var s_id = localStorage.getItem('tr_id')\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    setloading(true);\r\n    setTimeout(() => {\r\n      setloading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  let formData = props.AllData;\r\n  let rows = [];\r\n  var srNo = 1;\r\n  if (formData) {\r\n    formData.map((item, key) => {\r\n      rows.push(\r\n        <tbody>\r\n          <td>{srNo++}</td>\r\n          <td>{item.business_unit}</td>\r\n          <td>{item.insteelObjective}</td>\r\n          <td>{item.FY}</td>\r\n          <td>{item.goalDescription}</td>\r\n          <td>{item.department}</td>\r\n          <td>{item.division}</td>\r\n          <td>{item.role}</td>\r\n          <td>{item.name}</td>\r\n          <td>{item.exptMngmt}</td>\r\n          <td>{item.Weightages}</td>\r\n          <td>{item.fy_target}</td>\r\n          <td>{item.fy_actuals}</td>\r\n          <td>{item.achievement_till_date}</td>\r\n          <td colspan=\"8\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                title=\"edit\"\r\n                class=\"btn btn-success zmdi zmdi-edit waves-effect pull-left\"\r\n                style={{ float: \"left\" }}\r\n                onClick={() => editfn(item.id)}\r\n              ></button>\r\n              <button\r\n                type=\"submit\"\r\n                title=\"delete\"\r\n                class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n                onClick={() => deletefn(item.id)}\r\n              ></button>\r\n            </div>\r\n          </td>\r\n        </tbody>\r\n      );\r\n    });\r\n  }\r\n\r\n  return loading ? (\r\n    <div sytle={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <CircularProgress />\r\n    </div>\r\n  ) : (\r\n    <>\r\n      <div class=\"table-responsive\" id=\"Table\">\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Sr.No.</th>\r\n              <th>Business Unit</th>\r\n              <th>Insteel Objective</th>\r\n              <th>FY</th>\r\n              <th>Goal Description</th>\r\n              <th>Department</th>\r\n              <th>Division</th>\r\n              <th>Role</th>\r\n              <th>Name</th>\r\n              <th>Expectations from Management (Target)</th>\r\n              <th>Weightages</th>\r\n              <th>FY Target</th>\r\n              <th>FY Actuals</th>\r\n              <th>Achievement Till date</th>\r\n              <th style={{ textAlign: \"center\" }}>Action</th>\r\n            </tr>\r\n          </thead>\r\n          {rows}\r\n        </table>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\r\n        </Modal.Header>\r\n        {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Cance\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirm}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* For Edit */}\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={editModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Edit Step Goal Driller Raw\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"body\">\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Business Unit</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Business Unit\"\r\n                            name=\"business_unit\"\r\n                            onChange={changebusiness_unit}\r\n                            value={business_unit}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Insteel Objective</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Insteel Objective\"\r\n                            name=\"insteelObjective\"\r\n                            onChange={changeinsteelObjective}\r\n                            value={insteelObjective}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>FY</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"FY\"\r\n                            name=\"FY\"\r\n                            onChange={changeFY}\r\n                            value={FY}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Goal Description</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Goal Description\"\r\n                            name=\"goalDescription\"\r\n                            onChange={changegoalDescription}\r\n                            value={goalDescription}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Department</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Department\"\r\n                            name=\"department\"\r\n                            onChange={changedepartment}\r\n                            value={department}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Division</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Division\"\r\n                            name=\"division\"\r\n                            onChange={changedivision}\r\n                            value={division}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Role</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Role\"\r\n                            name=\"role\"\r\n                            onChange={changerole}\r\n                            value={role}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Name</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            onChange={changename}\r\n                            value={name}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Expectations from Management (Target)</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Expectations from Management (Target)\"\r\n                            name=\"exptMngmt\"\r\n                            onChange={changeexptMngmt}\r\n                            value={exptMngmt}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Weightages</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Weightages\"\r\n                            name=\"Weightages\"\r\n                            onChange={changeWeightages}\r\n                            value={Weightages}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>FY Target</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"FY Target\"\r\n                            name=\"fy_target\"\r\n                            onChange={changefy_target}\r\n                            value={fy_target}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>FY Actuals</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"FY Actuals\"\r\n                            name=\"fy_actuals\"\r\n                            onChange={changefy_actuals}\r\n                            value={fy_actuals}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Achievement Till date</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Achievement Till date\"\r\n                            name=\"achievement_till_date\"\r\n                            onChange={changechangeachievement_till_date}\r\n                            value={achievement_till_date}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btn-success  waves-effect\"\r\n                      onClick={() => OnSubmitUpdate(editId)}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Table;\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan04/busiPlayground.js",["1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054"],"import React, { useState, useEffect } from \"react\";\r\nimport Editor from \"../../components/SunEditor\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"suneditor/dist/css/suneditor.min.css\"; //Import Sun Editor's CSS File\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\n\r\nexport default function NaisthyaPrayaan(props) {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      Prayaan_Category: \"Prayaan Category\",\r\n      Prayaan_Steps: \"Prayaan Steps\",\r\n      Executor: \"Executor\",\r\n      Owner: \"Owner\",\r\n      Start_Date: \"Start Date\",\r\n      Date_of_Completion: \"Date of Completions\",\r\n    },\r\n  ]);\r\n  const [basisofplayground, setbasisofplayground] =\r\n    useState(\"Naishtya Statement\");\r\n  const [defineplayground, setdefineplayground] = useState(\r\n    \"Time Period and No of Vilakshan Units\"\r\n  );\r\n\r\n  let [busiPlaygrounds, setbusiPlaygrounds] = useState(\"\");\r\n  let [prayaanData, setPrayaanData] = useState(\"\");\r\n  let [Finalizationddl, setFinalizationddl] = useState(\"\");\r\n  let [Finalizationtext, setFinalizationtext] = useState(\"\");\r\n  let [drpdata, setdrpdata] = useState(\"\");\r\n\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n  const [Upid, setUpid] = useState(\"\");\r\n\r\n  const options = [\"We will be Volume Focused\", \"We will be Price Focused\"];\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, []);\r\n\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    // setShowData(false);\r\n    setviewModal(false);\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n  const OnSubmitForm = () => {\r\n    // alert(Finalizationtext+Finalizationddl);\r\n    if (busiPlaygrounds.length === 0) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        basisofplayground: basisofplayground,\r\n        defineplayground: defineplayground,\r\n        Finalizationddl: Finalizationddl,\r\n        Finalizationtext: Finalizationtext,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/busiPlayground2`,\r\n        requestOptionsrichtext\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Data Added succesfully\");\r\n            setMadd(true);\r\n            // setMadd(false);\r\n            setTimeout(() => {\r\n              setMadd(false);\r\n            }, 1000)\r\n            props.onvalidateTab1(true)\r\n\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        basisofplayground: basisofplayground,\r\n        defineplayground: defineplayground,\r\n        Finalizationddl: Finalizationddl,\r\n        Finalizationtext: Finalizationtext,\r\n        email_id: s_id,\r\n        updated_by: s_id\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/busiPlayground2/` + `${Upid}`,\r\n        requestOptionsrichtext\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(resData);\r\n            console.log(\"Data Added succesfully\");\r\n            setMupdate(true);\r\n            // setMupdate(false);\r\n            setTimeout(() => {\r\n              setMupdate(false);\r\n            }, 1000)\r\n            GetallRecords();\r\n            props.onvalidateTab1(true)\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n      GetallRecords();\r\n    }\r\n    if (inputList.length > 0) {\r\n      inputList.map((item, key) => {\r\n        let get_list = item;\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n          basisofplayground: basisofplayground,\r\n          defineplayground: defineplayground,\r\n          Finalizationtext: Finalizationtext,\r\n          Finalizationddl: Finalizationddl,\r\n          email_id: s_id,\r\n          created_by: s_id,\r\n        });\r\n        var requestOptions = {\r\n          method: \"PUT\",\r\n          headers: myHeaders,\r\n          body: raw,\r\n          redirect: \"follow\",\r\n        };\r\n        fetch(`http://localhost:9002/masters/busiPlayground2` + `${s_id}`, requestOptions)\r\n          .then((response) => response.json())\r\n          .then((resData) => {\r\n            console.log(resData);\r\n            if (resData.status == 200) {\r\n              if (inputList.length === key + 1) {\r\n                console.log(\"All Data Added succesfully\");\r\n                GetallRecords();\r\n                props.onvalidateTab1(true)\r\n\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => console.log(\"error\", error));\r\n      });\r\n    }\r\n  };\r\n\r\n  const ChangeFinalization = (event, value) => {\r\n    console.log(\"change the value\", value);\r\n    if (value == \"We will be Price Focused\") {\r\n      setFinalizationtext(\"We are into Customer Intimacy (CI) Model\");\r\n    }\r\n    if (value == \"We will be Volume Focused\") {\r\n      setFinalizationtext(\"We are into Operational Excellence (OE) Model\");\r\n    }\r\n    if (value == null) {\r\n      setFinalizationtext('')\r\n    }\r\n    setFinalizationddl(value);\r\n  };\r\n\r\n  const GetallRecords = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/busiPlayground2/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        let get_list = resData.data;\r\n        get_list.map((item, key) => {\r\n          console.log(item.basisofplayground, item.defineplayground);\r\n          setbasisofplayground(item.basisofplayground);\r\n          setdefineplayground(item.defineplayground);\r\n          setFinalizationtext(item.Finalizationtext);\r\n          setFinalizationddl(item.Finalizationddl)\r\n          // alert(item.Finalizationddl);\r\n          // setdefineplayground(item.defineplayground);\r\n          setUpid(resData.data[0].id);\r\n\r\n        });\r\n        setbusiPlaygrounds(resData.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/prayaan/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        setPrayaanData(resData.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      {busiPlaygrounds ? (\r\n        <div className=\"container-fluid\" style={{backgroundColor:\"#F3F6F9\"}}>\r\n          <div className=\"row clearfix\">\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n              <div className=\"card p-4 mt-2\">\r\n                <div className=\"body p-5\" >\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Basis of your Playground</strong>\r\n                      </h2>\r\n                      <div>\r\n                        <Editor\r\n                          contents={basisofplayground}\r\n                          getValue={(newContent) => {\r\n                            setbasisofplayground(newContent);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Define your Playground</strong>\r\n                      </h2>\r\n                      <div>\r\n                        <Editor\r\n                          contents={defineplayground}\r\n                          getValue={(newContent) => {\r\n                            setdefineplayground(newContent);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 20 }}></div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-6\">\r\n                      <Autocomplete\r\n                        id=\"controllable-states-demo\"\r\n                        defaultValue={props.keyValue}\r\n                        options={options}\r\n                        value={Finalizationddl}\r\n                        // onChange={}\r\n                        // style={{ width: 300 }}\r\n                        onChange={(event, value) => {\r\n                          ChangeFinalization(event, value);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                          <TextField {...params} variant=\"outlined\" />\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <TextField\r\n                        id=\"outlined-basic\"\r\n                        variant=\"outlined\"\r\n                        style={{ width: 500 }}\r\n                        value={Finalizationtext}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 20 }}></div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn savebtn  waves-effect\"\r\n                    onClick={OnSubmitForm}\r\n                  >\r\n                    SAVE <i className=\"ml-1 zmdi zmdi-save \" /> \r\n                  </button>\r\n                  {/* <div>\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary  waves-effect\"\r\n                      onClick={exportPDFWithMethod}\r\n                    >\r\n                      Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary  waves-effect\"\r\n                      onClick={ViewModel}\r\n                    >\r\n                      View  <i className=\"ml-1 zmdi zmdi-eye \" />                    </button>\r\n                  </div> */}\r\n                  <div style={{ marginTop: 20 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n\r\n      {/* For Pdf -----------------------> */}\r\n\r\n\r\n\r\n      {/* View Modal-----------------------> */}\r\n      <Modal\r\n        size=\"lg\"\r\n        show={viewModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div>\r\n                    <div id=\"divToPrint\" className=\"mt4\">\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <img\r\n                            src=\"../../assets/images/transaganization.png\"\r\n                            width=\"135\"\r\n                            alt=\"Transganization\"\r\n                          />\r\n                          <h1\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              marginTop: \"20px\",\r\n                            }}\r\n                          >\r\n                            Buiseness Model\r\n                          </h1>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"1px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"30px\",\r\n                            }}\r\n                          >\r\n                            Playground Buiseness Model\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            1) Basis of your Playground\r\n\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {basisofplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            2) Define your Playground\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {defineplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      {/* <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList.slice(0, 2)}\r\n                            >\r\n                              <Column\r\n                                field=\"customer_face\"\r\n                                title=\"List of Customer Face\"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n\r\n                      {/* <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList.slice(0, 2)}\r\n                            >\r\n                              <Column\r\n                                field=\"firstName\"\r\n                                title=\"List of Customer Face\"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan04/NonNegotiables.js",["1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128"],"import React, { useEffect, useState } from \"react\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport axios from 'axios';\r\n\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport ReactExport from \"react-data-export\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalSubmit from \"../../components/ModalSubmit\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Form() {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n\r\n  const ExcelFile = ReactExport.ExcelFile;\r\n  const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n  const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n  const pdfExportComponent = React.useRef(null);\r\n  let [non_negoData, setnon_negoData] = useState(\"\");\r\n  const [date, setdate] = useState();\r\n  const [Fdate, setFdate] = useState();\r\n\r\n  const [formData, setformData] = useState([]);\r\n  const [formValid, setformValid] = useState(false);\r\n  const [gross_margin, setgross_margin] = useState();\r\n  const [opportunity_size, setopportunity_size] = useState();\r\n  const [unit_pricing, setunit_pricing] = useState();\r\n  const [unit_margin, setunit_margin] = useState();\r\n  const [time_to_breakeven, settime_to_breakeven] = useState();\r\n  const [fixed_cost_investment, setfixed_cost_investment] = useState();\r\n  const [credit_terms, setcredit_terms] = useState();\r\n  const [npv, setnpv] = useState();\r\n  const [total, settotal] = useState();\r\n\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n\r\n\r\n  const [BeliverOTP, setBeliverOTP] = useState('');\r\n  const [transOTP, setTransOTP] = useState('');\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [secondsfortrans, setsecondsfortrans] = useState(0);\r\n  const [ShowResetOTP, setShowResetOTP] = useState(true);\r\n  const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\r\n  const [showConfirmBox, setshowConfirmBox] = useState(false);\r\n\r\n  const [basisofplayground, setbasisofplayground] =\r\n    useState(\"Naishtya Statement\");\r\n  const [defineplayground, setdefineplayground] = useState(\r\n    \"Time Period and No of Vilakshan Units\"\r\n  );\r\n  const [completeData, setcompleteData] = useState(\"\");\r\n\r\n  const [showHide, setshowHide] = useState(false);\r\n\r\n  const [belEmail, setbelEmail] = useState(\"\");\r\n  const [transEmail, settransEmail] = useState(\"\");\r\n  const [bypassEmail, setbypassEmail] = useState(\"\");\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n  const [varifiedValue, setvarifiedValue] = useState(\"\");\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [varval, setvarval] = useState(\"\");\r\n  const [EnteredBeliverOTP, setEnteredBeliverOTP] = useState('');\r\n  const [showWrongOtp, setshowWrongOtp] = useState(false);\r\n\r\n\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n  const [showData, setShowData] = useState(false);\r\n\r\n\r\n\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    // setShowData(false);\r\n    setviewModal(false);\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n\r\n\r\n  const gross_marginfn = (event) => {\r\n    setgross_margin(event.target.value);\r\n  };\r\n\r\n  const opportunity_sizefn = (event) => {\r\n    setopportunity_size(event.target.value);\r\n  };\r\n\r\n  const unit_marginfn = (event) => {\r\n    setunit_margin(event.target.value);\r\n  };\r\n\r\n  const time_to_breakevenfn = (event) => {\r\n    settime_to_breakeven(event.target.value);\r\n  };\r\n  const unit_pricingfn = (event) => {\r\n    setunit_pricing(event.target.value);\r\n\r\n  };\r\n\r\n  const fixed_cost_investmentfn = (event) => {\r\n    setfixed_cost_investment(event.target.value);\r\n  };\r\n\r\n  const credit_termsfn = (event) => {\r\n    setcredit_terms(event.target.value);\r\n  };\r\n\r\n  const npvfn = (event) => {\r\n    setnpv(event.target.value);\r\n  };\r\n\r\n  const [end_prod_quality, setend_prod_quality] = useState();\r\n  const [supplier_quality_standard, setsupplier_quality_standard] = useState();\r\n  const [customer_service, setcustomer_service] = useState();\r\n  const [channels, setchannels] = useState();\r\n  const [lead_time, setlead_time] = useState();\r\n  const [fixed_cost_investment2, setfixed_cost_investment2] = useState();\r\n  const [through_put, setthrough_put] = useState();\r\n  const [pricing, setpricing] = useState();\r\n  const [prod_dev_life_cycle, setprod_dev_life_cycle] = useState();\r\n  const [brand_parameter, setbrand_parameter] = useState();\r\n\r\n\r\n\r\n\r\n\r\n  // urja char states--->\r\n\r\n  const [TotalRevenue1, setTotalRevenue1] = useState(1000);\r\n  const [RevenueReadOnly1, setRevenueReadOnly1] = useState(\"%\");\r\n  const [DirectExpences1, setDirectExpences1] = useState(150);\r\n  const [DirectExpencesReadOnly1, setDirectExpencesReadOnly1] = useState(\"%\");\r\n  const [GrossProfit1, setGrossProfit1] = useState();\r\n  const [GrossProfitID1, setGrossProfitID1] = useState(\"%\");\r\n  const [IndirectExpences1, setIndirectExpences1] = useState(450);\r\n  const [IndirectExpencesID1, setIndirectExpencesID1] = useState(\"%\");\r\n  const [EBITDA1, setEBITDA1] = useState();\r\n  const [EBITDApercent1, setEBITDApercent1] = useState(\"0\");\r\n  const [EBITDA_ID1, setEBITDA_ID1] = useState(\"%\");\r\n\r\n\r\n\r\n  const [TotalRevenue2, setTotalRevenue2] = useState(1000);\r\n  const [RevenueReadOnly2, setRevenueReadOnly2] = useState(\"%\");\r\n  const [DirectExpences2, setDirectExpences2] = useState(150);\r\n  const [DirectExpencesReadOnly2, setDirectExpencesReadOnly2] = useState(\"%\");\r\n  const [GrossProfit2, setGrossProfit2] = useState();\r\n  const [GrossProfitID2, setGrossProfitID2] = useState(\"%\");\r\n  const [IndirectExpences2, setIndirectExpences2] = useState(450);\r\n  const [IndirectExpencesID2, setIndirectExpencesID2] = useState(\"%\");\r\n  const [EBITDA2, setEBITDA2] = useState();\r\n  const [EBITDApercent2, setEBITDApercent2] = useState(\"0\");\r\n  const [EBITDA_ID2, setEBITDA_ID2] = useState(\"%\");\r\n\r\n\r\n\r\n  const [TotalRevenue3, setTotalRevenue3] = useState(0);\r\n  const [RevenueReadOnly3, setRevenueReadOnly3] = useState(\"%\");\r\n  const [DirectExpences3, setDirectExpences3] = useState(0);\r\n  const [DirectExpencesReadOnly3, setDirectExpencesReadOnly3] = useState(\"%\");\r\n  const [GrossProfit3, setGrossProfit3] = useState(0);\r\n  const [GrossProfitID3, setGrossProfitID3] = useState(\"%\");\r\n  const [IndirectExpences3, setIndirectExpences3] = useState(0);\r\n  const [IndirectExpencesID3, setIndirectExpencesID3] = useState(\"%\");\r\n  const [EBITDA3, setEBITDA3] = useState(0);\r\n  const [EBITDApercent3, setEBITDApercent3] = useState(\"0\");\r\n  const [EBITDA_ID3, setEBITDA_ID3] = useState(\"%\");\r\n\r\n  const [TotalRevenue4, setTotalRevenue4] = useState(0);\r\n  const [RevenueReadOnly4, setRevenueReadOnly4] = useState(\"%\");\r\n  const [DirectExpences4, setDirectExpences4] = useState(0);\r\n  const [DirectExpencesReadOnly4, setDirectExpencesReadOnly4] = useState(\"%\");\r\n  const [GrossProfit4, setGrossProfit4] = useState(0);\r\n  const [GrossProfitID4, setGrossProfitID4] = useState(\"%\");\r\n  const [IndirectExpences4, setIndirectExpences4] = useState(0);\r\n  const [IndirectExpencesID4, setIndirectExpencesID4] = useState(\"%\");\r\n  const [EBITDA4, setEBITDA4] = useState(0);\r\n  const [EBITDApercent4, setEBITDApercent4] = useState(\"0\");\r\n  const [EBITDA_ID4, setEBITDA_ID4] = useState(\"%\");\r\n\r\n\r\n  const [TotalRevenue5, setTotalRevenue5] = useState(0);\r\n  const [RevenueReadOnly5, setRevenueReadOnly5] = useState(\"%\");\r\n  const [DirectExpences5, setDirectExpences5] = useState(0);\r\n  const [DirectExpencesReadOnly5, setDirectExpencesReadOnly5] = useState(\"%\");\r\n  const [GrossProfit5, setGrossProfit5] = useState(0);\r\n  const [GrossProfitID5, setGrossProfitID5] = useState(\"%\");\r\n  const [IndirectExpences5, setIndirectExpences5] = useState(0);\r\n  const [IndirectExpencesID5, setIndirectExpencesID5] = useState(\"%\");\r\n  const [EBITDA5, setEBITDA5] = useState(0);\r\n  const [EBITDApercent5, setEBITDApercent5] = useState(\"0\");\r\n  const [EBITDA_ID5, setEBITDA_ID5] = useState(\"%\");\r\n\r\n\r\n  const [TotalRevenue6, setTotalRevenue6] = useState(0);\r\n  const [RevenueReadOnly6, setRevenueReadOnly6] = useState(\"%\");\r\n  const [DirectExpences6, setDirectExpences6] = useState(0);\r\n  const [DirectExpencesReadOnly6, setDirectExpencesReadOnly6] = useState(\"%\");\r\n  const [GrossProfit6, setGrossProfit6] = useState(0);\r\n  const [GrossProfitID6, setGrossProfitID6] = useState(\"%\");\r\n  const [IndirectExpences6, setIndirectExpences6] = useState(0);\r\n  const [IndirectExpencesID6, setIndirectExpencesID6] = useState(\"%\");\r\n  const [EBITDA6, setEBITDA6] = useState(0);\r\n  const [EBITDApercent6, setEBITDApercent6] = useState(\"0\");\r\n  const [EBITDA_ID6, setEBITDA_ID6] = useState(\"%\");\r\n\r\n  const end_prod_qualityfn2 = (event) => {\r\n    setend_prod_quality(event.target.value);\r\n  };\r\n\r\n  const supplier_quality_standardfn2 = (event) => {\r\n    setsupplier_quality_standard(event.target.value);\r\n  };\r\n\r\n  const channelsfn = (event) => {\r\n    setchannels(event.target.value);\r\n  };\r\n\r\n  const lead_timefn = (event) => {\r\n    setlead_time(event.target.value);\r\n\r\n  };\r\n\r\n  const customer_servicefn = (event) => {\r\n    setcustomer_service(event.target.value);\r\n\r\n  };\r\n\r\n  const fixed_cost_investmentfn2 = (event) => {\r\n    setfixed_cost_investment2(event.target.value);\r\n  };\r\n\r\n  const through_putfn = (event) => {\r\n    setthrough_put(event.target.value);\r\n  };\r\n\r\n  const pricingfn = (event) => {\r\n    setpricing(event.target.value);\r\n  };\r\n\r\n  const prod_dev_life_cyclefn = (event) => {\r\n    setprod_dev_life_cycle(event.target.value);\r\n  };\r\n\r\n  const brand_parameterfn = (event) => {\r\n    setbrand_parameter(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, []);\r\n\r\n\r\n  const getRandomNum = (length) => {\r\n    var randomNum =\r\n      (Math.pow(10, length).toString().slice(length - 1) +\r\n        Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n    return randomNum;\r\n  }\r\n  const OnVerifyHandle = () => {\r\n    // alert(EnteredBeliverOTP);\r\n    GetallRecords()\r\n    if (BeliverOTP == EnteredBeliverOTP) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        verifiedVal: \"1\",\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/non_negotiable/verify/${s_id}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          // console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"updated\");\r\n            // setshowConfirmBox(true);\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n            GetallRecords()\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else if (BeliverOTP != EnteredBeliverOTP) {\r\n      setshowWrongOtp(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n      GetallRecords()\r\n    } else {\r\n      // setshowConfirmBox(true);\r\n      GetallRecords()\r\n\r\n      return false;\r\n    }\r\n\r\n    // setShowResetOTPTrans(true)\r\n    // setSeconds(0)\r\n    // setsecondsfortrans(60)\r\n  }\r\n  const ResendBeliverDataTrans = () => {\r\n    setShowResetOTPTrans(true)\r\n    setSeconds(0)\r\n    setsecondsfortrans(60)\r\n  }\r\n  const HandleInputChange = (event) => {\r\n    setEnteredBeliverOTP(event.target.value);\r\n  }\r\n  const HandleSubmit = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const ResendBeliverData = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const OnVerifyHandleConfirm = () => {\r\n    setShowResetOTPTrans(false)\r\n    setshowConfirmBox(true);\r\n  }\r\n  const HandleConfirmation = () => {\r\n    // setShowPdf(1)\r\n    setshowConfirmBox(false);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const OnSubmitForm = () => {\r\n    if (non_negoData.length === 0) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        gross_margin: gross_margin,\r\n        opportunity_size: opportunity_size,\r\n        unit_pricing: unit_pricing,\r\n        unit_margin: unit_margin,\r\n        time_to_breakeven: time_to_breakeven,\r\n        fixed_cost_investment: fixed_cost_investment,\r\n        credit_terms: credit_terms,\r\n        npv: npv,\r\n        end_prod_quality: end_prod_quality,\r\n        supplier_quality_standard: supplier_quality_standard,\r\n        customer_service: customer_service,\r\n        channels: channels,\r\n        lead_time: lead_time,\r\n        fixed_cost_investment2: fixed_cost_investment2,\r\n        through_put: through_put,\r\n        pricing: pricing,\r\n        prod_dev_life_cycle: prod_dev_life_cycle,\r\n        brand_parameter: brand_parameter,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/non_negotiable`,\r\n        requestOptionsrichtext\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Data Added succesfully\");\r\n            setMadd(true);\r\n            // setMadd(false);\r\n            setTimeout(() => {\r\n              setMadd(false);\r\n            }, 1000)\r\n\r\n          }\r\n          GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        gross_margin: gross_margin,\r\n        opportunity_size: opportunity_size,\r\n        unit_pricing: unit_pricing,\r\n        unit_margin: unit_margin,\r\n        time_to_breakeven: time_to_breakeven,\r\n        fixed_cost_investment: fixed_cost_investment,\r\n        credit_terms: credit_terms,\r\n        npv: npv,\r\n        end_prod_quality: end_prod_quality,\r\n        supplier_quality_standard: supplier_quality_standard,\r\n        customer_service: customer_service,\r\n        channels: channels,\r\n        lead_time: lead_time,\r\n        fixed_cost_investment2: fixed_cost_investment2,\r\n        through_put: through_put,\r\n        pricing: pricing,\r\n        prod_dev_life_cycle: prod_dev_life_cycle,\r\n        brand_parameter: brand_parameter,\r\n        email_id: s_id,\r\n        updated_by: s_id,\r\n      });\r\n      console.log(rawrich);\r\n      var requestOptionsrichtext = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/non_negotiable/` + `${Upid}`, requestOptionsrichtext)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Data Added succesfully\");\r\n            setMupdate(true);\r\n            // setMupdate(false);\r\n            setTimeout(() => {\r\n              setMupdate(false);\r\n            }, 1000)\r\n\r\n          }\r\n          GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  };\r\n\r\n  const GetallRecords = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (resData.data.id > 0) {\r\n          setbelEmail(resData.data.beliver_email);\r\n          settransEmail(resData.data.tranz_email);\r\n          setbypassEmail(resData.data.bypass_email);\r\n          setbeliverName(resData.data.beliver_name);\r\n\r\n        }\r\n      });\r\n\r\n    fetch(`http://localhost:9002/masters/non_negotiable/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        setvarifiedValue(resData.data[0].verified);\r\n        setUpid(resData.data[0].id);\r\n        ;\r\n\r\n        let get_list = resData.data;\r\n        get_list.map((item, key) => {\r\n          setgross_margin(item.gross_margin);\r\n          setopportunity_size(item.opportunity_size);\r\n          setunit_pricing(item.unit_pricing);\r\n          setunit_margin(item.unit_margin);\r\n          settime_to_breakeven(item.time_to_breakeven);\r\n          setfixed_cost_investment(item.fixed_cost_investment);\r\n          setcredit_terms(item.credit_terms);\r\n          setnpv(item.npv);\r\n          setend_prod_quality(item.end_prod_quality);\r\n          setsupplier_quality_standard(item.supplier_quality_standard);\r\n          setcustomer_service(item.customer_service);\r\n          setchannels(item.channels);\r\n          setlead_time(item.lead_time);\r\n          setfixed_cost_investment2(item.fixed_cost_investment2);\r\n          setthrough_put(item.through_put);\r\n          setpricing(item.pricing);\r\n          setprod_dev_life_cycle(item.prod_dev_life_cycle);\r\n          setbrand_parameter(item.brand_parameter);\r\n\r\n        });\r\n        setnon_negoData(resData.data);\r\n      })\r\n\r\n    fetch(`http://localhost:9002/masters/urjaChar/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        setcompleteData(resData.data);\r\n        setUpid(resData.data[0].id);\r\n\r\n        console.log(resData.data[0].TotalRevenue1);\r\n        // alert(resData.status)\r\n        console.log(resData);\r\n        setTotalRevenue1(resData.data[0].TotalRevenue1)\r\n        setDirectExpences1(resData.data[0].DirectExpences1)\r\n        setGrossProfit1(resData.data[0].GrossProfit1)\r\n        setIndirectExpences1(resData.data[0].IndirectExpences1)\r\n        setEBITDA1(resData.data[0].EBITDA1)\r\n        setEBITDApercent1(resData.data[0].EBITDApercent1)\r\n\r\n        setTotalRevenue2(resData.data[0].TotalRevenue2)\r\n        setDirectExpences2(resData.data[0].DirectExpences2)\r\n        setGrossProfit2(resData.data[0].GrossProfit2)\r\n        setIndirectExpences2(resData.data[0].IndirectExpences2)\r\n        setEBITDA2(resData.data[0].EBITDA2)\r\n        setEBITDApercent2(resData.data[0].EBITDApercent2)\r\n\r\n        setTotalRevenue3(resData.data[0].TotalRevenue3)\r\n        setDirectExpences3(resData.data[0].DirectExpences3)\r\n        setGrossProfit3(resData.data[0].GrossProfit3)\r\n        setIndirectExpences3(resData.data[0].IndirectExpences3)\r\n        setEBITDA3(resData.data[0].EBITDA3)\r\n        setEBITDApercent3(resData.data[0].EBITDApercent3)\r\n\r\n        setTotalRevenue4(resData.data[0].TotalRevenue4)\r\n        setDirectExpences4(resData.data[0].DirectExpences4)\r\n        setGrossProfit4(resData.data[0].GrossProfit4)\r\n        setIndirectExpences4(resData.data[0].IndirectExpences4)\r\n        setEBITDA4(resData.data[0].EBITDA4)\r\n        setEBITDApercent4(resData.data[0].EBITDApercent4)\r\n\r\n        setTotalRevenue5(resData.data[0].TotalRevenue5)\r\n        setDirectExpences5(resData.data[0].DirectExpences5)\r\n        setGrossProfit5(resData.data[0].GrossProfit5)\r\n        setIndirectExpences5(resData.data[0].IndirectExpences5)\r\n        setEBITDA5(resData.data[0].EBITDA5)\r\n        setEBITDApercent5(resData.data[0].EBITDApercent5)\r\n\r\n\r\n        setTotalRevenue6(resData.data[0].TotalRevenue6)\r\n        setDirectExpences6(resData.data[0].DirectExpences6)\r\n        setGrossProfit6(resData.data[0].GrossProfit6)\r\n        setIndirectExpences6(resData.data[0].IndirectExpences6)\r\n        setEBITDA6(resData.data[0].EBITDA6)\r\n        setEBITDApercent6(resData.data[0].EBITDApercent6)\r\n\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n          // alert(\"hhh\")\r\n          // alert(resData.status)\r\n\r\n          // alert(resData.data[0].TotalRevenue1)\r\n\r\n\r\n\r\n\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/busiPlayground2/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        let get_list = resData.data;\r\n        get_list.map((item, key) => {\r\n          console.log(item.basisofplayground, item.defineplayground);\r\n          setbasisofplayground(item.basisofplayground);\r\n          setdefineplayground(item.defineplayground);\r\n          // alert(item.Finalizationddl);\r\n          // setdefineplayground(item.defineplayground);\r\n\r\n        });\r\n        // setbusiPlaygrounds(resData.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const dataSet1 = [\r\n    {\r\n      parameters: \"Gross Margin\",\r\n      financials: gross_margin,\r\n    },\r\n    {\r\n      parameters: \"Opportunity Size\",\r\n      financials: opportunity_size,\r\n    },\r\n    {\r\n      parameters: \"Unit Pricing\",\r\n      financials: unit_pricing,\r\n    },\r\n    {\r\n      parameters: \"Unit Margin\",\r\n      financials: unit_margin,\r\n    },\r\n    {\r\n      parameters: \"Time to Breakeven\",\r\n      financials: time_to_breakeven,\r\n    },\r\n    {\r\n      parameters: \"Fixed Cost Investment\",\r\n      financials: fixed_cost_investment,\r\n    },\r\n    {\r\n      parameters: \"Credit Terms\",\r\n      financials: credit_terms,\r\n    },\r\n    {\r\n      parameters: \"NPV\",\r\n      financials: npv,\r\n    }\r\n  ]\r\n  const dataSet2 = [\r\n    {\r\n      parameters: \"End Product Quality\",\r\n      operational: end_prod_quality,\r\n    },\r\n    {\r\n      parameters: \"Supplier Quality Standard\",\r\n      operational: supplier_quality_standard,\r\n    },\r\n    {\r\n      parameters: \"Customer Service\",\r\n      operational: customer_service,\r\n    },\r\n    {\r\n      parameters: \"Channels\",\r\n      operational: channels,\r\n    },\r\n    {\r\n      parameters: \"Lead Time\",\r\n      operational: lead_time,\r\n    },\r\n    {\r\n      parameters: \"Fixed Cost Investment\",\r\n      operational: fixed_cost_investment2,\r\n    },\r\n    {\r\n      parameters: \"Through Put\",\r\n      operational: through_put,\r\n    },\r\n    {\r\n      parameters: \"Pricing\",\r\n      operational: pricing,\r\n    },\r\n    {\r\n      parameters: \"Product Development Life Cycle\",\r\n      operational: prod_dev_life_cycle,\r\n    },\r\n    {\r\n      parameters: \"Brand Parameters\",\r\n      operational: brand_parameter,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n\r\n      <ModalSubmit show={showHide} />\r\n\r\n      <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              {seconds == 60 && ShowResetOTP ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Believer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTP(false)\r\n                        setshowConfirmBox(false)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Believer OTP\" name=\"firstName\" value={BeliverOTP} />\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Beliver OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandle} >Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {secondsfortrans == 60 && ShowResetOTPTrans ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Transganizer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTPTrans(0)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Transganizer OTP\" name=\"firstName\" value={transOTP} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Transganizer OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={OnVerifyHandleConfirm}>Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>) : (null)}\r\n              {showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Confirmation </h4>\r\n                  Are You Sure You Want To Submit!!\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTP ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverData}>RESEND OTP For Beliver </button>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTPTrans && !showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={ResendBeliverDataTrans}>RESEND OTP For Transaganiser </button>\r\n                </div>\r\n              ) : (null)}\r\n              {showWrongOtp ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Wrong OTP </h4>\r\n                  You Have Entered Wrong OTP!!\r\n                  <div class=\"modal-footer\">\r\n                    {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button> */}\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      {/* {non_negoData ? ( */}\r\n      <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n        <div className=\"row clearfix\">\r\n          <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n            <div className=\"card p-4 mt-2\">\r\n              <div className=\"body p-5\" >\r\n                <form>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-6\">\r\n                      <h2>\r\n                        <strong>Parameters</strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <h2>\r\n                        <strong>Financials</strong>\r\n                      </h2>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Gross Margin</strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"gross_margin\"\r\n                        onChange={gross_marginfn}\r\n                        placeholder=\"Gross Margin\"\r\n                        value={gross_margin}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Opportunity Size</strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"opportunity_size\"\r\n                        onChange={opportunity_sizefn}\r\n                        placeholder=\"Opportunity Size\"\r\n                        value={opportunity_size}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Unit Pricing </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"unit_pricing\"\r\n                        name=\"unit_pricing\"\r\n                        onChange={unit_pricingfn}\r\n                        placeholder=\"Unit Pricing\"\r\n                        value={unit_pricing}\r\n\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Unit Margin </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"unit_margin\"\r\n                        onChange={unit_marginfn}\r\n                        placeholder=\"Unit Margin\"\r\n                        value={unit_margin}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Time to Breakeven</strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"time_to_breakeven\"\r\n                        onChange={time_to_breakevenfn}\r\n                        placeholder=\"Time To Breakevenfn\"\r\n                        value={time_to_breakeven}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Fixed Cost Investment </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"fixed_cost_investment\"\r\n                        onChange={fixed_cost_investmentfn}\r\n                        placeholder=\"Fixed Cost Investment\"\r\n                        value={fixed_cost_investment}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Credit Terms</strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"credit_terms\"\r\n                        onChange={credit_termsfn}\r\n                        placeholder=\"Credit Terms\"\r\n                        value={credit_terms}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>NPV </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"npv\"\r\n                        onChange={npvfn}\r\n                        placeholder=\"NPV\"\r\n                        value={npv}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div style={{ marginTop: 40 }}></div>\r\n              <div className=\"body\">\r\n                <form>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-6\">\r\n                      <h2>\r\n                        <strong>Parameters</strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <h2>\r\n                        <strong>Operational</strong>\r\n                      </h2>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>End Product Quality</strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"end_prod_quality\"\r\n                        onChange={end_prod_qualityfn2}\r\n                        placeholder=\"End Product Quality\"\r\n                        value={end_prod_quality}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Supplier Quality Standard </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"supplier_quality_standard\"\r\n                        onChange={supplier_quality_standardfn2}\r\n                        placeholder=\"Supplier Quality Standard\"\r\n                        value={supplier_quality_standard}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Customer Service </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"customer_service\"\r\n                        name=\"customer_service\"\r\n                        onChange={customer_servicefn}\r\n                        placeholder=\"Customer Service\"\r\n                        value={customer_service}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Channels </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"channels\"\r\n                        onChange={channelsfn}\r\n                        placeholder=\"Channels\"\r\n                        value={channels}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Lead Time</strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"lead_timefn\"\r\n                        onChange={lead_timefn}\r\n                        placeholder=\"Lead time\"\r\n                        value={lead_time}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Fixed Cost Investment </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"fixed_cost_investment\"\r\n                        onChange={fixed_cost_investmentfn2}\r\n                        placeholder=\"Fixed Cost Investment\"\r\n                        value={fixed_cost_investment2}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Through Put </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"through_put\"\r\n                        onChange={through_putfn}\r\n                        placeholder=\"Through Put\"\r\n                        value={through_put}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Pricing </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"pricing\"\r\n                        onChange={pricingfn}\r\n                        placeholder=\"Pricing\"\r\n                        value={pricing}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Product Development Life Cycle </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"prod_dev_life_cycle\"\r\n                        onChange={prod_dev_life_cyclefn}\r\n                        placeholder=\"Product Development Life Cycle\"\r\n                        value={prod_dev_life_cycle}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-6\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Brand Parameters </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"brand_parameter\"\r\n                        onChange={brand_parameterfn}\r\n                        placeholder=\"Brand Parameters\"\r\n                        value={brand_parameter}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={OnSubmitForm}\r\n                    class=\"btn savebtn btn-square waves-effect\"\r\n                  >\r\n                    SAVE <i className=\"ml-1 zmdi zmdi-save \" />\r\n                  </button>\r\n                  {non_negoData.length > 0 ? (\r\n                    <>\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"btn viewbtn waves-effect\"\r\n                        onClick={ViewModel}\r\n                      >\r\n                        View  <i className=\"ml-1 zmdi zmdi-eye \" />                      </button>\r\n\r\n                      <button type=\"button\" class=\"btn savebtn waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={HandleSubmit}>SUBMIT <i className=\"ml-1 zmdi zmdi-check \" /> </button>\r\n\r\n                      {/* <div> */}\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"btn downloadbtn waves-effect\"\r\n                        onClick={exportPDFWithMethod}\r\n                      >\r\n                        Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                      </button>\r\n                    </>\r\n                  ) : (null)}\r\n                  {/* </div> */}\r\n                </form>\r\n                {non_negoData.length > 0 ? (\r\n                  <div>\r\n\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: \"-3000px\",\r\n                        top: 0,\r\n                      }}>\r\n                      <PDFExport paperSize=\"A3\" margin=\"1cm\" ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`} forcePageBreak=\".page-break\">\r\n                        {/* playground business model */}\r\n                        <Modal.Header closeButton style={{ padding: \"10px\" }}>\r\n                          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                          </Modal.Title>\r\n\r\n                          <div className=\"col-md-12 row\" >\r\n                            <div className=\"col-md-6\">\r\n                              <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                            </div>\r\n                            <div className=\"col-md-6 pageHeading\" >\r\n                              Business Model\r\n                            </div>\r\n                          </div>\r\n\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                          {/* playground business model */}\r\n                          <div>\r\n                            <div id=\"divToPrint\" className=\"mt4 \">\r\n                              <div className=\"container-fluid pdfBody\">\r\n                                <div className=\"row clearfix\">\r\n                                  <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                    <div className=\"card\">\r\n\r\n                                      <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12\">\r\n                                          <div\r\n                                            className=\"pdfHeader\"\r\n                                          >\r\n                                            Playground Buiseness Model\r\n\r\n                                          </div>\r\n                                          <div\r\n                                            className=\"headText\"\r\n                                          >\r\n                                            1. Basis of your Playground\r\n\r\n\r\n                                          </div>\r\n                                          <div\r\n                                            className=\"dynamicContent\"\r\n                                          >\r\n                                            {basisofplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12\">\r\n                                          <div\r\n                                            className=\"headText\"\r\n                                          >\r\n                                            2) Define your Playground\r\n\r\n                                          </div>\r\n                                          <div\r\n                                            className=\"dynamicContent\"\r\n                                          >\r\n                                            {defineplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div style={{ marginTop: 30 }}></div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n\r\n                              <div>\r\n                                <div id=\"divToPrint\" className=\"mt4 \">\r\n                                  <div className=\"container-fluid pdfBody\">\r\n                                    <div className=\"row clearfix\">\r\n                                      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                        <div className=\"card\">\r\n\r\n                                          <div className=\"row clearfix\">\r\n                                            <div className=\"col-md-12\">\r\n                                              <div\r\n                                                className=\"pdfHeader\"\r\n                                              >\r\n                                                Playground Buiseness Model\r\n\r\n                                              </div>\r\n                                              <div\r\n                                                className=\"headText\"\r\n                                              >\r\n                                                1. Basis of your Playground\r\n\r\n\r\n                                              </div>\r\n                                              <div\r\n                                                className=\"dynamicContent\"\r\n                                              >\r\n                                                {basisofplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"row clearfix\">\r\n                                            <div className=\"col-md-12\">\r\n                                              <div\r\n                                                className=\"headText\"\r\n                                              >\r\n                                                2) Define your Playground\r\n\r\n                                              </div>\r\n                                              <div\r\n                                                className=\"dynamicContent\"\r\n                                              >\r\n                                                {defineplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n\r\n                                          <div style={{ marginTop: 30 }}></div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div className=\"container-fluid pdfBody\">\r\n                                    <div className=\"row clearfix\">\r\n                                      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                        <div className=\"card\">\r\n\r\n                                          <div className=\"row clearfix\">\r\n                                            <div className=\"col-md-12\">\r\n                                              <div\r\n                                                className=\"pdfHeader\"\r\n                                              >\r\n                                                Urja Charitra\r\n\r\n                                              </div>\r\n\r\n                                            </div>\r\n                                          </div>\r\n                                          <div style={{ pointerEvents: \"none\" }}>\r\n                                            <table class=\"table\">\r\n                                              <thead>\r\n                                                <tr>\r\n                                                  <th scope=\"col\">Particulars</th>\r\n                                                  <th scope=\"col\">FY {Fdate - 1}-{date}</th>\r\n                                                  <th scope=\"col\">FY {Fdate - 2}-{date - 1}</th>\r\n                                                  <th scope=\"col\">FY {Fdate - 3}-{date - 2}</th>\r\n                                                  <th scope=\"col\">FY {Fdate - 4}-{date - 3}</th>\r\n                                                  <th scope=\"col\">FY {Fdate - 5}-{date - 4}</th>\r\n                                                  <th scope=\"col\">FY {Fdate - 6}-{date - 5}</th>\r\n                                                </tr>\r\n                                              </thead>\r\n                                              <tbody>\r\n                                                <tr>\r\n                                                  <th scope=\"row\">Total Revenue</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={TotalRevenue1}\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={TotalRevenue2}\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={TotalRevenue3}\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={TotalRevenue4}\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={TotalRevenue5}\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={TotalRevenue6}\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\">Total Revenue (Growth / Degrowth %)</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={RevenueReadOnly1}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={RevenueReadOnly2}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={RevenueReadOnly3}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={RevenueReadOnly4}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={RevenueReadOnly5}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={RevenueReadOnly6}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\">Direct Expenses</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpences1}\r\n\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpences2}\r\n\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpences3}\r\n\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpences4}\r\n\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpences5}\r\n\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpences6}\r\n\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\" >Direct Expenses</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpencesReadOnly1}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpencesReadOnly2}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpencesReadOnly3}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpencesReadOnly4}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpencesReadOnly5}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={DirectExpencesReadOnly6}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\">Gross Profit</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfit1}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfit2}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfit3}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfit4}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfit5}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfit6}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\">Gross Profit ( Increase / Decrease)</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfitID1}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfitID2}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfitID3}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfitID4}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfitID5}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={GrossProfitID6}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\">Indirect Expenses</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpences1}\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpences2}\r\n\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpences3}\r\n\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpences4}\r\n\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpences5}\r\n\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpences6}\r\n\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\">Indirect Expenses (Increase / Decrease)</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpencesID1}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpencesID2}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpencesID3}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpencesID4}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpencesID5}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={IndirectExpencesID6}\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\">EBITDA</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA1}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA2}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA3}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA4}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA5}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA6}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\">EBITDA%</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDApercent1 + \"%\"}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDApercent2 + \"%\"}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDApercent3 + \"%\"}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDApercent4 + \"%\"}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDApercent5 + \"%\"}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDApercent6 + \"%\"}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n\r\n                                                <tr>\r\n                                                  <th scope=\"row\">EBITDA (Increase / Decrease)</th>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA_ID1}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA_ID2}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA_ID3}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA_ID4}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA_ID5}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                  <td><input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"0\"\r\n                                                    value={EBITDA_ID6}\r\n\r\n                                                    readOnly\r\n                                                  /></td>\r\n                                                </tr>\r\n\r\n                                              </tbody>\r\n                                            </table>\r\n                                          </div>\r\n\r\n                                          <div style={{ marginTop: 30 }}></div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div className=\"container-fluid pdfBody\">\r\n                                    <div className=\"row clearfix \">\r\n                                      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                        <div className=\"pdfHeader\">Non Negotiables </div>\r\n                                        <div class=\"table-responsive\" id=\"Table\">\r\n                                          <table class=\"table table-bordered\">\r\n                                            <thead>\r\n                                              <tr>\r\n                                                <th>Parameters</th>\r\n                                                <th>Financials</th>\r\n                                              </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                              <tr>\r\n                                                <td>Gross Margin</td>\r\n                                                <td>{non_negoData[0].gross_margin}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Opportunity Size</td>\r\n                                                <td>{non_negoData[0].opportunity_size}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Unit Pricing</td>\r\n                                                <td>{non_negoData[0].unit_pricing}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Unit Margin</td>\r\n                                                <td>{non_negoData[0].unit_margin}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Time to Breakeven</td>\r\n                                                <td>{non_negoData[0].time_to_breakeven}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Fixed Cost Investment</td>\r\n                                                <td>{non_negoData[0].fixed_cost_investment}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Credit Terms</td>\r\n                                                <td>{non_negoData[0].credit_terms}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>NPV</td>\r\n                                                <td>{non_negoData[0].npv}</td>\r\n                                              </tr>\r\n                                            </tbody>\r\n                                          </table>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row clearfix \" >\r\n                                      <div className=\"col-md-12\">\r\n                                        <div class=\"table-responsive\" id=\"Table\">\r\n                                          <table class=\"table table-bordered\">\r\n                                            <thead>\r\n                                              <tr>\r\n                                                <th>Parameters</th>\r\n                                                <th>Operational</th>\r\n                                              </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                              <tr>\r\n                                                <td>End product quality</td>\r\n                                                <td>{non_negoData[0].end_prod_quality}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Supplier Quality Standard</td>\r\n                                                <td>{non_negoData[0].supplier_quality_standard}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Customer Service</td>\r\n                                                <td>{non_negoData[0].customer_service}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Channels</td>\r\n                                                <td>{non_negoData[0].channels}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Lead time</td>\r\n                                                <td>{non_negoData[0].lead_time}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Fixed Cost Investment</td>\r\n                                                <td>{non_negoData[0].fixed_cost_investment2}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Through Put</td>\r\n                                                <td>{non_negoData[0].through_put}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Pricing</td>\r\n                                                <td>{non_negoData[0].pricing}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Product development life cycle</td>\r\n                                                <td>{non_negoData[0].prod_dev_life_cycle}</td>\r\n                                              </tr>\r\n                                              <tr>\r\n                                                <td>Brand Parameters</td>\r\n                                                <td>{non_negoData[0].brand_parameter}</td>\r\n                                              </tr>\r\n                                            </tbody>\r\n                                          </table>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"container-fluid pdfBody\">\r\n                                <div className=\"row clearfix \">\r\n                                  <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                    <div className=\"pdfHeader\">Non Negotiables </div>\r\n                                    <div class=\"table-responsive\" id=\"Table\">\r\n                                      <table class=\"table table-bordered\">\r\n                                        <thead>\r\n                                          <tr>\r\n                                            <th>Parameters</th>\r\n                                            <th>Financials</th>\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          <tr>\r\n                                            <td>Gross Margin</td>\r\n                                            <td>{non_negoData[0].gross_margin}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Opportunity Size</td>\r\n                                            <td>{non_negoData[0].opportunity_size}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Unit Pricing</td>\r\n                                            <td>{non_negoData[0].unit_pricing}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Unit Margin</td>\r\n                                            <td>{non_negoData[0].unit_margin}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Time to Breakeven</td>\r\n                                            <td>{non_negoData[0].time_to_breakeven}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Fixed Cost Investment</td>\r\n                                            <td>{non_negoData[0].fixed_cost_investment}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Credit Terms</td>\r\n                                            <td>{non_negoData[0].credit_terms}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>NPV</td>\r\n                                            <td>{non_negoData[0].npv}</td>\r\n                                          </tr>\r\n                                        </tbody>\r\n                                      </table>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"row clearfix \" >\r\n                                  <div className=\"col-md-12\">\r\n                                    <div class=\"table-responsive\" id=\"Table\">\r\n                                      <table class=\"table table-bordered\">\r\n                                        <thead>\r\n                                          <tr>\r\n                                            <th>Parameters</th>\r\n                                            <th>Operational</th>\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          <tr>\r\n                                            <td>End product quality</td>\r\n                                            <td>{non_negoData[0].end_prod_quality}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Supplier Quality Standard</td>\r\n                                            <td>{non_negoData[0].supplier_quality_standard}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Customer Service</td>\r\n                                            <td>{non_negoData[0].customer_service}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Channels</td>\r\n                                            <td>{non_negoData[0].channels}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Lead time</td>\r\n                                            <td>{non_negoData[0].lead_time}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Fixed Cost Investment</td>\r\n                                            <td>{non_negoData[0].fixed_cost_investment2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Through Put</td>\r\n                                            <td>{non_negoData[0].through_put}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Pricing</td>\r\n                                            <td>{non_negoData[0].pricing}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Product development life cycle</td>\r\n                                            <td>{non_negoData[0].prod_dev_life_cycle}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Brand Parameters</td>\r\n                                            <td>{non_negoData[0].brand_parameter}</td>\r\n                                          </tr>\r\n                                        </tbody>\r\n                                      </table>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                            </div>\r\n                          </div>\r\n                        </Modal.Body>\r\n                      </PDFExport>\r\n\r\n                      {/* View Modal-----------------------> */}\r\n                      <Modal\r\n                        size=\"lg\"\r\n                        show={viewModal}\r\n                        onHide={handleClose}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                      >\r\n                        <Modal.Header closeButton style={{ padding: \"10px\" }}>\r\n                          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                          </Modal.Title>\r\n\r\n                          <div className=\"col-md-12 row\" >\r\n                            <div className=\"col-md-6\">\r\n                              <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                            </div>\r\n                            <div className=\"col-md-6 pageHeading\" >\r\n                              Business Model\r\n                            </div>\r\n                          </div>\r\n\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                          {/* playground business model */}\r\n                          <div>\r\n                            <div id=\"divToPrint\" className=\"mt4 \">\r\n                              <div className=\"container-fluid pdfBody\">\r\n                                <div className=\"row clearfix\">\r\n                                  <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                    <div className=\"card\">\r\n\r\n                                      <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12\">\r\n                                          <div\r\n                                            className=\"pdfHeader\"\r\n                                          >\r\n                                            Playground Buiseness Model\r\n\r\n                                          </div>\r\n                                          <div\r\n                                            className=\"headText\"\r\n                                          >\r\n                                            1. Basis of your Playground\r\n\r\n\r\n                                          </div>\r\n                                          <div\r\n                                            className=\"dynamicContent\"\r\n                                          >\r\n                                            {basisofplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12\">\r\n                                          <div\r\n                                            className=\"headText\"\r\n                                          >\r\n                                            2) Define your Playground\r\n\r\n                                          </div>\r\n                                          <div\r\n                                            className=\"dynamicContent\"\r\n                                          >\r\n                                            {defineplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div style={{ marginTop: 30 }}></div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"container-fluid pdfBody\">\r\n                                <div className=\"row clearfix\">\r\n                                  <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                    <div className=\"card\">\r\n\r\n                                      <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12\">\r\n                                          <div\r\n                                            className=\"pdfHeader\"\r\n                                          >\r\n                                            Urja Charitra\r\n\r\n                                          </div>\r\n\r\n                                        </div>\r\n                                      </div>\r\n                                      <div style={{ pointerEvents: \"none\" }}>\r\n                                        <table class=\"table\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th scope=\"col\">Particulars</th>\r\n                                              <th scope=\"col\">FY {Fdate - 1}-{date}</th>\r\n                                              <th scope=\"col\">FY {Fdate - 2}-{date - 1}</th>\r\n                                              <th scope=\"col\">FY {Fdate - 3}-{date - 2}</th>\r\n                                              <th scope=\"col\">FY {Fdate - 4}-{date - 3}</th>\r\n                                              <th scope=\"col\">FY {Fdate - 5}-{date - 4}</th>\r\n                                              <th scope=\"col\">FY {Fdate - 6}-{date - 5}</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                            <tr>\r\n                                              <th scope=\"row\">Total Revenue</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={TotalRevenue1}\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={TotalRevenue2}\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={TotalRevenue3}\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={TotalRevenue4}\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={TotalRevenue5}\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={TotalRevenue6}\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\">Total Revenue (Growth / Degrowth %)</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={RevenueReadOnly1}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={RevenueReadOnly2}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={RevenueReadOnly3}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={RevenueReadOnly4}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={RevenueReadOnly5}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={RevenueReadOnly6}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\">Direct Expenses</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpences1}\r\n\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpences2}\r\n\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpences3}\r\n\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpences4}\r\n\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpences5}\r\n\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpences6}\r\n\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\" >Direct Expenses</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpencesReadOnly1}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpencesReadOnly2}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpencesReadOnly3}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpencesReadOnly4}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpencesReadOnly5}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={DirectExpencesReadOnly6}\r\n                                                readOnly\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\">Gross Profit</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfit1}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfit2}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfit3}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfit4}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfit5}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfit6}\r\n                                                readOnly\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\">Gross Profit ( Increase / Decrease)</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfitID1}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfitID2}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfitID3}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfitID4}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfitID5}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={GrossProfitID6}\r\n                                                readOnly\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\">Indirect Expenses</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpences1}\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpences2}\r\n\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpences3}\r\n\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpences4}\r\n\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpences5}\r\n\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpences6}\r\n\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\">Indirect Expenses (Increase / Decrease)</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpencesID1}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpencesID2}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpencesID3}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpencesID4}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpencesID5}\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={IndirectExpencesID6}\r\n                                                readOnly\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\">EBITDA</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA1}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA2}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA3}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA4}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA5}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA6}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\">EBITDA%</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDApercent1 + \"%\"}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDApercent2 + \"%\"}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDApercent3 + \"%\"}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDApercent4 + \"%\"}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDApercent5 + \"%\"}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDApercent6 + \"%\"}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n\r\n                                            <tr>\r\n                                              <th scope=\"row\">EBITDA (Increase / Decrease)</th>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA_ID1}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA_ID2}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA_ID3}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA_ID4}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA_ID5}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                              <td><input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"0\"\r\n                                                value={EBITDA_ID6}\r\n\r\n                                                readOnly\r\n                                              /></td>\r\n                                            </tr>\r\n\r\n                                          </tbody>\r\n                                        </table>\r\n                                      </div>\r\n\r\n                                      <div style={{ marginTop: 30 }}></div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"container-fluid pdfBody\">\r\n                                <div className=\"row clearfix \">\r\n                                  <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                    <div className=\"pdfHeader\">Non Negotiables </div>\r\n                                    <div class=\"table-responsive\" id=\"Table\">\r\n                                      <table class=\"table table-bordered\">\r\n                                        <thead>\r\n                                          <tr>\r\n                                            <th>Parameters</th>\r\n                                            <th>Financials</th>\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          <tr>\r\n                                            <td>Gross Margin</td>\r\n                                            <td>{non_negoData[0].gross_margin}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Opportunity Size</td>\r\n                                            <td>{non_negoData[0].opportunity_size}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Unit Pricing</td>\r\n                                            <td>{non_negoData[0].unit_pricing}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Unit Margin</td>\r\n                                            <td>{non_negoData[0].unit_margin}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Time to Breakeven</td>\r\n                                            <td>{non_negoData[0].time_to_breakeven}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Fixed Cost Investment</td>\r\n                                            <td>{non_negoData[0].fixed_cost_investment}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Credit Terms</td>\r\n                                            <td>{non_negoData[0].credit_terms}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>NPV</td>\r\n                                            <td>{non_negoData[0].npv}</td>\r\n                                          </tr>\r\n                                        </tbody>\r\n                                      </table>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"row clearfix \" >\r\n                                  <div className=\"col-md-12\">\r\n                                    <div class=\"table-responsive\" id=\"Table\">\r\n                                      <table class=\"table table-bordered\">\r\n                                        <thead>\r\n                                          <tr>\r\n                                            <th>Parameters</th>\r\n                                            <th>Operational</th>\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          <tr>\r\n                                            <td>End product quality</td>\r\n                                            <td>{non_negoData[0].end_prod_quality}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Supplier Quality Standard</td>\r\n                                            <td>{non_negoData[0].supplier_quality_standard}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Customer Service</td>\r\n                                            <td>{non_negoData[0].customer_service}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Channels</td>\r\n                                            <td>{non_negoData[0].channels}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Lead time</td>\r\n                                            <td>{non_negoData[0].lead_time}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Fixed Cost Investment</td>\r\n                                            <td>{non_negoData[0].fixed_cost_investment2}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Through Put</td>\r\n                                            <td>{non_negoData[0].through_put}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Pricing</td>\r\n                                            <td>{non_negoData[0].pricing}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Product development life cycle</td>\r\n                                            <td>{non_negoData[0].prod_dev_life_cycle}</td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td>Brand Parameters</td>\r\n                                            <td>{non_negoData[0].brand_parameter}</td>\r\n                                          </tr>\r\n                                        </tbody>\r\n                                      </table>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                            </div>\r\n                          </div>\r\n                        </Modal.Body>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                ) : (null)\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* ) : null} */}\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan05/vilakshan.js",["1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport axios from 'axios';\r\nimport ModalSubmit from \"../../components/ModalSubmit\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Vilakshan(props) {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n  let rows = [];\r\n  const [parameter, setParameter] = useState(\"\");\r\n  const [non_finacial, setNon_finacial] = useState(0);\r\n  const [objective, setObjective] = useState(0);\r\n  const [measurable, setMeasurable] = useState(0);\r\n  const [volume_growth, setVolume_growth] = useState(0);\r\n  const [value_growth, setValue_growth] = useState(0);\r\n  const [near_far, setNear_far] = useState(0);\r\n  const [operational_excellence, setOperational_excellence] = useState(\"\");\r\n  const [customer_intimacy, setCustomer_intimacy] = useState(\"\");\r\n\r\n  const [editId, seteditId] = useState(\"\");\r\n  const [delId, setdelId] = useState(\"\");\r\n\r\n  const [parameterEdit, setParameterEdit] = useState(\"\");\r\n  const [non_finacialEdit, setNon_finacialEdit] = useState(0);\r\n  const [objectiveEdit, setObjectiveEdit] = useState(0);\r\n  const [measurableEdit, setMeasurableEdit] = useState(0);\r\n  const [volume_growthEdit, setVolume_growthEdit] = useState(0);\r\n  const [value_growthEdit, setValue_growthEdit] = useState(0);\r\n  const [near_farEdit, setNear_farEdit] = useState(0);\r\n  const [operational_excellenceEdit, setOperational_excellenceEdit] =\r\n    useState(\"\");\r\n  const [customer_intimacyEdit, setCustomer_intimacyEdit] = useState(\"\");\r\n  const [smShow, setSmShow] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n\r\n  const [vilakshanData, setVilakshanData] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [editModal, seteditModal] = useState(false);\r\n\r\n\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n\r\n  const [checksVal, setchecksVal] = useState(false);\r\n  const [chks, setchks] = useState();\r\n  const [chks2, setchks2] = useState(false);\r\n\r\n\r\n  const [BeliverOTP, setBeliverOTP] = useState('');\r\n  const [transOTP, setTransOTP] = useState('');\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [secondsfortrans, setsecondsfortrans] = useState(0);\r\n  const [ShowResetOTP, setShowResetOTP] = useState(true);\r\n  const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\r\n  const [showConfirmBox, setshowConfirmBox] = useState(false);\r\n\r\n  const [showHide, setshowHide] = useState(false);\r\n  const [belEmail, setbelEmail] = useState(\"\");\r\n  const [transEmail, settransEmail] = useState(\"\");\r\n  const [bypassEmail, setbypassEmail] = useState(\"\");\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n  const [varifiedValue, setvarifiedValue] = useState(\"\");\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [varval, setvarval] = useState(\"\");\r\n  const [EnteredBeliverOTP, setEnteredBeliverOTP] = useState('');\r\n  const [showWrongOtp, setshowWrongOtp] = useState(false);\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n\r\n  const yesFn = (checkVal, uid) => {\r\n    // alert(uid);\r\n    if (checkVal == \"false\") {\r\n      var checkVal = \"true\";\r\n      // alert(checkVal);\r\n    } else if (checkVal == \"true\") {\r\n      var checkVal = \"false\";\r\n      // alert(checkVal);\r\n    } else {\r\n      var checkVal = \"true\";\r\n      // alert(checkVal);\r\n    }\r\n\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      checkVal: checkVal,\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/vilakshan/checked/${uid}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"updated\");\r\n          // setMupdate(true);\r\n          // setTimeout(() => {\r\n          //   setMupdate(false);\r\n          // }, 1000)\r\n          // GetallRecords();\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    setShow(false);\r\n    seteditModal(false);\r\n    GetallRecords();\r\n\r\n\r\n\r\n  };\r\n\r\n  const noFn = () => {\r\n    // alert(checksVal);\r\n\r\n    // setchks2(\"1\");\r\n    // setchks(false);\r\n    // setchks2(true);\r\n\r\n    // setchks(\"\")\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    seteditModal(false);\r\n    setviewModal(false);\r\n\r\n  };\r\n\r\n\r\n  const deleteConfirm = () => {\r\n    // alert(delId);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"delete\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/vilakshan/${delId}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // seteditId(resData.data[0].id);\r\n        console.log(\"deleted\");\r\n        setMdelete(true);\r\n        // setMdelete(false);\r\n        setTimeout(() => {\r\n          setMdelete(false);\r\n        }, 1000)\r\n\r\n        setShow(false);\r\n        GetallRecords();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  // const handleShow = () => setShow(true);\r\n\r\n  const OnSubmitUpdate = (edId) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      parameter: parameterEdit,\r\n      non_finacial: non_finacialEdit,\r\n      objective: objectiveEdit,\r\n      measurable: measurableEdit,\r\n      volume_growth: volume_growthEdit,\r\n      value_growth: value_growthEdit,\r\n      near_far: near_farEdit,\r\n      operational_excellence: operational_excellenceEdit,\r\n      customer_intimacy: customer_intimacyEdit,\r\n\r\n      email_id: s_id,\r\n      created_by: s_id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/vilakshan/${edId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"updated\");\r\n          // alert(\"ds\")\r\n          setMupdate(true);\r\n          // setMupdate(false);\r\n          setTimeout(() => {\r\n            setMupdate(false);\r\n          }, 1000)\r\n          GetallRecords();\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    setShow(false);\r\n    seteditModal(false);\r\n  };\r\n  const editfn = (edit_id) => {\r\n    seteditModal(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/vilakshan/${edit_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        seteditId(resData.data[0].id);\r\n        setParameterEdit(resData.data[0].parameter);\r\n        setNon_finacialEdit(resData.data[0].non_finacial);\r\n        setObjectiveEdit(resData.data[0].objective);\r\n        setMeasurableEdit(resData.data[0].measurable);\r\n        setVolume_growthEdit(resData.data[0].volume_growth);\r\n        setValue_growthEdit(resData.data[0].value_growth);\r\n        setNear_farEdit(resData.data[0].near_far);\r\n        setOperational_excellenceEdit(resData.data[0].operational_excellence);\r\n        setCustomer_intimacyEdit(resData.data[0].customer_intimacy);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  const deletefn = (edit_id) => {\r\n    setdelId(edit_id);\r\n    setShow(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    var s_id = localStorage.getItem('tr_id')\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, []);\r\n\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n\r\n  const GetallRecords = () => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        if (resData.data.id > 0) {\r\n          setbelEmail(resData.data.beliver_email);\r\n          settransEmail(resData.data.tranz_email);\r\n          setbypassEmail(resData.data.bypass_email);\r\n          setbeliverName(resData.data.beliver_name);\r\n\r\n        }\r\n\r\n      });\r\n\r\n\r\n\r\n    fetch(`http://localhost:9002/masters/vilakshan/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        setVilakshanData(resData.data);\r\n        setvarifiedValue(resData.data[0].verified);\r\n        setUpid(resData.data[0].id);\r\n\r\n      })\r\n\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n  };\r\n  const initialValues = {\r\n    parameter: \"\",\r\n    non_finacial: 0,\r\n    objective: 0,\r\n    measurable: 0,\r\n    volume_growth: 0,\r\n    value_growth: 0,\r\n    near_far: 0,\r\n    operational_excellence: \"\",\r\n    customer_intimacy: \"\",\r\n  };\r\n  const validate = Yup.object({\r\n    parameter: Yup.string().required(\"Required\"),\r\n    operational_excellence: Yup.string().required(\"Required\"),\r\n    customer_intimacy: Yup.string().required(\"Required\"),\r\n  });\r\n  const OnSubmitForm = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var rawrich = JSON.stringify({\r\n      parameter: parameter,\r\n      non_finacial: non_finacial,\r\n      objective: objective,\r\n      measurable: measurable,\r\n      volume_growth: volume_growth,\r\n      value_growth: value_growth,\r\n      near_far: near_far,\r\n      operational_excellence: operational_excellence,\r\n      customer_intimacy: customer_intimacy,\r\n      checksVal: checksVal,\r\n      email_id: s_id,\r\n      created_by: s_id\r\n    });\r\n    var requestOptionsrichtext = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: rawrich,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/vilakshan`, requestOptionsrichtext)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.status == 200) {\r\n          console.log(\"Data Added succesfully\");\r\n          // return <Noti />\r\n          setSmShow(true);\r\n          // setSmShow(false);\r\n          setTimeout(() => {\r\n            setSmShow(false);\r\n          }, 1000)\r\n        }\r\n        GetallRecords();\r\n        seteditModal(false);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n\r\n  const getRandomNum = (length) => {\r\n    var randomNum =\r\n      (Math.pow(10, length).toString().slice(length - 1) +\r\n        Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n    return randomNum;\r\n  }\r\n  const OnVerifyHandle = () => {\r\n    // alert(EnteredBeliverOTP);\r\n    GetallRecords()\r\n\r\n    if (BeliverOTP == EnteredBeliverOTP) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        verifiedVal: \"1\",\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/vilakshan/verify/${Upid}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          // console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"updated\");\r\n            // setshowConfirmBox(true);\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n            GetallRecords()\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else if (BeliverOTP != EnteredBeliverOTP) {\r\n      setshowWrongOtp(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n      GetallRecords()\r\n    } else {\r\n      // setshowConfirmBox(true);\r\n      GetallRecords()\r\n\r\n      return false;\r\n    }\r\n\r\n    // setShowResetOTPTrans(true)\r\n    // setSeconds(0)\r\n    // setsecondsfortrans(60)\r\n  }\r\n  const ResendBeliverDataTrans = () => {\r\n    setShowResetOTPTrans(true)\r\n    setSeconds(0)\r\n    setsecondsfortrans(60)\r\n  }\r\n  const HandleInputChange = (event) => {\r\n    setEnteredBeliverOTP(event.target.value);\r\n  }\r\n  const HandleSubmit = () => {\r\n    // alert(varifiedValue)\r\n    GetallRecords()\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const ResendBeliverData = () => {\r\n    // alert(varifiedValue)\r\n    if (varifiedValue == 1) {\r\n      setshowConfirmBox(true);\r\n      setShowResetOTP(true);\r\n      setBeliverOTP(0)\r\n      setTransOTP(0)\r\n      setSeconds(0)\r\n    } else {\r\n      const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n      const sid = \"transganization2\"\r\n      const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n      const from = \"9850674452\"\r\n      const to = \"8767984910\"\r\n      const body = \"Good Evening\"\r\n      var formdata = new FormData();\r\n      formdata.append('From', from)\r\n      formdata.append('To', to)\r\n      formdata.append('Body', body)\r\n      const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n      axios.post(url,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Accept\": \"application/x-www-form-urlencoded\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          },\r\n          data: formdata\r\n        },\r\n      )\r\n        .then((res) => {\r\n          console.log(`statusCode: ${res.statusCode}`)\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n      setshowHide(true);\r\n      setTimeout(() => {\r\n        setshowHide(false);\r\n      }, 1000)\r\n\r\n      setShowResetOTP(true);\r\n      const beliver = getRandomNum(6);\r\n      setBeliverOTP(beliver)\r\n      const trans = getRandomNum(6);\r\n      setTransOTP(trans)\r\n      setSeconds(60)\r\n\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        otp: beliver,\r\n        belEmail: belEmail,\r\n        transEmail: transEmail,\r\n        bypassEmail: bypassEmail\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/beliverConceptsSend`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Check\");\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n  const OnVerifyHandleConfirm = () => {\r\n    setShowResetOTPTrans(false)\r\n    setshowConfirmBox(true);\r\n  }\r\n  const HandleConfirmation = () => {\r\n    // setShowPdf(1)\r\n    setshowConfirmBox(false);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <ModalSubmit show={showHide} />\r\n      <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              {seconds == 60 && ShowResetOTP ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Believer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTP(false)\r\n                        setshowConfirmBox(false)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Believer OTP\" name=\"firstName\" value={BeliverOTP} />\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Beliver OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandle} >Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {secondsfortrans == 60 && ShowResetOTPTrans ? (\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-6\">\r\n                    <h4 class=\"title\" id=\"largeModalLabel\">Verification For Transganizer</h4>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <CountdownCircleTimer\r\n                      isPlaying\r\n                      duration={60}\r\n                      onComplete={() => {\r\n                        setShowResetOTPTrans(0)\r\n                      }}\r\n                      size={90}\r\n                      colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                      ]}\r\n                    >\r\n                      {({ remainingTime }) => remainingTime}\r\n                    </CountdownCircleTimer>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Transganizer OTP\" name=\"firstName\" value={transOTP} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Transganizer OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={OnVerifyHandleConfirm}>Verify </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                  </div>\r\n                </div>) : (null)}\r\n              {showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Confirmation </h4>\r\n                  Are You Sure You Want To Submit!!\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button>\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTP ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverData}>RESEND OTP For Beliver </button>\r\n                </div>\r\n              ) : (null)}\r\n              {!ShowResetOTPTrans && !showConfirmBox ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                  </h4>\r\n                  <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={ResendBeliverDataTrans}>RESEND OTP For Transaganiser </button>\r\n                </div>\r\n              ) : (null)}\r\n              {showWrongOtp ? (\r\n                <div>\r\n                  <h4 class=\"title\" id=\"largeModalLabel\">Wrong OTP </h4>\r\n                  You Have Entered Wrong OTP!!\r\n                  <div class=\"modal-footer\">\r\n                    {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button> */}\r\n                    <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              ) : (null)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={smShow}\r\n        onHide={() => setSmShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Updated Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Are You Sure You Want To Delete!</Modal.Title>\r\n        </Modal.Header>\r\n        {/* <Modal.Body>Are You Sure You Want To Delete!</Modal.Body> */}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Cance\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirm}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* For Edit */}\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={editModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Edit Vilakshan\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"body\">\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>List of Paramenters</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"List of Paramenters\"\r\n                            name=\"parameter\"\r\n                            onChange={(event) => {\r\n                              setParameterEdit(event.target.value);\r\n                            }}\r\n                            value={parameterEdit}\r\n                          />\r\n                          {/* {formik.errors.parameter ? <div className='error'>{formik.errors.parameter}</div> : null} */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Non Financial</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            class=\"form-control show-tick\"\r\n                            as=\"select\"\r\n                            name=\"non_finacial\"\r\n                            onChange={(event) => {\r\n                              setNon_finacialEdit(event.target.value);\r\n                            }}\r\n                            value={non_finacialEdit}\r\n                          >\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Objective</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            class=\"form-control show-tick\"\r\n                            as=\"select\"\r\n                            name=\"objective\"\r\n                            onChange={(event) => {\r\n                              setObjectiveEdit(event.target.value);\r\n                            }}\r\n                            value={objectiveEdit}\r\n                          >\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Measurable</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            class=\"form-control show-tick\"\r\n                            as=\"select\"\r\n                            name=\"measurable\"\r\n                            onChange={(event) => {\r\n                              setMeasurableEdit(event.target.value);\r\n                            }}\r\n                            value={measurableEdit}\r\n                          >\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Volume Growth</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            class=\"form-control show-tick\"\r\n                            as=\"select\"\r\n                            name=\"volume_growth\"\r\n                            onChange={(event) => {\r\n                              setVolume_growthEdit(event.target.value);\r\n                            }}\r\n                            value={volume_growthEdit}\r\n                          >\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Value Growth</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            class=\"form-control show-tick\"\r\n                            as=\"select\"\r\n                            name=\"value_growth\"\r\n                            onChange={(event) => {\r\n                              setValue_growthEdit(event.target.value);\r\n                            }}\r\n                            value={value_growthEdit}\r\n                          >\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Near/Far to PCB</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            class=\"form-control show-tick\"\r\n                            as=\"select\"\r\n                            name=\"near_far\"\r\n                            onChange={(event) => {\r\n                              setNear_farEdit(event.target.value);\r\n                            }}\r\n                            value={near_farEdit}\r\n                          >\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>OPERATIONAL EXCELLENCE</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"OPERATIONAL EXCELLENCE\"\r\n                            name=\"operational_excellence\"\r\n                            onChange={(event) => {\r\n                              setOperational_excellenceEdit(event.target.value);\r\n                            }}\r\n                            value={operational_excellenceEdit}\r\n                          />\r\n                          {/* {formik.errors.operational_excellence ? <div className='error'>{formik.errors.operational_excellence}</div> : null} */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>CUSTOMER INTIMACY</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"CUSTOMER INTIMACY\"\r\n                            name=\"customer_intimacy\"\r\n                            onChange={(event) => {\r\n                              setCustomer_intimacyEdit(event.target.value);\r\n                            }}\r\n                            value={customer_intimacyEdit}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn savebtn  waves-effect\"\r\n                      onClick={() => OnSubmitUpdate(editId)}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n        <div className=\"row clearfix\">\r\n          <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n            <div className=\"card p-4 mt-2\">\r\n              <div className=\"body p-5\">\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>List of Paramenters</strong>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"List of Paramenters\"\r\n                        name=\"parameter\"\r\n                        onChange={(event) => {\r\n                          setParameter(event.target.value);\r\n                        }}\r\n                        value={parameter}\r\n                      />\r\n                      {/* {formik.errors.parameter ? <div className='error'>{formik.errors.parameter}</div> : null} */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>Non Financial</strong>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        class=\"form-control show-tick\"\r\n                        as=\"select\"\r\n                        name=\"non_finacial\"\r\n                        onChange={(event) => {\r\n                          setNon_finacial(event.target.value);\r\n                        }}\r\n                        value={non_finacial}\r\n                      >\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>Objective</strong>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        class=\"form-control show-tick\"\r\n                        as=\"select\"\r\n                        name=\"objective\"\r\n                        onChange={(event) => {\r\n                          setObjective(event.target.value);\r\n                        }}\r\n                        value={objective}\r\n                      >\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>Measurable</strong>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        class=\"form-control show-tick\"\r\n                        as=\"select\"\r\n                        name=\"measurable\"\r\n                        onChange={(event) => {\r\n                          setMeasurable(event.target.value);\r\n                        }}\r\n                        value={measurable}\r\n                      >\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>Volume Growth</strong>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        class=\"form-control show-tick\"\r\n                        as=\"select\"\r\n                        name=\"volume_growth\"\r\n                        onChange={(event) => {\r\n                          setVolume_growth(event.target.value);\r\n                        }}\r\n                        value={volume_growth}\r\n                      >\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>Value Growth</strong>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        class=\"form-control show-tick\"\r\n                        as=\"select\"\r\n                        name=\"value_growth\"\r\n                        onChange={(event) => {\r\n                          setValue_growth(event.target.value);\r\n                        }}\r\n                        value={value_growth}\r\n                      >\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>Near/Far to PCB</strong>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        class=\"form-control show-tick\"\r\n                        as=\"select\"\r\n                        name=\"near_far\"\r\n                        onChange={(event) => {\r\n                          setNear_far(event.target.value);\r\n                        }}\r\n                        value={near_far}\r\n                      >\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>OPERATIONAL EXCELLENCE</strong>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"OPERATIONAL EXCELLENCE\"\r\n                        name=\"operational_excellence\"\r\n                        onChange={(event) => {\r\n                          setOperational_excellence(event.target.value);\r\n                        }}\r\n                        value={operational_excellence}\r\n                      />\r\n                      {/* {formik.errors.operational_excellence ? <div className='error'>{formik.errors.operational_excellence}</div> : null} */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <h2 className=\"card-inside-title\">\r\n                      <strong>CUSTOMER INTIMACY</strong>\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"CUSTOMER INTIMACY\"\r\n                        name=\"customer_intimacy\"\r\n                        onChange={(event) => {\r\n                          setCustomer_intimacy(event.target.value);\r\n                        }}\r\n                        value={customer_intimacy}\r\n                      />\r\n                      {/* {formik.errors.customer_intimacy ? <div className='error'>{formik.errors.customer_intimacy}</div> : null} */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn savebtn  waves-effect\"\r\n                  onClick={OnSubmitForm}\r\n                >\r\n                  SAVE <i className=\"ml-1 zmdi zmdi-save \" />\r\n                </button>\r\n\r\n                {vilakshanData.length > 0 ? (<button type=\"button\" class=\"btn viewbtn waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={HandleSubmit}>SUBMIT <i className=\"ml-1 zmdi zmdi-check \" /> </button>\r\n                ) : null}\r\n\r\n                {/* <div>\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary  waves-effect\"\r\n                      onClick={exportPDFWithMethod}\r\n                    >\r\n                      Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary  waves-effect\"\r\n                      onClick={ViewModel}\r\n                    >\r\n                      View  <i className=\"ml-1 zmdi zmdi-eye \" />                    </button>\r\n                 \r\n                  </div> */}\r\n\r\n\r\n\r\n                {vilakshanData.length > 0 ? (\r\n                  <div>\r\n\r\n\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: \"-3000px\",\r\n                        top: 0,\r\n                      }}\r\n                    >\r\n                      <PDFExport\r\n                        paperSize=\"A2\"\r\n                        margin=\"1cm\"\r\n                        ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`}\r\n                        forcePageBreak=\".page-break\"\r\n                      >\r\n                        <Modal.Header closeButton style={{ padding: \"10px\" }}>\r\n                          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                          </Modal.Title>\r\n\r\n                          <div className=\"col-md-12 row\" >\r\n                            <div className=\"col-md-6\">\r\n                              <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                            </div>\r\n                            <div className=\"col-md-6 pageHeading\" >\r\n                              Financial Model\r\n                            </div>\r\n                          </div>\r\n\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                          {vilakshanData.length > 0 ? (\r\n\r\n                            <div>\r\n                              <div id=\"divToPrint\" className=\"mt4\">\r\n\r\n                                <div className=\"row clearfix\">\r\n                                  <div className=\"col-md-12\">\r\n                                    <div\r\n                                      className=\"pdfHeader\"\r\n                                    >\r\n                                      Vilakshan\r\n                                    </div>\r\n                                    <div class=\"table-responsive\" id=\"Table\">\r\n                                      <table class=\"table table-bordered\">\r\n                                        <thead>\r\n                                          <tr>\r\n                                            <th>List of Parameter</th>\r\n                                            <th>Non Financial</th>\r\n                                            <th>Objective</th>\r\n                                            <th>Measurable</th>\r\n                                            <th>Volume Growth</th>\r\n                                            <th>Value Growth</th>\r\n                                            <th>Near/Far to PCB</th>\r\n                                            <th>OPERATIONAL EXCELLENCE</th>\r\n                                            <th>CUSTOMER INTIMACY</th>\r\n                                            <th>Vilakshan</th>\r\n\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          {vilakshanData.map((itm, key) => (\r\n                                            <tr>\r\n                                              <td>{itm.parameter}</td>\r\n                                              <td>{itm.non_finacial}</td>\r\n                                              <td>{itm.objective}</td>\r\n                                              <td>{itm.measurable}</td>\r\n                                              <td>{itm.volume_growth}</td>\r\n                                              <td>{itm.value_growth}</td>\r\n                                              <td>{itm.near_far}</td>\r\n                                              <td>{itm.operational_excellence}</td>\r\n                                              <td>{itm.customer_intimacy}</td>\r\n                                              <td>{(itm.checkVal == \"true\") ? <div>Yes</div> : <div>No</div>}</td>\r\n\r\n                                            </tr>\r\n                                          ))}\r\n                                        </tbody>\r\n                                      </table>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ) : null}\r\n\r\n                        </Modal.Body>\r\n                      </PDFExport>\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n\r\n                {/* <div>{JSON.stringify(vilakshanData)}</div> */}\r\n                {vilakshanData.length > 0 ? (\r\n                  <div style={{ marginTop: 30 }} class=\"table-responsive\" id=\"Table\">\r\n                    <table class=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>List of Parameter</th>\r\n                          <th>Non Financial</th>\r\n                          <th>Objective</th>\r\n                          <th>Measurable</th>\r\n                          <th>Volume Growth</th>\r\n                          <th>Value Growth</th>\r\n                          <th>Near/Far to PCB</th>\r\n                          <th>OPERATIONAL EXCELLENCE</th>\r\n                          <th>CUSTOMER INTIMACY</th>\r\n                          <th>Vilakshan</th>\r\n\r\n                          <th style={{ textAlign: \"center\" }}>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {vilakshanData.map((item, key) => (\r\n                          <tr>\r\n                            <td>{item.parameter}</td>\r\n                            <td>{item.non_finacial}</td>\r\n                            <td>{item.objective}</td>\r\n                            <td>{item.measurable}</td>\r\n                            <td>{item.volume_growth}</td>\r\n                            <td>{item.value_growth}</td>\r\n                            <td>{item.near_far}</td>\r\n                            <td>{item.operational_excellence}</td>\r\n                            <td>{item.customer_intimacy}</td>\r\n\r\n\r\n                            <td>\r\n                              <div class=\"btn-group m-1\">\r\n                                {/* <span></span> */}\r\n                                <input type=\"checkbox\" className=\"m-2\" checked={(item.checkVal == \"true\" ? item.checkVal : item.checkVal = '')} onChange={() => yesFn(item.checkVal, item.id)} />\r\n                              </div>\r\n                              {/* <div class=\"btn-group m-1\">\r\n                                <span>No {item.checkVal}</span>\r\n                                <input type=\"checkbox\" checked={(item.checkVal==\"true\" ? item.checkVal : item.checkVal='')} onChange={() => noFn()} />\r\n                              </div> */}\r\n\r\n                            </td>\r\n                            {/* <i className=\"zmdi zmdi-assignment\"></i> */}\r\n                            <td colspan=\"8\">\r\n                              <div class=\"btn-group\">\r\n                                <button\r\n                                  type=\"submit\"\r\n                                  title=\"edit\"\r\n                                  class=\"btn zmdi zmdi-edit waves-effect pull-left\"\r\n                                  style={{ float: \"left\" }}\r\n                                  onClick={() => editfn(item.id)}\r\n                                ></button>{\" \"}\r\n                                <button\r\n                                  type=\"submit\"\r\n                                  title=\"delete\"\r\n                                  class=\"btn btn-danger zmdi zmdi-delete waves-effect\"\r\n                                  onClick={() => deletefn(item.id)}\r\n                                ></button>{\" \"}\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n\r\n\r\n              {vilakshanData.length > 0 ? (\r\n                <>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn viewbtn waves-effect ml-5\"\r\n                    onClick={ViewModel}\r\n                  >\r\n                    View  <i className=\"ml-1 zmdi zmdi-eye \" />              </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn downloadbtn waves-effect\"\r\n                    onClick={exportPDFWithMethod}\r\n                  >\r\n                    Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                  </button>\r\n                </>\r\n              ) : null}\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* View Modal-----------------------> */}\r\n      < Modal\r\n        size=\"lg\"\r\n        show={viewModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton style={{ padding: \"10px\" }}>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n          </Modal.Title>\r\n\r\n          <div className=\"col-md-12 row\" >\r\n            <div className=\"col-md-6\">\r\n              <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n            </div>\r\n            <div className=\"col-md-6 pageHeading\" >\r\n              Financial Model\r\n            </div>\r\n          </div>\r\n\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {vilakshanData.length > 0 ? (\r\n\r\n            <div>\r\n              <div id=\"divToPrint\" className=\"mt4\">\r\n\r\n                <div className=\"row clearfix\">\r\n                  <div className=\"col-md-12\">\r\n                    <div\r\n                      className=\"pdfHeader\"\r\n                    >\r\n                      Vilakshan\r\n                    </div>\r\n                    <div class=\"table-responsive\" id=\"Table\">\r\n                      <table class=\"table table-bordered\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>List of Parameter</th>\r\n                            <th>Non Financial</th>\r\n                            <th>Objective</th>\r\n                            <th>Measurable</th>\r\n                            <th>Volume Growth</th>\r\n                            <th>Value Growth</th>\r\n                            <th>Near/Far to PCB</th>\r\n                            <th>OPERATIONAL EXCELLENCE</th>\r\n                            <th>CUSTOMER INTIMACY</th>\r\n                            <th>Vilakshan</th>\r\n\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {vilakshanData.map((itm, key) => (\r\n                            <tr>\r\n                              <td>{itm.parameter}</td>\r\n                              <td>{itm.non_finacial}</td>\r\n                              <td>{itm.objective}</td>\r\n                              <td>{itm.measurable}</td>\r\n                              <td>{itm.volume_growth}</td>\r\n                              <td>{itm.value_growth}</td>\r\n                              <td>{itm.near_far}</td>\r\n                              <td>{itm.operational_excellence}</td>\r\n                              <td>{itm.customer_intimacy}</td>\r\n                              <td>{(itm.checkVal == \"true\") ? <div>Yes</div> : <div>No</div>}</td>\r\n\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/finalizeCompetition.js",["1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207"],"import React, { useState, useEffect } from \"react\";\nimport { StickyTable, Row, Cell } from \"react-sticky-table\";\nimport { useHistory } from \"react-router-dom\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function Form(props) {\n\n  const history = useHistory();\n  var s_id = localStorage.getItem('tr_id')\n  const [inputListFeature, setInputListFeature] = useState([{ featues: \"\" }]);\n  const [inputListFeature2, setInputListFeature2] = useState([{ featues2: \"\" }]);\n\n  const [inputList, setInputList] = useState([{ competition: \"\" }]);\n  const [inputListFinal, setInputListFinal] = useState([]);\n\n  const [customerList, setCustomerList] = useState([{}]);\n  const [allList, setallList] = useState(\"\");\n  const [EditList, setEditList] = useState([{}]);\n  const [edituser, setedituser] = useState(false);\n  const [PossibleCombination, setPossibleCombination] = useState(0);\n  const [total, settotal] = useState(0);\n  const [holdValue, setholdValue] = useState([]);\n  const [org_name, setorg_name] = useState(\"\");\n  const [completeData, setcompleteData] = useState('')\n  const [Upid, setUpid] = useState(\"\");\n  const [ShowHideErr, setShowHideErr] = useState(false);\n  const [Madd, setMadd] = useState(false);\n  const [Mupdate, setMupdate] = useState(false);\n\n  let no = holdValue.length;\n  const inputs = [];\n  useEffect(() => {\n\n    if (!s_id) {\n      history.push(\"Not_support\");\n    }\n\n    GetallRecords();\n\n  }, []);\n\n  // handle input change\n\n\n\n  const GetallRecords = () => {\n    setShowHideErr(false)\n    var myGetHeaders = new Headers();\n    myGetHeaders.append(\"Content-Type\", \"application/json\");\n    var requestOptions = {\n      method: \"GET\",\n      headers: myGetHeaders,\n      redirect: \"follow\",\n    };\n    // fetch(`http://localhost:9002/masters/valueprop/` + `${1}`, requestOptions)\n    fetch(`http://localhost:9002/masters/valueprop/user/` + `${s_id}`, requestOptions)\n      .then((response) => response.json())\n      .then((resData) => {\n        let MyValues = resData.data;\n        console.log(\"In UseEffect Function\", MyValues);\n        let data;\n        MyValues.map((item, key) => {\n          let Feature = eval(item.features);\n          let Feature2 = eval(item.features2);\n\n          settotal(Feature.length);\n          Feature.map((item, key) => {\n            // data.push([{competition:\"\", [`value${key}`]:\"\"}])\n            holdValue.push({});\n            console.log(\"Pushed data\", holdValue);\n          });\n\n\n\n          // setInputList(data)\n          setCustomerList(holdValue);\n          console.log(\"Dataa to get map\", Feature);\n          console.log(\"Dataa to get map2\", Feature2);\n\n          setPossibleCombination(item.possible_combination);\n          setInputListFeature(Feature);\n          setInputListFeature2(Feature2);\n\n        });\n      });\n    fetch(\n      `http://localhost:9002/masters/competionsheet/user/` + `${s_id}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((resData) => {\n\n        setcompleteData(resData.data);\n        console.log(\"---resDAta--->\", resData.data[0]);\n        let MyValues1 = resData.data;\n\n        let MyValues = resData.data;\n        if (MyValues.length > 0) {\n          setedituser(true);\n          setUpid(resData.data[0].id);\n\n        }\n\n        MyValues.map((item, key) => {\n          console.log(\"before Eval\", item);\n          let Feature = eval(item.features);\n          let FeatureG = eval(item.features);\n\n          let Feature2 = eval(item.features2);\n\n          console.log(\"SDfjdskjfn jsdhfkjsdfn\", Feature);\n          console.log(\"SDfjdskjfn jsdhfkjsdfn22\", Feature2);\n\n          setCustomerList(Feature);\n          setInputList(Feature);\n          setInputListFinal(Feature)\n\n        });\n\n        console.log(\"Edit Values\", MyValues);\n\n\n\n\n        // MyValues1.map((i, key) => {\n        //   console.log(\"before Eval\", i.features);\n        //   let Feature2 = eval(i.features);\n\n        //   console.log(\"SDfjdskjfn jsdhfkjsdfn\", Feature2);\n\n        //   setCustomerList(Feature);\n        //   setInputList(Feature);\n        //   setInputListFinal(Feature)\n        //   setInputListFinal2(Feature2)\n\n        // });\n      });\n  }\n\n  const OnSubmitHandle = () => {\n    GetallRecords();\n    props.OnValidateStrategy(true);\n\n  }\n\n\n\n\n\n  const checkFinalize = (e) => {\n    console.log(e.target.value);\n    let updValue = e.target.value;\n    let checked_value = `1`;\n    console.log(inputListFinal);\n\n    for (var i = 0; i < inputListFinal.length; i++) {\n      if (inputListFinal[i].competition === updValue) {\n        if (inputListFinal[i].is_display == 0) {\n          inputListFinal[i].is_display = 1;\n          GetallRecords();\n\n        } else {\n          inputListFinal[i].is_display = 0;\n          GetallRecords();\n\n        }\n        console.log(inputListFinal);\n\n        break;\n      }\n    }\n    console.log(inputListFinal);\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      features: inputListFinal,\n    });\n    var requestOptions = {\n      method: \"PUT\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n    };\n    fetch(\n      `http://localhost:9002/masters/competionsheetCheck/${Upid}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((resData) => {\n        console.log(resData);\n        if (resData.status == 200) {\n          GetallRecords()\n          // props.OnValidateStrategy(true);\n        }\n        GetallRecords();\n\n      })\n      .catch((error) => console.log(\"error\", error));\n\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <Modal\n        size=\"sm\"\n        show={Madd}\n        onHide={() => setMadd(false)}\n        aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n        <Modal.Body >Form Saved Successful</Modal.Body>\n      </Modal>\n\n      <Modal\n        size=\"sm\"\n        show={Mupdate}\n        onHide={() => setMupdate(false)}\n        aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n        <Modal.Body >Form Update Successful</Modal.Body>\n      </Modal>\n      {/* <div className=\"row clearfix \" style={{ backgroundColor: \"#F3F6F9\",width:\"100rem\",overflowX:\"auto\",whiteSpace:\"nowrap\" }}> */}\n      <div className=\"row clearfix \" style={{ backgroundColor: \"white\", width: \"80rem\", overflowX: \"auto\", backgroundColor: \"#F3F6F9\" }} >\n\n        <div className=\"col-lg-12 col-md-12 col-sm-12\" >\n          <div className=\"card p-4 mt-2\" >\n            {/* {!ShowHideErr ? (\n              <div style={{ margin: 5, text: \"red\" }}><b>Please Enter The Value Lessthan Or Equal To 9</b></div>\n            ) : (null)} */}\n            <div >\n\n              {inputListFeature && inputListFinal ? (\n                <div className=\"body p-5\">\n\n                  <div style={{ marginTop: 20 }}></div>\n\n                  <div className=\"row clearfix flex-nowrap\">\n                    <div className=\"col-lg-6\">\n                      <div className=\"form-group\">\n                        <strong>Organization Name</strong>\n                      </div>\n                      {/* {org_name} */}\n                    </div>\n\n                    <div className=\"col-lg-6\">\n                      <div className=\"form-group\">\n                        <strong>Select</strong>\n                      </div>\n                      {/* {org_name} */}\n                    </div>\n\n                    <div className=\"col-md-2\" ></div>\n                  </div>\n\n                  <div className=\"row clearfix flex-nowrap\">\n                    <div className=\"col-lg-6\">\n                      <div className=\"form-group\">\n                        <span>{org_name}</span>\n                        {/* <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Features\"\n                          name=\"featue\"\n                          value={org_name}\n                          // onChange={(e) => handleInputChange(e, i)}\n                          disabled\n                        /> */}\n                      </div>\n                    </div>\n\n\n                    <div className=\"col-md-2\" ></div>\n                  </div>\n                  {console.log(\"The ------ffff\", inputListFinal)\n                  }\n                  {inputListFinal.map((x, i) => {\n                    return (\n                      <div className=\"row clearfix flex-nowrap\">\n                        <div className=\"col-lg-6\">\n                          <div className=\"form-group\">\n                            <span>{x.competition}</span>\n                            {/* <span>{x.is_display}</span> */}\n\n                          </div>\n                        </div>\n                        <div className=\"col-lg-6 ml-4\">\n                          <div className=\"form-group\">\n                            <input type=\"checkbox\" class=\"form-check-input\" checked={(x.is_display == 0 ? x.is_display = 1 : x.is_display = 0)} value={x.competition} id=\"exampleCheck1\" onChange={checkFinalize} />\n                          </div>\n                        </div>\n\n\n                      </div>\n                    );\n                  })}\n                  <div style={{ marginTop: 30 }}></div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn savebtn waves-effect\"\n                    onClick={OnSubmitHandle}\n\n                  >\n                    SAVE <i className=\"ml-1 zmdi zmdi-save \" />\n                  </button>\n                </div>\n              ) : null}\n            </div>          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n\n}\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/strategyMap.js",["1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299"],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/compettionSheet.js",["1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334"],"import React, { useState, useEffect } from \"react\";\r\nimport { StickyTable, Row, Cell } from \"react-sticky-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nexport default function Form(props) {\r\n\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n  const [inputListFeature, setInputListFeature] = useState([{ featues: \"\" }]);\r\n  const [inputListFeature2, setInputListFeature2] = useState([{ featues2: \"\" }]);\r\n\r\n  const [inputList, setInputList] = useState([{ competition: \"\" }]);\r\n  const [inputListFinal, setInputListFinal] = useState([{ competition: \"\" }]);\r\n  const [inputListFinal2, setInputListFinal2] = useState([{}]);\r\n\r\n  const [customerList, setCustomerList] = useState([{}]);\r\n  const [allList, setallList] = useState(\"\");\r\n  const [EditList, setEditList] = useState([{}]);\r\n  const [edituser, setedituser] = useState(false);\r\n  const [PossibleCombination, setPossibleCombination] = useState(0);\r\n  const [total, settotal] = useState(0);\r\n  const [holdValue, setholdValue] = useState([]);\r\n  const [org_name, setorg_name] = useState(\"\");\r\n  const [completeData, setcompleteData] = useState('')\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [ShowHideErr, setShowHideErr] = useState(false);\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n\r\n  let no = holdValue.length;\r\n  const inputs = [];\r\n  useEffect(() => {\r\n\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n    setShowHideErr(false)\r\n    var myGetHeaders = new Headers();\r\n    myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myGetHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    // fetch(`http://localhost:9002/masters/valueprop/` + `${1}`, requestOptions)\r\n    fetch(`http://localhost:9002/masters/valueprop/user/` + `${s_id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        let MyValues = resData.data;\r\n        console.log(\"In UseEffect Function\", MyValues);\r\n        let data;\r\n        MyValues.map((item, key) => {\r\n          let Feature = eval(item.features);\r\n          let Feature2 = eval(item.features2);\r\n\r\n          settotal(Feature.length);\r\n          Feature.map((item, key) => {\r\n            // data.push([{competition:\"\", [`value${key}`]:\"\"}])\r\n            holdValue.push({});\r\n            console.log(\"Pushed data\", holdValue);\r\n          });\r\n\r\n\r\n\r\n          // setInputList(data)\r\n          setCustomerList(holdValue);\r\n          console.log(\"Dataa to get map\", Feature);\r\n          console.log(\"Dataa to get map2\", Feature2);\r\n\r\n          setPossibleCombination(item.possible_combination);\r\n          setInputListFeature(Feature);\r\n          setInputListFeature2(Feature2);\r\n\r\n        });\r\n      });\r\n    fetch(\r\n      `http://localhost:9002/masters/competionsheet/user/` + `${s_id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n\r\n        setcompleteData(resData.data);\r\n        console.log(\"---resDAta--->\", resData.data[0]);\r\n        let MyValues1 = resData.data;\r\n\r\n        let MyValues = resData.data;\r\n        if (MyValues.length > 0) {\r\n          setedituser(true);\r\n          setUpid(resData.data[0].id);\r\n\r\n        }\r\n        console.log(\"Edit Values\", MyValues);\r\n\r\n        MyValues.map((item, key) => {\r\n          console.log(\"before Eval\", item.features);\r\n          let Feature = eval(item.features);\r\n          let Feature2 = eval(item.features2);\r\n\r\n          console.log(\"SDfjdskjfn jsdhfkjsdfn\", Feature);\r\n          console.log(\"SDfjdskjfn jsdhfkjsdfn22\", Feature2);\r\n\r\n          setCustomerList(Feature);\r\n          setInputList(Feature);\r\n          setInputListFinal(Feature)\r\n          setInputListFinal2(Feature2)\r\n\r\n        });\r\n\r\n        console.log(\"Edit Values\", MyValues1);\r\n\r\n        // MyValues1.map((i, key) => {\r\n        //   console.log(\"before Eval\", i.features);\r\n        //   let Feature2 = eval(i.features);\r\n\r\n        //   console.log(\"SDfjdskjfn jsdhfkjsdfn\", Feature2);\r\n\r\n        //   setCustomerList(Feature);\r\n        //   setInputList(Feature);\r\n        //   setInputListFinal(Feature)\r\n        //   setInputListFinal2(Feature2)\r\n\r\n        // });\r\n      });\r\n\r\n    fetch(`http://localhost:9002/masters/customerSegment/user/${s_id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // setcompleteData(resData.data)\r\n        console.log(\"In Beliver Get all Reccords Function\", resData.data.length);\r\n        if (resData.data.length > 0) {\r\n          setorg_name(resData.data[0].org_name);\r\n          console.log(resData.data)\r\n          let MyValues = resData.data;\r\n          console.log(\"In UseEffect Function\", MyValues);\r\n          // MyValues.map((item, key) => {\r\n          //   let customerFaceMap = eval(item.customer_face);\r\n          //   console.log(\"Data customerFaceMap \", customerFaceMap);\r\n          //   setcustomerSegmentData(customerFaceMap)\r\n          //   setInputList(customerFaceMap);\r\n          // });\r\n        }\r\n        // setShowHideErrData(true)\r\n      });\r\n\r\n  }, []);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    // console.log(e.target.id)\r\n    // console.log(index)\r\n\r\n    if (e.target.value > 9) {\r\n      setShowHideErr(false)\r\n    } else {\r\n      setShowHideErr(true);\r\n      // alert(Show)\r\n    }\r\n\r\n    const { name, value,ips } = e.target;\r\n    const list = [...inputListFinal];\r\n    console.log(\"Here is the Value---1>\", list);\r\n    list[index][name] = value;\r\n    list[index][\"is_display\"] = 0;\r\n\r\n    console.log(list[index][name]);\r\n    console.log(value + \"val\");\r\n\r\n    setInputListFinal(list);\r\n  };\r\n\r\n\r\n  const handleInputChange2 = (e, index) => {\r\n    if (e.target.value > 9) {\r\n      setShowHideErr(false)\r\n    } else {\r\n      setShowHideErr(true);\r\n      // alert(Show)\r\n    }\r\n\r\n    const { name, value } = e.target;\r\n    const list2 = [...inputListFinal2];\r\n    console.log(\"Here is the Value2\", list2);\r\n    list2[0][name] = value;\r\n    setInputListFinal2(list2);\r\n  };\r\n\r\n\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputListFinal];\r\n    setInputListFinal(list);\r\n    list.splice(index, 1);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    let value = [];\r\n    let key = [];\r\n    value.push('competition');\r\n    for (let i = 1; i <= total; i++) {\r\n      value.push(`value${i}`)\r\n    }\r\n    for (let i = 1; i <= total; i++) {\r\n      key.push([`${i}`])\r\n    }\r\n    var pack = function (arr) {\r\n      var length = arr.length,\r\n        result = {},\r\n        i;\r\n      for (i = 0; i < length; i++) {\r\n        result[(i < 10 ? '0' : '') + (i + 1)] = arr[i];\r\n      }\r\n      return result;\r\n    };\r\n    const finalobject = pack(value); //{01: \"one\", 02: \"two\", 03: \"three\"}      \r\n    console.log(\"object is\", finalobject)\r\n    setInputListFinal([...inputListFinal, finalobject]);\r\n    console.log(inputList);\r\n  };\r\n  const OnSubmitHandle = () => {\r\n    setCustomerList([...customerList], inputList);\r\n    let competition = [];\r\n    let Values = [];\r\n    // allObject.push(inputList);\r\n    inputList.map((comp, key) => {\r\n      competition.push(comp);\r\n    });\r\n    customerList.map((item, key) => {\r\n      if (Object.keys(item).length === 3) {\r\n        Values.push(item);\r\n        for (var key in item) {\r\n          console.log(\"Key Value is\", item);\r\n          console.log(\"Key Value is\", item[key]);\r\n          console.log(\"Key Value is\", allObject);\r\n        }\r\n      }\r\n    });\r\n\r\n    var allObject = [...competition, ...Values];\r\n    console.log(\"all datra\", allObject);\r\n    console.log(\"all data inputlist\", inputListFinal);\r\n    console.log(\"all data inputlist2\", inputListFinal2);\r\n\r\n    if (completeData.length === 0) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        features: inputListFinal,\r\n        features2: inputListFinal2,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/competionsheet/`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully==>\");\r\n            // setMadd(true);\r\n            // setMadd(false);\r\n            // setTimeout(() => {\r\n            //   setMadd(false);\r\n            // }, 1000)\r\n\r\n            props.OnValidateTab4(true);\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        features: inputListFinal,\r\n        features2: inputListFinal2,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/competionsheet/${Upid}`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            // console.log(\"Values Submitted Succesfully==>\");\r\n            // setMupdate(true);\r\n            // setTimeout(() => {\r\n            //   setMupdate(false);\r\n            // }, 1000)\r\n            props.OnValidateTab4(true);\r\n\r\n            // GetallRecords();\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n      {/* <div className=\"row clearfix \" style={{ backgroundColor: \"#F3F6F9\",width:\"100rem\",overflowX:\"auto\",whiteSpace:\"nowrap\" }}> */}\r\n      <div className=\"row clearfix \" style={{ backgroundColor: \"white\", width: \"80rem\", overflowX: \"auto\", backgroundColor: \"#F3F6F9\" }}>\r\n\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12\" >\r\n          <div className=\"card p-4 mt-2\" >\r\n            {/* {!ShowHideErr ? (\r\n              <div style={{ margin: 5, text: \"red\" }}><b>Please Enter The Value Lessthan Or Equal To 9</b></div>\r\n            ) : (null)} */}\r\n            <div >\r\n\r\n              {inputListFeature && inputListFinal ? (\r\n                <div className=\"body p-5\">\r\n\r\n                  <div style={{ marginTop: 20 }}></div>\r\n\r\n                  <div className=\"row clearfix flex-nowrap\">\r\n                    <div className=\"col-lg-2\">\r\n                      <div className=\"form-group\">\r\n                        <strong>Organization Name</strong>\r\n\r\n                      </div>\r\n                      {/* {org_name} */}\r\n                    </div>\r\n                    {inputListFeature.map((x, i) => {\r\n                      return (\r\n                        <div className=\"col-lg-2\">\r\n                          <div className=\"form-group\">\r\n                            <strong>{x.featues}</strong>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                    <div className=\"col-md-2\" ></div>\r\n                  </div>\r\n\r\n                  <div className=\"row clearfix flex-nowrap\">\r\n                    <div className=\"col-lg-2\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Features\"\r\n                          name=\"featue\"\r\n                          value={org_name}\r\n                          // onChange={(e) => handleInputChange(e, i)}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    {inputListFinal2.map((x, i) => {\r\n                      // console.log(\"The competion sheet aa\", b)\r\n\r\n                      return (\r\n                        <>\r\n                          {Array.from({ length: total }, (item, index1) => {\r\n                            return (\r\n                              <div className=\"col-lg-2\">\r\n                                <div className=\"form-group\">\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"0\"\r\n                                    maxLength={9}\r\n                                    max={9}\r\n                                    name={`val${index1}`}\r\n                                    value={x[`val${index1}`]}\r\n\r\n                                    onChange={(e) => handleInputChange2(e, i)}\r\n                                  />\r\n\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })\r\n                          }\r\n\r\n                        </>\r\n                      );\r\n                    })}\r\n                    <div className=\"col-md-2\" ></div>\r\n                  </div>\r\n\r\n                  {inputListFinal.map((x, i) => {\r\n                    console.log(\"The competion sheet\", x)\r\n                    return (\r\n                      <div className=\"row clearfix flex-nowrap\">\r\n                        <div className=\"col-lg-2\">\r\n                          <div className=\"form-group\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Competition\"\r\n                              name=\"competition\"\r\n                              ips=\"0\"\r\n\r\n                              value={x.competition}\r\n                              onChange={(e) =>\r\n                                handleInputChange(e, i)\r\n                              }\r\n                            />\r\n\r\n                          </div>\r\n                        </div>\r\n                        {Array.from({ length: total }, (item, index) => {\r\n                          return (\r\n                            <div className=\"col-lg-2\">\r\n                              <div className=\"form-group\">\r\n                                {/* {inputListFeature.map((f, v) => {\r\n                                return (\r\n                                  \r\n                                );\r\n                              })} */}\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"0\"\r\n                                  maxLength={9}\r\n                                  max={9}\r\n                                  name={`value${index}`}\r\n                                  value={x[`value${index}`]}\r\n                                  onChange={(e) => handleInputChange(e, i)}\r\n                                />\r\n\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })\r\n                        }\r\n                        <div className=\"col-md-2\">\r\n                          {inputListFinal.length !== 1 && (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\"\r\n                              onClick={() => handleRemoveClick(i)}\r\n                            >\r\n                              <strong>REMOVE</strong>\r\n                            </button>\r\n                          )}\r\n                          {inputListFinal.length - 1 === i && (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                              onClick={handleAddClick}\r\n                            >\r\n                              <strong>ADD</strong>\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn savebtn waves-effect\"\r\n                    onClick={OnSubmitHandle}\r\n                  >\r\n                    SAVE <i className=\"ml-1 zmdi zmdi-save \" />\r\n                  </button>\r\n                </div>\r\n              ) : null}\r\n            </div>          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/valueProposition.js",["1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351"],"import React, { useState, useEffect } from \"react\";\r\nimport Editor from \"../../components/SunEditor\";\r\nimport \"suneditor/dist/css/suneditor.min.css\"; //Import Sun Editor's CSS File\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { ListContainer, ListItem } from \"../components/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragHandle } from \"../components/DragHandle\";\r\n\r\nexport default function Form(props) {\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id');\r\n  const [inputList, setInputList] = useState([{ featues: \"\", noofpossiblity: \"\", possiblity: \"\", choicemade: \"\" }]);\r\n  const [edituser, setedituser] = useState(false);\r\n  const [PossibleCombination, setPossibleCombination] = useState(0);\r\n  const [text_stmt, settext_stmt] = useState(\"\");\r\n  const [valPropData, setvalPropData] = useState(\"\");\r\n  const [Upid, setUpid] = useState(\"\");\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [ErrorText, setErrorText] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, [])\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    console.log(\"In change handler \", list)\r\n    list[index][name] = value;\r\n    if (name == 'noofpossiblity') {\r\n      let total = 1\r\n      list.map((item, key) => {\r\n        total = parseInt(item.noofpossiblity) * total\r\n      })\r\n      // console.log(list[0].noofpossiblity);\r\n      // var sum = 1;\r\n      // for (let i = 0; i < list.length; i++) {\r\n      //   sum *= parseInt(list[i].noofpossiblity);\r\n      //   console.log(parseInt(list[i].noofpossiblity))\r\n      // }\r\n      // console.log(sum)\r\n\r\n      setPossibleCombination(total)\r\n    }\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    setInputList(list);\r\n    list.splice(index, 1);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { featues: \"\", noofpossiblity: \"\", possiblity: \"\", choicemade: \"\" }]);\r\n    console.log(inputList);\r\n  };\r\n  const OnSubmitHandle = () => {\r\n    for (var i = 0; i < inputList.length; i++) {\r\n      if (inputList[i].choicemade == \"\" || inputList[i].featues == \"\" || inputList[i].noofpossiblity == \"\" || inputList[i].possiblity == \"\") {\r\n        setErrorText(\"Please fill all the inputs and save all the data\");\r\n        return false;\r\n      } else {\r\n        setErrorText(\"\");\r\n      }\r\n    }\r\n\r\n\r\n    if (valPropData.length === 0) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        features: inputList,\r\n        possible_combination: PossibleCombination,\r\n        text_stmt: text_stmt,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/valueprop`,\r\n        requestOptionsrichtext\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            // console.log(\"Data Added succesfully\");\r\n            // setMadd(true);\r\n            // setMadd(false);\r\n            // setTimeout(() => {\r\n            //   setMadd(false);\r\n            // }, 1000)\r\n            props.OnValidateTab3(true);\r\n\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        features: inputList,\r\n        possible_combination: PossibleCombination,\r\n        text_stmt: text_stmt,\r\n        email_id: s_id,\r\n        updated_by: s_id,\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/valueprop/${Upid}`,\r\n        requestOptionsrichtext\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          GetallRecords();\r\n\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(resData);\r\n            console.log(\"Data Added succesfully\");\r\n            GetallRecords();\r\n\r\n            // setMupdate(true);\r\n            // setTimeout(() => {\r\n            //   setMupdate(false);\r\n            // }, 1000)\r\n            props.OnValidateTab3(true);\r\n\r\n            GetallRecords();\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n      GetallRecords();\r\n    };\r\n  }\r\n\r\n  const GetallRecords = () => {\r\n    var myGetHeaders = new Headers();\r\n    myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myGetHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/valueprop/user/` + `${s_id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n\r\n        if (resData.data[0]) {\r\n          setUpid(resData.data[0].id);\r\n\r\n        }\r\n        let MyValues = resData.data;\r\n        console.log(\"In UseEffect Function\", MyValues)\r\n        if (MyValues.length > 0) {\r\n          setedituser(true)\r\n        }\r\n        MyValues.map((item, key) => {\r\n          let Feature = eval(item.features);\r\n          console.log(\"Dataa to get map\", Feature)\r\n          setPossibleCombination(item.possible_combination)\r\n          setInputList(Feature)\r\n          settext_stmt(resData.data[0].text_stmt);\r\n\r\n        })\r\n        // settext_stmt(resData.data[0].text_stmt);\r\n        // console.log(resData.data[0].text_stmt);\r\n\r\n        setvalPropData(resData.data);\r\n      })\r\n  };\r\n\r\n  const updateJson = (featureJson) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      features: featureJson,\r\n      email_id: s_id,\r\n      created_by: s_id\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/valueprop/${Upid}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        GetallRecords();\r\n\r\n        if (resData.status == 200) {\r\n          // console.log(\"Values Submitted Succesfully==>\");\r\n          // setMupdate(true);\r\n          // setTimeout(() => {\r\n          //   setMupdate(false);\r\n          // }, 1000)\r\n          // props.OnValidate1(true)\r\n\r\n\r\n          GetallRecords();\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n\r\n\r\n\r\n      <div className=\"row clearfix\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n          <div style={{ marginLeft: \"40%\" }}>\r\n            <span ><b>{ErrorText}</b></span>\r\n\r\n          </div>\r\n          <div className=\"card p-4 mt-2\" >\r\n            {inputList ? (\r\n              <div className=\"body p-5\" style={{ overflowX: \"scroll\" }}>\r\n                <DragDropContext\r\n                  onDragEnd={(param) => {\r\n                    const srcI = param.source.index;\r\n                    const desI = param.destination?.index;\r\n                    if (desI) {\r\n                      inputList.splice(desI, 0, inputList.splice(srcI, 1)[0]);\r\n                      // List.saveList(inputList);\r\n                      console.log(inputList)\r\n                      updateJson(inputList);\r\n                    }\r\n                  }}\r\n                >\r\n                  <ListContainer>\r\n\r\n                    <div className=\"header\">\r\n                      <h2>\r\n                        <strong>Possible Combination  :{PossibleCombination}\r\n                        </strong>\r\n                      </h2>\r\n                    </div>\r\n                    <div style={{ marginTop: 20 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\" >\r\n                      <div className=\"col-md-3\">\r\n                        <h2 className=\"card-inside-title text-center\">\r\n                          <strong>Features</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title text-center\">\r\n                          <strong>No of Possiblities</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title text-center\">\r\n                          <strong>Possiblities</strong>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                        <h2 className=\"card-inside-title text-center\">\r\n                          <strong>Choice Made</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <Droppable droppableId=\"droppable-1\">\r\n                      {(provided, _) => (\r\n                        <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                          {inputList.map((x, i) => {\r\n                            return (\r\n                              <Draggable\r\n                                key={i}\r\n                                draggableId={\"draggable-\" + i}\r\n                                index={i}\r\n                              >\r\n                                {(provided, snapshot) => (\r\n                                  <ListItem\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    style={{\r\n                                      ...provided.draggableProps.style,\r\n                                      boxShadow: snapshot.isDragging\r\n                                        ? \"0 0 .4rem #666\"\r\n                                        : \"none\",\r\n                                    }}\r\n                                  >\r\n\r\n                                    <div className=\"row clearfix flex-nowrap\">\r\n                                      <DragHandle {...provided.dragHandleProps} className=\"mr-2\" />\r\n\r\n                                      <div className=\"col-md-3\">\r\n                                        <div className=\"form-group\">\r\n                                          <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            // placeholder=\"Features\"\r\n                                            name=\"featues\"\r\n                                            value={x.featues}\r\n                                            onChange={(e) => handleInputChange(e, i)}\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                          <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            // placeholder=\"No of Possiblities\"\r\n                                            name=\"noofpossiblity\"\r\n                                            value={x.noofpossiblity}\r\n                                            onChange={(e) => handleInputChange(e, i)}\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                          <input\r\n                                            type=\"text\"\r\n                                            min=\"0\"\r\n                                            className=\"form-control\"\r\n                                            // placeholder=\"Possiblities\"\r\n                                            name=\"possiblity\"\r\n                                            value={x.possiblity}\r\n                                            onChange={(e) => handleInputChange(e, i)}\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                          <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            // placeholder=\"Choice Made\"\r\n                                            name=\"choicemade\"\r\n                                            value={x.choicemade}\r\n                                            onChange={(e) => handleInputChange(e, i)}\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"col-md-2\">\r\n                                        {inputList.length !== 1 && <button type=\"button\" className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\" onClick={() => handleRemoveClick(i)}><strong>REMOVE</strong></button>}\r\n                                        {inputList.length - 1 === i && <button type=\"button\" className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \" onClick={handleAddClick}><strong>ADD</strong></button>}\r\n                                      </div>\r\n                                      {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\r\n                                    </div>\r\n\r\n                                  </ListItem>\r\n                                )}\r\n                              </Draggable>\r\n\r\n                            );\r\n                          })}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                    {valPropData ? (\r\n                      // <div className=\"container-fluid\">\r\n                      <div className=\"row clearfix\">\r\n                        {/* <div className=\"col-lg-12 col-md-12 col-sm-12\"> */}\r\n                        <div className=\"card\">\r\n                          <div className=\"body\">\r\n                            <div className=\"row clearfix\">\r\n                              <div className=\"col-md-12\">\r\n                                <h2 className=\"card-inside-title\">\r\n                                  <strong>Value Proposition</strong>\r\n\r\n                                </h2>\r\n                                <div>\r\n                                  <Editor\r\n                                    contents={text_stmt}\r\n                                    getValue={(newContent) => {\r\n                                      settext_stmt(newContent);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            {/* </div> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      // </div>\r\n\r\n                    ) : null}\r\n\r\n\r\n                    <div style={{ marginTop: 30 }}></div>\r\n                  </ListContainer>\r\n                </DragDropContext>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn savebtn  waves-effect\"\r\n                  onClick={OnSubmitHandle}\r\n                >\r\n                  SAVE <i className=\"ml-1 zmdi zmdi-save \" />\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/plyground.js",["1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383"],"import React, { useState, useEffect } from \"react\";\r\nimport Editor from \"../../components/SunEditor\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"suneditor/dist/css/suneditor.min.css\"; //Import Sun Editor's CSS File\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\n\r\nexport default function NaisthyaPrayaan(props) {\r\n  var s_id = localStorage.getItem('tr_id');\r\n  const history = useHistory();\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      Prayaan_Category: \"Prayaan Category\",\r\n      Prayaan_Steps: \"Prayaan Steps\",\r\n      Executor: \"Executor\",\r\n      Owner: \"Owner\",\r\n      Start_Date: \"Start Date\",\r\n      Date_of_Completion: \"Date of Completions\",\r\n    },\r\n  ]);\r\n  const [basisofplayground, setbasisofplayground] =\r\n    useState(\"Basis of your Playground\");\r\n  const [defineplayground, setdefineplayground] = useState(\r\n    \"Time Period and No of Vilakshan Units\"\r\n  );\r\n\r\n  let [busiPlaygrounds, setbusiPlaygrounds] = useState(\"\");\r\n  let [prayaanData, setPrayaanData] = useState(\"\");\r\n  let [Finalizationddl, setFinalizationddl] = useState(\"\");\r\n  let [Finalizationtext, setFinalizationtext] = useState(\"\");\r\n  let [drpdata, setdrpdata] = useState(\"\");\r\n  let [Upid, setUpid] = useState(\"\");\r\n\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n\r\n  const options = [\"We will be Volume Focused\", \"We will be Price Focused\"];\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, []);\r\n\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    // setShowData(false);\r\n    setviewModal(false);\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  };\r\n  const OnSubmitForm = () => {\r\n    // alert(Finalizationtext+Finalizationddl);\r\n    if (busiPlaygrounds.length === 0) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        basisofplayground: basisofplayground,\r\n        defineplayground: defineplayground,\r\n        Finalizationddl: Finalizationddl,\r\n        Finalizationtext: Finalizationtext,\r\n        email_id: s_id,\r\n        created_by: s_id,\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/busiPlayground2`,\r\n        requestOptionsrichtext\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Data Added succesfully\");\r\n            setMadd(true);\r\n            // setMadd(false);\r\n            setTimeout(() => {\r\n              setMadd(false);\r\n            }, 1000)\r\n            props.OnValidateTab2(true);\r\n\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var rawrich = JSON.stringify({\r\n        basisofplayground: basisofplayground,\r\n        defineplayground: defineplayground,\r\n        Finalizationddl: Finalizationddl,\r\n        Finalizationtext: Finalizationtext,\r\n        email_id: s_id,\r\n        updated_by: s_id,\r\n      });\r\n      var requestOptionsrichtext = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/busiPlayground2/` + `${Upid}`,\r\n        requestOptionsrichtext\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(resData);\r\n            console.log(\"Data Added succesfully\");\r\n            setMupdate(true);\r\n            // setMupdate(false);\r\n            setTimeout(() => {\r\n              setMupdate(false);\r\n            }, 1000)\r\n            GetallRecords();\r\n            props.OnValidateTab2(true);\r\n\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n      GetallRecords();\r\n    }\r\n    if (inputList.length > 0) {\r\n      inputList.map((item, key) => {\r\n        let get_list = item;\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n          basisofplayground: basisofplayground,\r\n          defineplayground: defineplayground,\r\n          Finalizationtext: Finalizationtext,\r\n          Finalizationddl: Finalizationddl,\r\n          email_id: s_id,\r\n          created_by: s_id,\r\n        });\r\n        var requestOptions = {\r\n          method: \"PUT\",\r\n          headers: myHeaders,\r\n          body: raw,\r\n          redirect: \"follow\",\r\n        };\r\n        fetch(`http://localhost:9002/masters/busiPlayground2` + `${Upid}`, requestOptions)\r\n          .then((response) => response.json())\r\n          .then((resData) => {\r\n            console.log(resData);\r\n            if (resData.status == 200) {\r\n              if (inputList.length === key + 1) {\r\n                console.log(\"All Data Added succesfully\");\r\n                GetallRecords();\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => console.log(\"error\", error));\r\n      });\r\n    }\r\n  };\r\n\r\n  const ChangeFinalization = (event, value) => {\r\n    console.log(\"change the value\", value);\r\n    if (value == \"We will be Price Focused\") {\r\n      setFinalizationtext(\"We are into Customer Intimacy (CI) Model\");\r\n    }\r\n    if (value == \"We will be Volume Focused\") {\r\n      setFinalizationtext(\"We are into Operational Excellence (OE) Model\");\r\n    }\r\n    if (value == null) {\r\n      setFinalizationtext('')\r\n    }\r\n    setFinalizationddl(value);\r\n  };\r\n\r\n  const GetallRecords = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/busiPlayground2/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        let get_list = resData.data;\r\n        get_list.map((item, key) => {\r\n          console.log(item.basisofplayground, item.defineplayground);\r\n          setbasisofplayground(item.basisofplayground);\r\n          setdefineplayground(item.defineplayground);\r\n          setFinalizationtext(item.Finalizationtext);\r\n          setFinalizationddl(item.Finalizationddl);\r\n          setUpid(resData.data[0].id);\r\n\r\n          // alert(item.Finalizationddl);\r\n          // setdefineplayground(item.defineplayground);\r\n\r\n        });\r\n        setbusiPlaygrounds(resData.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/prayaan/user/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        setPrayaanData(resData.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      {busiPlaygrounds ? (\r\n        <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n          <div className=\"row clearfix\">\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n              <div className=\"card p-4 mt-2\">\r\n                <div className=\"body p-5\">\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Basis of your Playground</strong>\r\n                      </h2>\r\n                      <div>\r\n                        <Editor\r\n                          contents={basisofplayground}\r\n                          getValue={(newContent) => {\r\n                            setbasisofplayground(newContent);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <strong>Define your Playground</strong>\r\n                      </h2>\r\n                      <div>\r\n                        <Editor\r\n                          contents={defineplayground}\r\n                          getValue={(newContent) => {\r\n                            setdefineplayground(newContent);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 20 }}></div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-6\">\r\n                      <Autocomplete\r\n                        id=\"controllable-states-demo\"\r\n                        defaultValue={props.keyValue}\r\n                        options={options}\r\n                        value={Finalizationddl}\r\n                        // onChange={}\r\n                        // style={{ width: 300 }}\r\n                        onChange={(event, value) => {\r\n                          ChangeFinalization(event, value);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                          <TextField {...params} variant=\"outlined\" />\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <TextField\r\n                        id=\"outlined-basic\"\r\n                        variant=\"outlined\"\r\n                        style={{ width: 500 }}\r\n                        value={Finalizationtext}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 20 }}></div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn savebtn waves-effect\"\r\n                    onClick={OnSubmitForm}\r\n                  >\r\n                    SAVE <i className=\"ml-1 zmdi zmdi-save \" />\r\n                  </button>\r\n                  {/* <div>\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary  waves-effect\"\r\n                      onClick={exportPDFWithMethod}\r\n                    >\r\n                      Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary  waves-effect\"\r\n                      onClick={ViewModel}\r\n                    >\r\n                      View  <i className=\"ml-1 zmdi zmdi-eye \" />                    </button>\r\n                  </div> */}\r\n                  <div style={{ marginTop: 20 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/* View Modal-----------------------> */}\r\n      <Modal\r\n        size=\"lg\"\r\n        show={viewModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div>\r\n                    <div id=\"divToPrint\" className=\"mt4\">\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <img\r\n                            src=\"../../assets/images/transaganization.png\"\r\n                            width=\"135\"\r\n                            alt=\"Transganization\"\r\n                          />\r\n                          <h1\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              marginTop: \"20px\",\r\n                            }}\r\n                          >\r\n                            Buiseness Model\r\n                          </h1>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"1px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"30px\",\r\n                            }}\r\n                          >\r\n                            Playground Buiseness Model\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            1) Basis of your Playground\r\n\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {basisofplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            2) Define your Playground\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {defineplayground.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      {/* <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList.slice(0, 2)}\r\n                            >\r\n                              <Column\r\n                                field=\"customer_face\"\r\n                                title=\"List of Customer Face\"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n\r\n                      {/* <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList.slice(0, 2)}\r\n                            >\r\n                              <Column\r\n                                field=\"firstName\"\r\n                                title=\"List of Customer Face\"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/BuisnessModel/customerSegment.js",["1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403"],"import React, { useState, useEffect } from 'react';\r\nimport Editor from \"../../components/SunEditor\"\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ListContainer, ListItem } from \"../components/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragHandle } from \"../components/DragHandle\";\r\n\r\nexport default function Form(props) {\r\n  var s_id = localStorage.getItem('tr_id')\r\n  const history = useHistory();\r\n  const [Upid, setUpid] = useState(\"\");\r\n\r\n  const [inputList, setInputList] = useState([{ customer_face: \"\" }]);\r\n  const [problem_solving, setproblem_solving] = useState(\"\");\r\n  const [org_name, setorg_name] = useState(\"\");\r\n  const [product_service_offering_by, setproduct_service_offering_by] = useState(\"\");\r\n  const [customerSegmentData, setcustomerSegmentData] = useState();\r\n  const [completeData, setcompleteData] = useState('')\r\n  const [Madd, setMadd] = useState(false);\r\n  const [Mupdate, setMupdate] = useState(false);\r\n  const [Mdelete, setMdelete] = useState(false);\r\n  const [showData, setShowData] = useState(false);\r\n\r\n  const [viewModal, setviewModal] = useState(false);\r\n  const [ShowPdf, setShowPdf] = useState(false);\r\n  const pdfExportComponent = React.useRef(null);\r\n  const [belConceptDataa, setbelConceptDataa] = useState();\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, []);\r\n\r\n\r\n  const handleClose = () => {\r\n    // setShowData(false);\r\n    setviewModal(false);\r\n  };\r\n\r\n  const ViewModel = () => {\r\n    setviewModal(true);\r\n  }\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  }\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    console.log(\"In customer_face change handler \", list);\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = index => {\r\n    const list = [...inputList];\r\n    setInputList(list);\r\n    list.splice(index, 1);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { customer_face: \"\" }]);\r\n    console.log(inputList)\r\n\r\n  };\r\n\r\n  // email_id: \"1\",\r\n  // created_by: \"2\"\r\n\r\n  const OnSubmitHandle = () => {\r\n    // alert(customerSegmentData.length);\r\n    if (completeData.length === 0) {\r\n      // console.log(problem_solving);\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        customer_face: inputList,\r\n        org_name: org_name,\r\n        product_service_offering_by: product_service_offering_by,\r\n        problem_solving: problem_solving,\r\n        email_id: s_id,\r\n        created_by: s_id\r\n      });\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(\r\n        `http://localhost:9002/masters/customerSegment/`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully\");\r\n            setMadd(true);\r\n            // setMadd(false);\r\n            setTimeout(() => {\r\n              setMadd(false);\r\n            }, 1000)\r\n            props.OnValidateTab1(true);\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        customer_face: inputList,\r\n        org_name: org_name,\r\n        product_service_offering_by: product_service_offering_by,\r\n        problem_solving: problem_solving,\r\n        email_id: s_id,\r\n        created_by: s_id\r\n      });\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/customerSegment/` + `${Upid}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          if (resData.status == 200) {\r\n            console.log(\"Values Submitted Succesfully\");\r\n            setMupdate(true);\r\n            // setMupdate(false);\r\n            setTimeout(() => {\r\n              setMupdate(false);\r\n            }, 1000)\r\n            props.OnValidateTab1(true);\r\n\r\n          }\r\n          // GetallRecords();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }\r\n\r\n  const GetallRecords = () => {\r\n    var myGetHeaders = new Headers();\r\n    myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myGetHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/customerSegment/user/${s_id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        setcompleteData(resData.data)\r\n        console.log(\"In Beliver Get all Reccords Function\", resData.data.length);\r\n        if (resData.data.length > 0) {\r\n          setorg_name(resData.data[0].org_name);\r\n          setproduct_service_offering_by(resData.data[0].product_service_offering_by);\r\n          setproblem_solving(resData.data[0].problem_solving);\r\n          setUpid(resData.data[0].id);\r\n\r\n          console.log(resData.data)\r\n          let MyValues = resData.data;\r\n          console.log(\"In UseEffect Function\", MyValues);\r\n          MyValues.map((item, key) => {\r\n            let customerFaceMap = eval(item.customer_face);\r\n            console.log(\"Data customerFaceMap \", customerFaceMap);\r\n            setcustomerSegmentData(customerFaceMap)\r\n            setInputList(customerFaceMap);\r\n          });\r\n        }\r\n        setShowData(true)\r\n      });\r\n  };\r\n\r\n  const handleChangeproblem_solving = (newContent) => {\r\n    setproblem_solving(newContent);\r\n  };\r\n\r\n  const org_nameFn = (e) => {\r\n    setorg_name(e.target.value);\r\n  };\r\n\r\n\r\n  const product_service_offering_byFn = (e) => {\r\n    setproduct_service_offering_by(e.target.value);\r\n  };\r\n\r\n  const updateJson = (featureJson) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      customer_face: featureJson,\r\n      email_id: s_id,\r\n      created_by: s_id\r\n    });\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(\r\n      `http://localhost:9002/masters/customerSegment/` + `${Upid}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        GetallRecords();\r\n\r\n        if (resData.status == 200) {\r\n          // console.log(\"Values Submitted Succesfully==>\");\r\n          // setMupdate(true);\r\n          // setTimeout(() => {\r\n          //   setMupdate(false);\r\n          // }, 1000)\r\n          // props.OnValidate1(true)\r\n\r\n\r\n          GetallRecords();\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"row clearfix\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <div className=\"card p-4 mt-2\">\r\n          {showData ? (\r\n            <div className=\"body p-5\" style={{ overflowX: \"scroll\" }}>\r\n              <DragDropContext\r\n                onDragEnd={(param) => {\r\n                  const srcI = param.source.index;\r\n                  const desI = param.destination?.index;\r\n                  if (desI) {\r\n                    inputList.splice(desI, 0, inputList.splice(srcI, 1)[0]);\r\n                    // List.saveList(inputList);\r\n                    console.log(inputList)\r\n                    updateJson(inputList);\r\n                  }\r\n                }}\r\n              >\r\n                <ListContainer>\r\n\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\"><strong>Your Organization Name</strong></h2>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"Organization Name\"\r\n                          onChange={org_nameFn}\r\n                          placeholder=\"Organization Name\"\r\n                          value={org_name}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\"><strong>Products/Services Offering by</strong></h2>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"Products/Services Offering by\"\r\n                          onChange={product_service_offering_byFn}\r\n                          placeholder=\"Products/Services Offering by\"\r\n                          value={product_service_offering_by}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\"><strong>Customer Face</strong></h2>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Droppable droppableId=\"droppable-1\">\r\n                    {(provided, _) => (\r\n                      <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                        {inputList.map((x, i) => {\r\n                          return (\r\n                            <Draggable\r\n                              key={i}\r\n                              draggableId={\"draggable-\" + i}\r\n                              index={i}\r\n                            >\r\n                              {(provided, snapshot) => (\r\n                                <ListItem\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  style={{\r\n                                    ...provided.draggableProps.style,\r\n                                    boxShadow: snapshot.isDragging\r\n                                      ? \"0 0 .4rem #666\"\r\n                                      : \"none\",\r\n                                  }}\r\n                                >\r\n\r\n                                  <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-10\">\r\n                                      <div className=\"form-group\">\r\n                                        <div className=\"row clearfix flex-nowrap ml-1\">\r\n                                          <DragHandle {...provided.dragHandleProps} className=\"mr-2\" />\r\n\r\n                                          <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"First List\"\r\n                                            className=\"form-control\"\r\n                                            name=\"customer_face\"\r\n                                            value={x.customer_face}\r\n                                            onChange={(e) => handleInputChange(e, i)}\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                      {inputList.length !== 1 && (\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\"\r\n                                          onClick={() => handleRemoveClick(i)}\r\n                                        >REMOVE\r\n                                          {/* <strong>REMOVE</strong> */}\r\n                                          {/* <span style={{fontSize:\"2vw\"}} className='list-inline'>REMOVE</span> */}\r\n                                        </button>\r\n                                      )}\r\n                                      {inputList.length - 1 === i && (\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className=\"btn  addbtn btn-square waves-effect m-l-40 \"\r\n                                          onClick={handleAddClick}\r\n                                        >\r\n                                          <strong>ADD</strong>\r\n                                        </button>\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                </ListItem>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-12\">\r\n                      <h2 className=\"card-inside-title\">\r\n                        <h2 className=\"card-inside-title\"><strong>What is the problem you are solving?</strong></h2>\r\n                      </h2>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-md-1\"></div>\r\n                    <div className=\"col-md-12\">\r\n                      <Editor\r\n                        contents={problem_solving}\r\n                        getValue={handleChangeproblem_solving}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </ListContainer>\r\n\r\n              </DragDropContext>\r\n\r\n\r\n\r\n              <div style={{ marginTop: 30 }}></div>\r\n\r\n              <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnSubmitHandle}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button>\r\n\r\n\r\n            </div>\r\n          ) : (null)}\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mupdate}\r\n        onHide={() => setMupdate(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Update Successful</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Mdelete}\r\n        onHide={() => setMdelete(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        show={Madd}\r\n        onHide={() => setMadd(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n\r\n\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={viewModal}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div>\r\n                    <div id=\"divToPrint\" className=\"mt4\">\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <img\r\n                            src=\"../../assets/images/transaganization.png\"\r\n                            width=\"135\"\r\n                            alt=\"Transganization\"\r\n                          />\r\n                          <h1\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              marginTop: \"20px\",\r\n                            }}\r\n                          >\r\n                            Business Model\r\n                          </h1>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"1px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"30px\",\r\n                            }}\r\n                          >\r\n                            Customer Segmentation\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            1) Your Organization Name\r\n\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {org_name.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            2) Products/Services Offering by\r\n\r\n\r\n\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              border: \"2px solid black\",\r\n                              marginLeft: \"0\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {product_service_offering_by.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"left\",\r\n                              alignContent: \"left\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              padding: \"10px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"20px\",\r\n                              marginLeft: \"0\",\r\n                            }}\r\n                          >\r\n                            3) What is the problem you are solving?\r\n\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              alignSelf: \"center\",\r\n                              alignContent: \"center\",\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                              backgroundColor: \"lightgrey\",\r\n                              width: \"150\",\r\n                              marginLeft: \"0\",\r\n                              border: \"2px solid black\",\r\n                              padding: \"50px\",\r\n                              margin: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                          >\r\n                            {problem_solving.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList.slice(0, 2)}\r\n                            >\r\n                              <Column\r\n                                field=\"customer_face\"\r\n                                title=\"List of Customer Face\"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* <div className=\"row clearfix\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"table-responsive\">\r\n                            <Grid\r\n                              style={{\r\n                                maxHeight: \"400px\",\r\n                              }}\r\n                              data={inputList.slice(0, 2)}\r\n                            >\r\n                              <Column\r\n                                field=\"firstName\"\r\n                                title=\"List of Customer Face\"\r\n                                width=\"420px\"\r\n                              />\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div >\r\n\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/tab2table.js",["1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441"],"import React, { useEffect, useState } from 'react';\r\nimport SelectBox from '../components/Select'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ListContainer, ListItem } from \"../components/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragHandle } from \"../components/DragHandle\";\r\n\r\nconst Table = props => {\r\n    var s_id = localStorage.getItem('tr_id')\r\n    const [inputListFinal, setInputListFinal] = useState([{ competition: \"\" }]);\r\n    const [inputList, setInputList] = useState([{ competition: \"\" }]);\r\n    const [inputListFinal2, setInputListFinal2] = useState([{}]);\r\n    const [Upid, setUpid] = useState(\"\");\r\n    const [customerList, setCustomerList] = useState([{}]);\r\n\r\n    const history = useHistory();\r\n\r\n    // let formData = props.AllData;\r\n    // console.log(\"All Table Data\", formData)\r\n    let rows = [];\r\n    const [allOptions, setallOptions] = useState([]);\r\n    const [holdValue, setholdValue] = useState([]);\r\n    // let [completeData, setcompleteData] = useState('')\r\n    const [completeData, setcompleteData] = useState('')\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [total, settotal] = useState(0);\r\n    let [DrpValues, setDrpValues] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (!s_id) {\r\n            history.push(\"Not_support\");\r\n        }\r\n\r\n        GetData();\r\n    }, []);\r\n\r\n    const GetData = () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptionsget = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://localhost:9002/masters/customerTab2/${s_id}`, requestOptionsget)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData.data);\r\n                // setcompleteData(resData.data);\r\n                if (resData.status == 200) {\r\n                    console.log(\"Data Added succesfully\")\r\n                }\r\n\r\n                setcompleteData(resData.data);\r\n                console.log(\"---resDAta--->\", resData.data[0]);\r\n                let MyValues1 = resData.data;\r\n\r\n                let MyValues = resData.data;\r\n                if (MyValues.length > 0) {\r\n                    // setedituser(true);\r\n                    setUpid(resData.data[0].id);\r\n\r\n                }\r\n                console.log(\"Edit Values\", MyValues);\r\n\r\n                MyValues.map((item, key) => {\r\n                    console.log(\"before Eval\", item.features);\r\n                    let Feature = eval(item.features);\r\n                    let Feature2 = eval(item.features2);\r\n\r\n                    console.log(\"SDfjdskjfn jsdhfkjsdfn\", Feature);\r\n                    console.log(\"SDfjdskjfn jsdhfkjsdfn22\", Feature2);\r\n\r\n                    setCustomerList(Feature);\r\n                    setInputList(Feature);\r\n                    setInputListFinal(Feature)\r\n                    setInputListFinal2(Feature2)\r\n\r\n                });\r\n\r\n                console.log(\"Edit Values\", MyValues1);\r\n            })\r\n            .catch((error) => console.log(\"error\", error))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const updateJson = (srcID, desID) => {\r\n        console.log(srcID)\r\n        console.log(desID)\r\n\r\n        // var sourceId = parseInt(srcID)\r\n        // var destId = parseInt(desID)\r\n        // console.log(sourceId)\r\n        // console.log(destId)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            order_by: srcID[1],\r\n\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            `http://localhost:9002/masters/customerTab2Id/${desID[0]}`,\r\n            requestOptions\r\n        )\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                // GetallRecords();\r\n\r\n                if (resData.status == 200) {\r\n                    // console.log(\"Values Submitted Succesfully==>\");\r\n                    // setMupdate(true);\r\n                    // setTimeout(() => {\r\n                    //   setMupdate(false);\r\n                    // }, 1000)\r\n                    // props.OnValidate1(true)\r\n\r\n                    GetData();\r\n                    // GetallRecords();\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n        var myHeaders2 = new Headers();\r\n        myHeaders2.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            order_by: desID[1],\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders2,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            `http://localhost:9002/masters/customerTab2Id/` + `${srcID[0]}`,\r\n            requestOptions\r\n        )\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                // GetallRecords();\r\n\r\n                if (resData.status == 200) {\r\n                    // console.log(\"Values Submitted Succesfully==>\");\r\n                    // setMupdate(true);\r\n                    // setTimeout(() => {\r\n                    //   setMupdate(false);\r\n                    // }, 1000)\r\n                    // props.OnValidate1(true)\r\n                    GetData();\r\n                    props.OnValidateTab2(true);\r\n\r\n\r\n\r\n                    // GetallRecords();\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n        GetData();\r\n\r\n\r\n    }\r\n\r\n    // handle input change\r\n    const handleInputChange = (e, index) => {\r\n        console.log(e.target.id)\r\n        console.log(e.target.name)\r\n        console.log(e.target.value)\r\n        // console.log(e.target.ips)\r\n\r\n        // console.log(index)\r\n\r\n        // if (e.target.value > 9) {\r\n        //   setShowHideErr(false)\r\n        // } else {\r\n        //   setShowHideErr(true);\r\n        //   // alert(Show)\r\n        // }\r\n\r\n        const { name, value, ips } = e.target;\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value---1>\", list);\r\n        list[index][name] = value;\r\n        list[index][\"is_display\"] = 0;\r\n\r\n        console.log(list[index][name]);\r\n        console.log(value + \"val\");\r\n\r\n\r\n        setInputListFinal(list);\r\n        setcompleteData(list);\r\n\r\n    };\r\n\r\n    const onChange = (i, newInputValue, value) => {\r\n        // holdValue.push({ \"options\": newInputValue, \"id\": value })\r\n        // console.log(\"Pushed data\", holdValue)\r\n        console.log(\"newInputValue\", newInputValue)\r\n        console.log(\"newInputValue\", i)\r\n        console.log(\"newInputValue\", value)\r\n\r\n        // setallOptions(holdValue)\r\n\r\n        // const { name, value, ips } = e.target;\r\n        // const list = [...inputListFinal];\r\n        // console.log(\"Here is the Value---1>\", list);\r\n        // list[index][name] = value;\r\n        // list[index][\"is_display\"] = 0;\r\n\r\n        // console.log(list[index][name]);\r\n        // console.log(value + \"val\");\r\n\r\n\r\n        // setInputListFinal(list);\r\n\r\n    }\r\n\r\n    const handleRemoveClick = (index) => {\r\n        const list = [...inputListFinal];\r\n        setInputListFinal(list);\r\n        list.splice(index, 1);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        let value = [];\r\n        let key = [];\r\n        value.push('competition');\r\n        for (let i = 1; i <= total; i++) {\r\n            value.push(`value${i}`)\r\n        }\r\n        for (let i = 1; i <= total; i++) {\r\n            key.push([`${i}`])\r\n        }\r\n        var pack = function (arr) {\r\n            var length = arr.length,\r\n                result = {},\r\n                i;\r\n            for (i = 0; i < length; i++) {\r\n                result[(i < 10 ? '0' : '') + (i + 1)] = arr[i];\r\n            }\r\n            return result;\r\n        };\r\n        const finalobject = pack(value); //{01: \"one\", 02: \"two\", 03: \"three\"}      \r\n        console.log(\"object is\", finalobject)\r\n        setInputListFinal([...inputListFinal, finalobject]);\r\n        console.log(inputList);\r\n    };\r\n\r\n\r\n    const OnSubmitHandle = () => {\r\n        for (var i = 0; i < inputListFinal.length; i++) {\r\n            if (inputListFinal[i].value0 == \"\" || !inputListFinal[i].value0) {\r\n                // seterrorshow(true);\r\n                return false;\r\n            }\r\n        }\r\n        setCustomerList([...customerList], inputList);\r\n        let competition = [];\r\n        let Values = [];\r\n        // allObject.push(inputList);\r\n        inputList.map((comp, key) => {\r\n            competition.push(comp);\r\n        });\r\n\r\n        customerList.map((item, key) => {\r\n            if (Object.keys(item).length === 3) {\r\n                Values.push(item);\r\n                for (var key in item) {\r\n                    console.log(\"Key Value is\", item);\r\n                    console.log(\"Key Value is\", item[key]);\r\n                    console.log(\"Key Value is\", allObject);\r\n                }\r\n            }\r\n        });\r\n\r\n        var allObject = [...competition, ...Values];\r\n        console.log(\"all datra\", allObject);\r\n        console.log(\"all data inputlist\", inputListFinal);\r\n        console.log(\"all data inputlist2\", inputListFinal2);\r\n\r\n        if (completeData.length === 0) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                features: inputListFinal,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(\r\n                `http://localhost:9002/masters/customerTab2`,\r\n                requestOptions\r\n            )\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    props.OnValidate1(true)\r\n\r\n\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully==>\");\r\n                        // setMadd(true);\r\n                        // setMadd(false);\r\n                        // setTimeout(() => {\r\n                        //   setMadd(false);\r\n                        // }, 1000)\r\n                        props.OnValidateTab2(true);\r\n\r\n\r\n\r\n                        //             props.OnValidate1(true)\r\n\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        } else {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                features: inputListFinal,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(\r\n                `http://localhost:9002/masters/customerTab2/${s_id}`,\r\n                requestOptions\r\n            )\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        // console.log(\"Values Submitted Succesfully==>\");\r\n                        // setMupdate(true);\r\n                        // setTimeout(() => {\r\n                        //   setMupdate(false);\r\n                        // }, 1000)\r\n                        // props.OnValidate1(true)\r\n                        props.OnValidateTab2(true);\r\n\r\n\r\n\r\n                        // GetallRecords();\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"row clearfix\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card p-4 mt-2\">\r\n                    {completeData ? (\r\n                        <div className=\"body p-5\" style={{ overflowX: \"scroll\" }}>\r\n                            <DragDropContext\r\n                                onDragEnd={(param) => {\r\n                                    console.log(param)\r\n                                    const srcI = param.source.index.split(\"o\");;\r\n                                    const desI = param.destination?.index.split(\"o\");\r\n                                    const srcIrecId = param.source.recId;\r\n                                    const desIrecId = param.destination?.recId;\r\n                                    // const srcIArray = srcI.split(\"o\");\r\n                                    // const desIIArray = desI.split(\"o\");\r\n                                    // console.log(srcIArray)\r\n                                    // console.log(desIIArray)\r\n                                    // console.log(desI)\r\n\r\n                                    if (desI) {\r\n                                        completeData.splice(desI, 0, completeData.splice(srcI, 1)[0]);\r\n                                        // List.saveList(completeData);\r\n                                        console.log(completeData)\r\n                                        updateJson(srcI, desI);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <ListContainer>\r\n                                    <div style={{ marginTop: 20 }}>\r\n                                    </div>\r\n                                    <div className=\"row clearfix ml-3\" >\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center\">\r\n                                                <strong>Questions appearing in mind Journey</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-2\">\r\n                                                <strong>Question appearing in Mind of</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-5\">\r\n                                                <strong>Who Gives the answer</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-4\">\r\n                                                <strong>Possible Answer</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-4\">\r\n                                                <strong>Choice Made</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-5\">\r\n                                                <strong>Point to be Considered</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <Droppable droppableId=\"droppable-1\">\r\n                                        {(provided, _) => (\r\n                                            <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                                                {inputListFinal.map((x, i) => {\r\n                                                    console.log(x[`tag${0}`])\r\n                                                    return (\r\n                                                        <>\r\n                                                            <Draggable\r\n                                                                key={x.id}\r\n                                                                draggableId={\"draggable-\" + i}\r\n                                                                index={x.order_by + \"o\" + x.id}\r\n                                                                recId={x.id}\r\n                                                            >\r\n                                                                {(provided, snapshot) => (\r\n                                                                    <ListItem\r\n                                                                        ref={provided.innerRef}\r\n                                                                        {...provided.draggableProps}\r\n                                                                        style={{\r\n                                                                            ...provided.draggableProps.style,\r\n                                                                            boxShadow: snapshot.isDragging\r\n                                                                                ? \"0 0 .4rem #666\"\r\n                                                                                : \"none\",\r\n                                                                        }}\r\n                                                                    >\r\n\r\n\r\n                                                                        <div className=\"row clearfix flex-nowrap\">\r\n                                                                            <DragHandle {...provided.dragHandleProps} className=\"mr-2\" />\r\n\r\n                                                                            {Array.from({ length: 5 }, (item, index) => {\r\n                                                                                return (\r\n                                                                                    <>\r\n                                                                                        <div className=\"col-md-2\">\r\n                                                                                            <div className=\"form-group\">\r\n                                                                                                <input\r\n                                                                                                    type=\"text\"\r\n                                                                                                    className=\"form-control\"\r\n                                                                                                    placeholder=\"0\"\r\n                                                                                                    maxLength={200}\r\n                                                                                                    max={200}\r\n                                                                                                    name={`value${index}`}\r\n                                                                                                    value={x[`value${index}`]}\r\n                                                                                                    onChange={(e) => handleInputChange(e, i)}\r\n                                                                                                    required\r\n                                                                                                    disabled\r\n                                                                                                />\r\n\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n\r\n\r\n                                                                                    </>\r\n                                                                                );\r\n                                                                            })}\r\n\r\n                                                                            {Array.from({ length: 1 }, (item, index) => {\r\n                                                                                return (\r\n                                                                                    <>\r\n                                                                                        {/* {DrpValues.length > 0 ? ( */}\r\n                                                                                        <div className=\"col-lg-2\">\r\n                                                                                            <div className=\"form-group\">\r\n                                                                                                <div className=\"row clearfix flex-nowrap\">\r\n                                                                                                    {/* <span>{x[`tag${index}`]}</span> */}\r\n                                                                                                    <select className=\"form-control\" name={`tag${index}`} id={x[`${index}`]} value={x[`tag${index}`]} onChange={(e) => handleInputChange(e, i)}>\r\n                                                                                                        {/* {DrpValues.map((item, key) => ( */}\r\n                                                                                                        {/* // console.log(item.vilakshan_journey) */}\r\n                                                                                                        <option value=\"\"></option>\r\n                                                                                                        <option value=\"Undefined\">Undefined</option>\r\n                                                                                                        <option value=\"Current Process Improvement\">Current Process Improvement</option>\r\n                                                                                                        <option value=\"Innovation\">Innovation</option>\r\n                                                                                                        {/* ))} */}\r\n                                                                                                    </select>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        {/* ) : (null)} */}\r\n                                                                                    </>\r\n                                                                                );\r\n                                                                            })\r\n                                                                            }\r\n                                                                            {/* <div className=\"col-md-2\">\r\n                                                                                {inputListFinal.length !== 1 && (\r\n                                                                                    <button\r\n                                                                                        type=\"button\"\r\n                                                                                        className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\"\r\n                                                                                        onClick={() => handleRemoveClick(i)}\r\n                                                                                    >\r\n                                                                                        <strong>REMOVE</strong>\r\n                                                                                    </button>\r\n                                                                                )}\r\n                                                                                {inputListFinal.length - 1 === i && (\r\n                                                                                    <button\r\n                                                                                        type=\"button\"\r\n                                                                                        className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                                                                                        onClick={handleAddClick}\r\n                                                                                    >\r\n                                                                                        <strong>ADD</strong>\r\n                                                                                    </button>\r\n                                                                                )}\r\n                                                                            </div> */}\r\n                                                                            {/* <div className=\"col-md-2\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <SelectBox onChangeTag={onChange} keyValue={x.point_to_be_considered} keyid={x.id} />\r\n                                                                            </div>\r\n\r\n                                                                        </div> */}\r\n                                                                        </div>\r\n\r\n\r\n                                                                        {/* <div className=\"col-md-2\">\r\n                                                                            {completeData.length !== 1 && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn btn-raised rembtn btn-square waves-effect m-l-40 \"\r\n                                                                                    onClick={() => handleRemoveClick(i)}\r\n                                                                                >\r\n                                                                                    <strong>REMOVE</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                            {completeData.length - 1 === i && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn  addbtn btn-square waves-effect m-l-40 \"\r\n                                                                                    onClick={handleAddClick}\r\n                                                                                >\r\n                                                                                    <strong>ADD</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                        </div> */}\r\n\r\n                                                                    </ListItem>\r\n                                                                )}\r\n                                                            </Draggable>\r\n\r\n                                                        </>\r\n                                                    );\r\n\r\n                                                })}\r\n                                                {provided.placeholder}\r\n\r\n                                            </div>\r\n                                        )}\r\n                                    </Droppable>\r\n\r\n\r\n                                </ListContainer>\r\n\r\n                            </DragDropContext>\r\n\r\n\r\n\r\n                            <div style={{ marginTop: 30 }}></div>\r\n\r\n                            {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnSubmitHandle}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button> */}\r\n                            {/* <button type=\"button\" class=\"btn savebtn waves-effect\"\r\n                            onClick={OnSubmitHandle}>SAVE</button> */}\r\n\r\n                            <button type=\"button\" class=\"btn finalizebtn btn-square waves-effect\" onClick={OnSubmitHandle}>FINALIZE CMM</button>\r\n\r\n\r\n\r\n                        </div>\r\n                    ) : (null)}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Table;","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/tabs.js",["1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\nimport AccrodionTabs from './accrodion';\r\nimport AccrodianProcess from './accrodianconcept'\r\nimport AccrodianInnovation from './accrodianinnovation';\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport * as moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto() {\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const history = useHistory();\r\n  var s_id = localStorage.getItem('tr_id')\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [content, setContent] = useState('');\r\n  const [completeData, setcompleteData] = useState('')\r\n  const [completeOptionData, setcompleteOptionData] = useState('')\r\n  const [holdValue, setholdValue] = useState([]);\r\n  const [allOptions, setallOptions] = useState([]);\r\n  const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n  const regEx = /(<([^>]+)>)/ig;\r\n  const GetFormattedDate = (datepara) => {\r\n    var todayTime = new Date(datepara);\r\n    console.log(\"Date\", todayTime)\r\n    var month = todayTime.getMonth() + 1;\r\n    var day = todayTime.getDate();\r\n    var year = todayTime.getFullYear();\r\n    return month + \"/\" + day + \"/\" + year;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!s_id) {\r\n      history.push(\"Not_support\");\r\n    }\r\n\r\n    GetallRecords();\r\n  }, [])\r\n\r\n  const GetallRecords = () => {\r\n    // setholdValue([]);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/customerTab2/${s_id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        console.log(resData.data);\r\n        let response = resData.data[0].features;\r\n        console.log(response)\r\n        setcompleteData(response);\r\n        // response.map((item, key) => {\r\n        //   fetch(`http://localhost:9002/masters/CMMT3/` + `${item.id}`, requestOptionsget)\r\n        //     .then((response) => response.json())\r\n        //     .then((resData) => {\r\n        //       console.log(resData.data);\r\n        //       let tabresponse = resData.data;\r\n        //       tabresponse.map((tab, key) => {\r\n        //         let dateMDY = moment(item.start_date).format(\"L\");;\r\n        //         console.log(\"datae\", dateMDY)\r\n        //         let dateexpeMDY = moment(item.expected_closure_date).format(\"L\");\r\n        //         holdValue.push({ \"Point\": item.point_to_be_considered, \"Briefblock\": tab.brief_building_blocks.replace(regEx, ''), \"Owener\": tab.ownership, \"Start\": moment(tab.start_date).format(\"L\"), \"End\": moment(tab.expected_closure_date).format(\"L\"), \"Days\": tab.days, \"Weekcount\": tab.weeks })\r\n        //         setallOptions(holdValue)\r\n        //       })\r\n        //     })\r\n        //     .catch((error) => console.log(\"error\", error))\r\n        // })\r\n      })\r\n      .catch((error) => console.log(\"error\", error))\r\n\r\n\r\n    fetch(\r\n      `http://localhost:9002/masters/parivartan_user/${s_id}`,\r\n      requestOptionsget\r\n    )\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        // if (resData.data.id > 0) {\r\n        // console.log(\"ttt--->\", resData.data[0].bypass_email);\r\n        // setbelEmail(resData.data[0].beliver_email);\r\n        // settransEmail(resData.data[0].tranz_email);\r\n        // setbypassEmail(resData.data[0].bypass_email);\r\n        setbeliverName(resData.data[0].beliver_name);\r\n\r\n        // }\r\n\r\n\r\n      });\r\n  }\r\n\r\n  const pdfExportComponent = React.useRef(null);\r\n  const exportPDFWithMethod = () => {\r\n    if (pdfExportComponent.current) {\r\n      pdfExportComponent.current.save();\r\n    }\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log(\"Tab Value\" + newValue);\r\n    if (newValue === 3) {\r\n      GetallRecords();\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeEditor = (newContent) => {\r\n    console.log(newContent)\r\n    setContent(newContent);\r\n  };\r\n\r\n  const renderAccrodion = () => {\r\n    return <AccrodionTabs AllData={completeData} Optiondata={completeOptionData} />\r\n  }\r\n  const renderAccrodionProcess = () => {\r\n    return <AccrodianProcess AllData={completeData} Optiondata={completeOptionData} />\r\n  }\r\n  const renderAccrodionInovation = () => {\r\n    return <AccrodianInnovation AllData={completeData} Optiondata={completeOptionData} />\r\n  }\r\n  return (\r\n    <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n      <div className=\"row clearfix\">\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n          <div className=\"card p-4 mt-2\">\r\n            <div className={classes.root}>\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                  aria-label=\"scrollable auto tabs example\"\r\n                >\r\n                  <Tab label=\"Undefined\" {...a11yProps(0)} />\r\n                  <Tab label=\"Current Process Improvement\" {...a11yProps(1)} />\r\n                  <Tab label=\"Innovation\" {...a11yProps(2)} />\r\n                  <Tab label=\"All Download\" {...a11yProps(3)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <TabPanel value={value} index={0}>\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                      {renderAccrodion()}\r\n                      <div style={{ marginTop: 30 }}>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-10\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                      {renderAccrodionProcess()}\r\n                      <div style={{ marginTop: 30 }}>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-10\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                      {renderAccrodionInovation()}\r\n                      <div style={{ marginTop: 30 }}>\r\n                      </div>\r\n                      <div className=\"row clearfix\">\r\n                        <div className=\"col-md-10\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                      {completeData && allOptions ? (\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            left: \"-3000px\",\r\n                            top: 0,\r\n                            color: \"black\"\r\n                          }}\r\n                        >\r\n                          <PDFExport\r\n                            paperSize=\"A4\"\r\n                            margin=\"1cm\"\r\n                            ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`}\r\n                            forcePageBreak=\".page-break\"\r\n                          >\r\n                            <Modal.Header style={{ padding: \"10px\" }}>\r\n                              <div className=\"col-md-12 row\" >\r\n                                <div className=\"col-md-6\">\r\n                                  <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                </div>\r\n                                <div className=\"col-md-6 pageHeading\" >\r\n                                  Customer\r\n                                </div>\r\n                              </div>\r\n                              <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                              </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                              <div >\r\n                                <div id=\"divToPrint\" className=\"mt4 pdfBody\"  >\r\n\r\n                                  <div className=\"row clearfix\" >\r\n                                    <div className=\"col-md-12\">\r\n                                      <div className=\"pdfHeader\" >Customer Mind Map</div>\r\n                                      <div class=\"table-responsive\">\r\n                                        <table class=\"table table-bordered\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th>Questions Appearing in Mind Journey</th>\r\n                                              <th>Questions Appearing in Mind of</th>\r\n                                              <th data-breakpoints=\"sm xs\">who Gives Answer</th>\r\n                                              <th data-breakpoints=\"sm xs\">Possible Answer</th>\r\n                                              <th data-breakpoints=\"sm xs md\">Choice Made</th>\r\n                                              <th data-breakpoints=\"sm xs md\">Point to be considered</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          {completeData.map((item, i) => {\r\n                                            return <tr>\r\n                                              <td><h5>{item.value0}</h5></td>\r\n                                              <td><h5>{item.value1}</h5></td>\r\n                                              <td><h5>{item.value2}</h5></td>\r\n                                              <td><h5>{item.value3}</h5></td>\r\n                                              <td><h5>{item.value4}</h5></td>\r\n                                              <td><h5>{item.tag0}</h5></td>\r\n                                            </tr>;\r\n                                          })}\r\n                                        </table>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"row clearfix\" className=\"page-break\">\r\n                                    <div className=\"col-md-12\">\r\n                                      <div className=\"pdfHeader\">Customer Mind Map</div>\r\n                                      <div class=\"table-responsive\">\r\n                                        <table class=\"table table-bordered\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th>Point to be Considered</th>\r\n                                              <th>Brief Building Blocks</th>\r\n                                              <th data-breakpoints=\"sm xs\">Owner Ship</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          {allOptions.map((item, i) => {\r\n                                            return <tr>\r\n                                              <td><h5>{item.Point}</h5></td>\r\n                                              <td><h5>{item.Briefblock}</h5></td>\r\n                                              <td><h5>{item.Owener}</h5></td>\r\n                                            </tr>;\r\n                                          })}\r\n                                        </table>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"row clearfix\" className=\"page-break\">\r\n                                    <div className=\"col-md-12\">\r\n                                      <div className=\"pdfHeader\" >Customer Mind Map</div>\r\n                                      <div class=\"table-responsive\">\r\n                                        <table class=\"table table-bordered\">\r\n                                          <thead>\r\n                                            <tr>\r\n                                              <th data-breakpoints=\"sm xs\">Start Date</th>\r\n                                              <th data-breakpoints=\"sm xs md\">Expected Closure Date</th>\r\n                                              <th data-breakpoints=\"sm xs md\">Days</th>\r\n                                              <th data-breakpoints=\"sm xs md\">Weeks</th>\r\n                                            </tr>\r\n                                          </thead>\r\n                                          {allOptions.map((item, i) => {\r\n                                            return <tr>\r\n                                              <td><h5>{item.Start}</h5></td>\r\n                                              <td><h5>{item.End}</h5></td>\r\n                                              <td><h5>{item.Days}</h5></td>\r\n                                              <td><h5>{item.Weekcount}</h5></td>\r\n                                            </tr>;\r\n                                          })}\r\n                                        </table>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </Modal.Body>\r\n                          </PDFExport>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                      ) : (null)}\r\n                      <button type=\"button\" class=\"btn downloadbtn btn-square waves-effect\" onClick={exportPDFWithMethod} >Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i></button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </TabPanel>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/CustomerTable.js",["1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486"],"import React, { useEffect, useState } from 'react';\r\nimport SelectBox from '../components/Select'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ListContainer, ListItem } from \"../components/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragHandle } from \"../components/DragHandle\";\r\nimport List from \"./data\";\r\n\r\nconst Table = props => {\r\n    var s_id = localStorage.getItem('tr_id')\r\n    const [inputListFinal, setInputListFinal] = useState([{ competition: \"\" }]);\r\n    const [inputList, setInputList] = useState([{ competition: \"\" }]);\r\n    const [inputListFinal2, setInputListFinal2] = useState([{}]);\r\n    const [Upid, setUpid] = useState(\"\");\r\n    const [customerList, setCustomerList] = useState([{}]);\r\n    const [Madd, setMadd] = useState(false);\r\n    const [Mupdate, setMupdate] = useState(false);\r\n    const [Mdelete, setMdelete] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    // let formData = props.AllData;\r\n    // console.log(\"All Table Data\", formData)\r\n    let rows = [];\r\n    const [allOptions, setallOptions] = useState([]);\r\n    const [holdValue, setholdValue] = useState([]);\r\n    // let [completeData, setcompleteData] = useState('')\r\n    const [completeData, setcompleteData] = useState('')\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [total, settotal] = useState(0);\r\n    let [DrpValues, setDrpValues] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (!s_id) {\r\n            history.push(\"Not_support\");\r\n        }\r\n\r\n        GetData();\r\n    }, []);\r\n\r\n    const GetData = () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptionsget = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://localhost:9002/masters/customerTab2/${s_id}`, requestOptionsget)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData.data);\r\n                // setcompleteData(resData.data);\r\n                if (resData.status == 200) {\r\n                    console.log(\"Data Added succesfully\")\r\n                }\r\n\r\n                setcompleteData(resData.data);\r\n                console.log(resData.data.length);\r\n                console.log(completeData.length);\r\n\r\n                console.log(\"---resDAta--->\", resData.data[0]);\r\n                let MyValues1 = resData.data;\r\n\r\n                let MyValues = resData.data;\r\n                if (MyValues.length > 0) {\r\n                    // setedituser(true);\r\n                    setUpid(resData.data[0].id);\r\n\r\n                }\r\n                console.log(\"Edit Values\", MyValues);\r\n\r\n                MyValues.map((item, key) => {\r\n                    console.log(\"before Eval\", item.features);\r\n                    let Feature = eval(item.features);\r\n                    let Feature2 = eval(item.features2);\r\n\r\n                    console.log(\"SDfjdskjfn jsdhfkjsdfn\", Feature);\r\n                    console.log(\"SDfjdskjfn jsdhfkjsdfn22\", Feature2);\r\n\r\n                    setCustomerList(Feature);\r\n                    setInputList(Feature);\r\n                    setInputListFinal(Feature)\r\n                    setInputListFinal2(Feature2)\r\n\r\n                });\r\n\r\n                console.log(\"Edit Values\", MyValues1);\r\n            })\r\n            .catch((error) => console.log(\"error\", error))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const updateJson = (featureJson) => {\r\n        console.log(featureJson)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            features: inputListFinal,\r\n            email_id: s_id,\r\n            created_by: s_id,\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            `http://localhost:9002/masters/customerTab2/${s_id}`,\r\n            requestOptions\r\n        )\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                GetData();\r\n\r\n                if (resData.status == 200) {\r\n                    // console.log(\"Values Submitted Succesfully==>\");\r\n                    // setMupdate(true);\r\n                    // setTimeout(() => {\r\n                    //   setMupdate(false);\r\n                    // }, 1000)\r\n                    // props.OnValidate1(true)\r\n\r\n\r\n                    GetData();\r\n\r\n                }\r\n                GetData();\r\n\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n    }\r\n\r\n\r\n    // handle input change\r\n    const handleInputChange = (e, index) => {\r\n        console.log(e.target.id)\r\n        console.log(e.target.name)\r\n        console.log(e.target.value)\r\n        // console.log(e.target.ips)\r\n\r\n        // console.log(index)\r\n\r\n        // if (e.target.value > 9) {\r\n        //   setShowHideErr(false)\r\n        // } else {\r\n        //   setShowHideErr(true);\r\n        //   // alert(Show)\r\n        // }\r\n\r\n        const { name, value, ips } = e.target;\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value---1>\", list);\r\n        list[index][name] = value;\r\n        list[index][\"is_display\"] = 0;\r\n\r\n        console.log(list[index][name]);\r\n        console.log(value + \"val\");\r\n\r\n\r\n        setInputListFinal(list);\r\n        // setcompleteData(list);\r\n\r\n    };\r\n\r\n    const onChange = (i, newInputValue, value) => {\r\n        // holdValue.push({ \"options\": newInputValue, \"id\": value })\r\n        // console.log(\"Pushed data\", holdValue)\r\n        console.log(\"newInputValue\", newInputValue)\r\n        console.log(\"newInputValue\", i)\r\n        console.log(\"newInputValue\", value)\r\n\r\n        // setallOptions(holdValue)\r\n\r\n        // const { name, value, ips } = e.target;\r\n        // const list = [...inputListFinal];\r\n        // console.log(\"Here is the Value---1>\", list);\r\n        // list[index][name] = value;\r\n        // list[index][\"is_display\"] = 0;\r\n\r\n        // console.log(list[index][name]);\r\n        // console.log(value + \"val\");\r\n\r\n\r\n        // setInputListFinal(list);\r\n\r\n    }\r\n\r\n    const handleRemoveClick = (index) => {\r\n        const list = [...inputListFinal];\r\n        setInputListFinal(list);\r\n        list.splice(index, 1);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        let value = [];\r\n        let key = [];\r\n        value.push('competition');\r\n        for (let i = 1; i <= total; i++) {\r\n            value.push(`value${i}`)\r\n        }\r\n        for (let i = 1; i <= total; i++) {\r\n            key.push([`${i}`])\r\n        }\r\n        var pack = function (arr) {\r\n            var length = arr.length,\r\n                result = {},\r\n                i;\r\n            for (i = 0; i < length; i++) {\r\n                result[(i < 10 ? '0' : '') + (i + 1)] = arr[i];\r\n            }\r\n            return result;\r\n        };\r\n        const finalobject = pack(value); //{01: \"one\", 02: \"two\", 03: \"three\"}      \r\n        console.log(\"object is\", finalobject)\r\n        setInputListFinal([...inputListFinal, finalobject]);\r\n        console.log(inputList);\r\n    };\r\n\r\n\r\n    const OnSubmitHandle = () => {\r\n        GetData();\r\n        for (var i = 0; i < inputListFinal.length; i++) {\r\n            if (inputListFinal[i].value0 == \"\" || !inputListFinal[i].value0) {\r\n                // seterrorshow(true);\r\n                return false;\r\n            }\r\n        }\r\n        setCustomerList([...customerList], inputList);\r\n        let competition = [];\r\n        let Values = [];\r\n        // allObject.push(inputList);\r\n        inputList.map((comp, key) => {\r\n            competition.push(comp);\r\n        });\r\n\r\n        customerList.map((item, key) => {\r\n            if (Object.keys(item).length === 3) {\r\n                Values.push(item);\r\n                for (var key in item) {\r\n                    console.log(\"Key Value is\", item);\r\n                    console.log(\"Key Value is\", item[key]);\r\n                    console.log(\"Key Value is\", allObject);\r\n                }\r\n            }\r\n        });\r\n\r\n        var allObject = [...competition, ...Values];\r\n        console.log(\"all datra\", allObject);\r\n        console.log(\"all data inputlist\", inputListFinal);\r\n        console.log(\"all data inputlist2\", inputListFinal2);\r\n\r\n        console.log(completeData.length);\r\n        if (completeData.length === 0) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                features: inputListFinal,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(\r\n                `http://localhost:9002/masters/customerTab2`,\r\n                requestOptions\r\n            )\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully==>\");\r\n                        setMadd(true);\r\n                        setTimeout(() => {\r\n                            setMadd(false);\r\n                        }, 1000)\r\n                        GetData();\r\n                        // props.OnValidateTab1(true);\r\n\r\n\r\n                        //             props.OnValidate1(true)\r\n\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        } else {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                features: inputListFinal,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(\r\n                `http://localhost:9002/masters/customerTab2/${s_id}`,\r\n                requestOptions\r\n            )\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully==>\");\r\n                        setMupdate(true);\r\n                        setTimeout(() => {\r\n                            setMupdate(false);\r\n                        }, 1000)\r\n                        // props.OnValidate1(true)\r\n                        GetData()\r\n                        // props.OnValidateTab1(true);\r\n\r\n\r\n                        // GetallRecords();\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                size=\"sm\"\r\n                show={Mupdate}\r\n                onHide={() => setMupdate(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n            >\r\n                <Modal.Body >Form Update Successful</Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal\r\n                size=\"sm\"\r\n                show={Mdelete}\r\n                onHide={() => setMdelete(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n            >\r\n                <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal\r\n                size=\"sm\"\r\n                show={Madd}\r\n                onHide={() => setMadd(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n            >\r\n                <Modal.Body >Form Saved Successful</Modal.Body>\r\n            </Modal>\r\n\r\n            <div className=\"row clearfix\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n\r\n\r\n                <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                    <div className=\"card p-4 mt-2\">\r\n                        {console.log(completeData.length)}\r\n\r\n                        {completeData ? (\r\n                            <div className=\"body p-5\" style={{ overflowX: \"scroll\" }}>\r\n                                <DragDropContext\r\n                                    onDragEnd={(param) => {\r\n                                        const srcI = param.source.index;\r\n                                        const desI = param.destination?.index;\r\n                                        // const srcIArray = srcI.split(\"o\");\r\n                                        // const desIIArray = desI.split(\"o\");\r\n                                        // console.log(srcIArray)\r\n                                        // console.log(desIIArray)\r\n                                        // console.log(desI)\r\n\r\n                                        if (desI) {\r\n                                            inputListFinal.splice(desI, 0, inputListFinal.splice(srcI, 1)[0]);\r\n                                            List.saveList(inputListFinal);\r\n                                            console.log(inputListFinal)\r\n                                            updateJson(inputListFinal);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <ListContainer>\r\n\r\n                                        <div style={{ marginTop: 20 }}>\r\n                                        </div>\r\n                                        <div className=\"row clearfix ml-3\" >\r\n                                            <div className=\"col-md-2\">\r\n                                                <h2 className=\"card-inside-title text-center\">\r\n                                                    <strong>Questions appearing in mind Journey</strong>\r\n                                                </h2>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <h2 className=\"card-inside-title text-center ml-2\">\r\n                                                    <strong>Question appearing in Mind of</strong>\r\n                                                </h2>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <h2 className=\"card-inside-title text-center ml-5\">\r\n                                                    <strong>Who Gives the answer</strong>\r\n                                                </h2>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <h2 className=\"card-inside-title text-center ml-4\">\r\n                                                    <strong>Possible Answer</strong>\r\n                                                </h2>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <h2 className=\"card-inside-title text-center ml-4\">\r\n                                                    <strong>Choice Made</strong>\r\n                                                </h2>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <h2 className=\"card-inside-title text-center ml-5\">\r\n                                                    <strong>Point to be Considered</strong>\r\n                                                </h2>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <Droppable droppableId=\"droppable-1\">\r\n                                            {(provided, _) => (\r\n                                                <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                                                    {inputListFinal.map((x, i) => {\r\n                                                        console.log(\"The competion sheet\", x)\r\n                                                        return (\r\n                                                            <>\r\n                                                                <Draggable\r\n                                                                    key={x.id}\r\n                                                                    draggableId={\"draggable-\" + i}\r\n                                                                    index={i}\r\n                                                                // recId={x.id}\r\n                                                                >\r\n                                                                    {(provided, snapshot) => (\r\n                                                                        <ListItem\r\n                                                                            ref={provided.innerRef}\r\n                                                                            {...provided.draggableProps}\r\n                                                                            style={{\r\n                                                                                ...provided.draggableProps.style,\r\n                                                                                boxShadow: snapshot.isDragging\r\n                                                                                    ? \"0 0 .4rem #666\"\r\n                                                                                    : \"none\",\r\n                                                                            }}\r\n                                                                        >\r\n\r\n\r\n                                                                            <div className=\"row clearfix flex-nowrap\">\r\n                                                                                <DragHandle {...provided.dragHandleProps} className=\"mr-2\" />\r\n\r\n                                                                                {Array.from({ length: 5 }, (item, index) => {\r\n                                                                                    return (\r\n                                                                                        <>\r\n                                                                                            <div className=\"col-md-2\">\r\n                                                                                                <div className=\"form-group\">\r\n                                                                                                    <input\r\n                                                                                                        type=\"text\"\r\n                                                                                                        className=\"form-control\"\r\n                                                                                                        placeholder=\"0\"\r\n                                                                                                        maxLength={200}\r\n                                                                                                        max={200}\r\n                                                                                                        name={`value${index}`}\r\n                                                                                                        value={x[`value${index}`]}\r\n                                                                                                        onChange={(e) => handleInputChange(e, i)}\r\n                                                                                                        required\r\n                                                                                                    />\r\n\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n\r\n                                                                                        </>\r\n                                                                                    );\r\n                                                                                })}\r\n\r\n                                                                                {Array.from({ length: 1 }, (item, index) => {\r\n                                                                                    return (\r\n                                                                                        <>\r\n                                                                                            {/* {DrpValues.length > 0 ? ( */}\r\n                                                                                            <div className=\"col-lg-2\">\r\n                                                                                                <div className=\"form-group\">\r\n                                                                                                    <div className=\"row clearfix flex-nowrap\">\r\n                                                                                                        {/* <span>{x[`tag${index}`]}</span> */}\r\n                                                                                                        <select className=\"form-control\" name={`tag${index}`} id={x[`${index}`]} value={x[`tag${index}`]} onChange={(e) => handleInputChange(e, i)}>\r\n                                                                                                            {/* {DrpValues.map((item, key) => ( */}\r\n                                                                                                            {/* // console.log(item.vilakshan_journey) */}\r\n                                                                                                            <option value=\"\"></option>\r\n                                                                                                            <option value=\"Undefined\">Undefined</option>\r\n                                                                                                            <option value=\"Current Process Improvement\">Current Process Improvement</option>\r\n                                                                                                            <option value=\"Innovation\">Innovation</option>\r\n                                                                                                            {/* ))} */}\r\n                                                                                                        </select>\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            {/* ) : (null)} */}\r\n                                                                                        </>\r\n                                                                                    );\r\n                                                                                })\r\n                                                                                }\r\n                                                                                <div className=\"col-md-2\">\r\n                                                                                    {inputListFinal.length !== 1 && (\r\n                                                                                        <button\r\n                                                                                            type=\"button\"\r\n                                                                                            className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\"\r\n                                                                                            onClick={() => handleRemoveClick(i)}\r\n                                                                                        >\r\n                                                                                            <strong>REMOVE</strong>\r\n                                                                                        </button>\r\n                                                                                    )}\r\n                                                                                    {inputListFinal.length - 1 === i && (\r\n                                                                                        <button\r\n                                                                                            type=\"button\"\r\n                                                                                            className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                                                                                            onClick={handleAddClick}\r\n                                                                                        >\r\n                                                                                            <strong>ADD</strong>\r\n                                                                                        </button>\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                                {/* <div className=\"col-md-2\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <SelectBox onChangeTag={onChange} keyValue={x.point_to_be_considered} keyid={x.id} />\r\n                                                                            </div>\r\n\r\n                                                                        </div> */}\r\n                                                                            </div>\r\n\r\n\r\n                                                                            {/* <div className=\"col-md-2\">\r\n                                                                            {completeData.length !== 1 && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn btn-raised rembtn btn-square waves-effect m-l-40 \"\r\n                                                                                    onClick={() => handleRemoveClick(i)}\r\n                                                                                >\r\n                                                                                    <strong>REMOVE</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                            {completeData.length - 1 === i && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn  addbtn btn-square waves-effect m-l-40 \"\r\n                                                                                    onClick={handleAddClick}\r\n                                                                                >\r\n                                                                                    <strong>ADD</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                        </div> */}\r\n\r\n                                                                        </ListItem>\r\n                                                                    )}\r\n                                                                </Draggable>\r\n\r\n                                                            </>\r\n                                                        );\r\n\r\n                                                    })}\r\n                                                    {provided.placeholder}\r\n\r\n                                                </div>\r\n                                            )}\r\n                                        </Droppable>\r\n\r\n\r\n                                    </ListContainer>\r\n\r\n                                </DragDropContext>\r\n\r\n\r\n\r\n                                <div style={{ marginTop: 30 }}></div>\r\n\r\n                                {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnSubmitHandle}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button> */}\r\n                                <button type=\"button\" class=\"btn savebtn waves-effect\"\r\n                                    onClick={OnSubmitHandle}>SAVE</button>\r\n                                {completeData.length > 0 ? (<button type=\"button\" class=\"btn viewbtn waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={() => props.OnValidateTab1(true)}>SUBMIT <i className=\"ml-1 zmdi zmdi-check \" /> </button>\r\n                                ) : null}\r\n                            </div>\r\n                        ) : (null)}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Table;","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/components/DragHandle.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan09/data.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/components/styles.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Validate.js",["1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553","1554","1555","1556","1557"],"import React, { useState, useEffect } from 'react';\r\nimport ProgressBar from '../../components/ProgressBar';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport axios from 'axios';\r\nimport ReactExport from \"react-data-export\";\r\nimport { getReflectionData } from \"../apiServices/reflectionapi\";\r\nimport { getDiscoveryData } from \"../apiServices/discovery\";\r\nimport { getRebirthData } from \"../apiServices/rebirthapi\";\r\nimport { getRebirthCommonData } from \"../apiServices/rebirthCommon\"\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalSubmit from '../../components/ModalSubmit';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jsPDF from 'jspdf';\r\n\r\nexport default function Validate() {\r\n    var s_id = localStorage.getItem('tr_id')\r\n\r\n    const history = useHistory();\r\n    const ExcelFile = ReactExport.ExcelFile;\r\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [showData, setShowData] = useState(false);\r\n    const [ValidateData, setValidateData] = useState(\"\");\r\n    let [rebirthcommom, setrebirthcommom] = useState('')\r\n    let [reflectiondata, setreflectiondata] = useState([]);\r\n    let [discoverydata, setdiscoverydata] = useState([]);\r\n    let [rebirthdata, setrebirthdata] = useState([]);\r\n    let [childhood, setchildhood] = useState('');\r\n    let [postEducation, setpostEducation] = useState('')\r\n    let [postMarriage, setpostMarriage] = useState('')\r\n    let [CommonPointer, setCommonPointer] = useState('')\r\n    let [CiteExample, setCiteExample] = useState('')\r\n    let [PreciseTalk, setPreciseTalk] = useState('')\r\n    let [SelfTalk, setSelfTalk] = useState('')\r\n    let [Mananf, setManan] = useState('')\r\n    let [Sadhnaf, setSadhna] = useState('')\r\n    let [Search, setSearch] = useState('')\r\n    let [Spritualf, setSpritual] = useState('')\r\n    let [ShowPdf, setShowPdf] = useState(0)\r\n\r\n    const [BeliverOTP, setBeliverOTP] = useState('');\r\n    const [transOTP, setTransOTP] = useState('');\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [secondsfortrans, setsecondsfortrans] = useState(0);\r\n    const [ShowResetOTP, setShowResetOTP] = useState(true);\r\n    const [ShowResetOTPTrans, setShowResetOTPTrans] = useState(true);\r\n    const [showConfirmBox, setshowConfirmBox] = useState(false);\r\n    const [showHide, setshowHide] = useState(false);\r\n    const [viewModal, setviewModal] = useState(false);\r\n\r\n    const [completed, setCompleted] = useState(0);\r\n    const [Question1, setQuestion1] = useState('Not Sure');\r\n    const [Question2, setQuestion2] = useState('Not Sure');\r\n    const [Question3, setQuestion3] = useState('Not Sure');\r\n    const [Question4, setQuestion4] = useState('Not Sure');\r\n    const [Question5, setQuestion5] = useState('Not Sure');\r\n    const [Question6, setQuestion6] = useState('Not Sure');\r\n    const [Question7, setQuestion7] = useState('Not Sure');\r\n    const [Question8, setQuestion8] = useState('Not Sure');\r\n    const [Question9, setQuestion9] = useState('Not Sure');\r\n    const [Question10, setQuestion10] = useState('Not Sure');\r\n    const [Question11, setQuestion11] = useState('Not Sure');\r\n    const [Question12, setQuestion12] = useState('Not Sure');\r\n    const [Question13, setQuestion13] = useState('Not Sure');\r\n    const [Question14, setQuestion14] = useState('Not Sure');\r\n    const [Question15, setQuestion15] = useState('Not Sure');\r\n\r\n    const [varifiedValue, setvarifiedValue] = useState(\"\");\r\n    const [Upid, setUpid] = useState(\"\");\r\n    const [varval, setvarval] = useState(\"\");\r\n    const [EnteredBeliverOTP, setEnteredBeliverOTP] = useState('');\r\n    const [showWrongOtp, setshowWrongOtp] = useState(false);\r\n\r\n    const [belEmail, setbelEmail] = useState(\"\");\r\n    const [transEmail, settransEmail] = useState(\"\");\r\n    const [bypassEmail, setbypassEmail] = useState(\"\");\r\n    const [beliverName, setbeliverName] = useState(\"\");\r\n\r\n    const [pdfShowDes, setpdfShowDes] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (!s_id) {\r\n            history.push(\"Not_support\");\r\n        }\r\n        GetallRecords();\r\n        HandleReflectionDownload();\r\n        HandleDiscoveryDownload();\r\n        HandleRebirthDownload();    \r\n        HandleRebirthCommonDownload();\r\n    }, [])\r\n\r\n\r\n    \r\n    const getDataByUid = () => {\r\n        var myGetHeaders = new Headers();\r\n        myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptions = {\r\n            method: \"GET\",\r\n            headers: myGetHeaders,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            `http://localhost:9002/masters/parivartan_user/user/${s_id}`,\r\n            requestOptions\r\n        )\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.data.id > 0) {\r\n                    setbelEmail(resData.data[0].beliver_email);\r\n                    settransEmail(resData.data[0].tranz_email);\r\n                    setbypassEmail(resData.data[0].bypass_email);\r\n                    setbeliverName(resData.data[0].beliver_name);\r\n                }\r\n            });\r\n    }\r\n    const GetallRecords = () => {\r\n        setCompleted(0);\r\n        let Count = 0;\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptionsrichtext = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            `http://localhost:9002/masters/parivartan_user/${s_id}`,\r\n            requestOptionsrichtext\r\n        )\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                // if (resData.data.id > 0) {\r\n                // console.log(\"ttt--->\", resData.data[0].bypass_email);\r\n                setbelEmail(resData.data[0].beliver_email);\r\n                settransEmail(resData.data[0].tranz_email);\r\n                setbypassEmail(resData.data[0].bypass_email);\r\n                setbeliverName(resData.data[0].beliver_name);\r\n\r\n                // }\r\n\r\n\r\n            });\r\n        fetch(`http://localhost:9002/masters/validate/user/${s_id}`, requestOptionsrichtext)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData.data);\r\n                setvarifiedValue(resData.data[0].verified);\r\n                setUpid(resData.data[0].id);\r\n\r\n                // alert(resData.data[0].verified)\r\n                const validateData = resData.data;\r\n                validateData.map((item, key) => {\r\n                    setShowPdf(item.submit_flag);\r\n                    setQuestion1(item.question1);\r\n                    setQuestion2(item.question2);\r\n                    setQuestion3(item.question3);\r\n                    setQuestion4(item.question4);\r\n                    setQuestion5(item.question5);\r\n                    setQuestion6(item.question6);\r\n                    setQuestion7(item.question7);\r\n                    setQuestion8(item.question8);\r\n                    setQuestion9(item.question9);\r\n                    setQuestion10(item.question10);\r\n                    setQuestion11(item.question11);\r\n                    setQuestion12(item.question12);\r\n                    setQuestion13(item.question13);\r\n                    setQuestion14(item.question14);\r\n                    setQuestion15(item.question15);\r\n                    if (item.question1 == \"Yes\") { Count++; }\r\n                    if (item.question2 == \"Yes\") { Count++; }\r\n                    if (item.question3 == \"Yes\") { Count++; }\r\n                    if (item.question4 == \"Yes\") { Count++; }\r\n                    if (item.question5 == \"Yes\") { Count++; }\r\n                    if (item.question6 == \"Yes\") { Count++; }\r\n                    if (item.question7 == \"Yes\") { Count++; }\r\n                    if (item.question8 == \"Yes\") { Count++; }\r\n                    if (item.question9 == \"Yes\") { Count++; }\r\n                    if (item.question10 == \"Yes\") { Count++; }\r\n                    if (item.question11 == \"Yes\") { Count++; }\r\n                    if (item.question12 == \"Yes\") { Count++; }\r\n                    if (item.question13 == \"Yes\") { Count++; }\r\n                    if (item.question14 == \"Yes\") { Count++; }\r\n                    if (item.question15 == \"Yes\") { Count++; }\r\n                })\r\n                setCompleted(Count * 6.66666667);\r\n                setValidateData(resData.data);\r\n                console.log('====================================');\r\n                console.log(Count * 6.66666667);\r\n                console.log('====================================');\r\n                setShowData(true);\r\n            })\r\n            .catch((error) => console.log(\"error\", error))\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        // setShowData(false);\r\n        setviewModal(false);\r\n    };\r\n\r\n\r\n    const HandleReflectionDownload = async () => {\r\n        const data = await getReflectionData();\r\n        data.map((item, key) => {\r\n            let childdata;\r\n            let posteductaion;\r\n            let postmarriage;\r\n            childdata = item.child_hood;\r\n            posteductaion = item.post_education;\r\n            postmarriage = item.post_marriage;\r\n            const regEx = /(<([^>]+)>)/ig;\r\n            setchildhood(childdata.replace(regEx, ''));\r\n            setpostEducation(posteductaion.replace(regEx, ''));\r\n            setpostMarriage(postmarriage.replace(regEx, ''));\r\n        })\r\n        setreflectiondata(data);\r\n    }\r\n    const HandleDiscoveryDownload = async () => {\r\n        const data1 = await getDiscoveryData();\r\n        data1.map((item, key) => {\r\n            let commonpointer;\r\n            let selftalk;\r\n            let citeexample;\r\n            let precisetalk;\r\n            commonpointer = item.common_pointers;\r\n            selftalk = item.self_talk;\r\n            citeexample = item.cite_examples;\r\n            precisetalk = item.precise_talk;\r\n            const regEx = /(<([^>]+)>)/ig;\r\n            setSelfTalk(selftalk.replace(regEx, ''))\r\n            setPreciseTalk(precisetalk.replace(regEx, ''))\r\n            setCiteExample(citeexample.replace(regEx, ''))\r\n            setCommonPointer(commonpointer.replace(regEx, ''))\r\n        })\r\n        setdiscoverydata(data1);\r\n    }\r\n    const HandleRebirthDownload = async () => {\r\n        const data2 = await getRebirthData();\r\n        data2.map((item, key) => {\r\n            let manandata;\r\n            let sadhnadata;\r\n            let spritualdata;\r\n            let SearchData;\r\n            manandata = item.Manan;\r\n            sadhnadata = item.Sadhana;\r\n            spritualdata = item.Spiritual;\r\n            SearchData = eval(item.Search);;\r\n            const regEx = /(<([^>]+)>)/ig;\r\n            setManan(manandata.replace(regEx, ''))\r\n            setSpritual(spritualdata.replace(regEx, ''))\r\n            setSadhna(sadhnadata.replace(regEx, ''))\r\n            setSearch(SearchData)\r\n        })\r\n        setrebirthdata(data2);\r\n    }\r\n    const HandleRebirthCommonDownload = async () => {\r\n        const commom = await getRebirthCommonData();\r\n        setrebirthcommom(commom)\r\n    }\r\n\r\n    function createData(name, calories, fat, carbs, protein) {\r\n        return { name, calories, fat, carbs, protein };\r\n    }\r\n\r\n    const rows = [\r\n        createData('1 ) Are you resonating with what you have written as your Manan Statement', Question1),\r\n        createData('2 ) Is the Manan statement what you really believe in?', Question2),\r\n        createData('3) Is your lifestory resonating with your Manan statement?', Question3),\r\n        createData('4 ) Situation: If you do not have single penny in your bank account, will the same Manan motivate you forever?', Question4),\r\n        createData('5 ) Situation: If you have everything what you always wanted/desried, will the Manan statement motivate you forever?', Question5),\r\n        createData('6 ) Is the Manan motivating you now?', Question6),\r\n        createData('7 ) Have you written all the possible examples to prove your manan?', Question7),\r\n        createData('8 ) Do you think, Sadhana statement is the only way you can deliver your Manan?', Question8),\r\n        createData('9 ) Is your Sadhana connecting to your Business?', Question9),\r\n        createData('10 ) Do you really deliver every word written in SOCH ( Manan + Sadhana) with your Business?', Question10),\r\n        createData('11 ) Are all the Spiritual Foundations that you have written are followed by you in every step of life? ', Question11),\r\n        createData('12 ) Have you written all the Spriritual Foundations and their Explaination with Examples with complete geneunity?    ', Question12),\r\n        createData('13 ) While making tough choices, were these Spiritual Foundations basis to your decision?', Question13),\r\n        createData('14 ) Situation: Discuss with your closest family member/friends/employees to judge whether the foundations really reflect you or not?    ', Question14),\r\n        createData('15 ) Are you content with what has come out - Manan, Sadhana and Spiritual Foundation', Question15),\r\n    ];\r\n\r\n    // const exportPDFWithMethod = () => {\r\n    //     if (pdfExportComponent.current) {\r\n    //         pdfExportComponent.current.save();\r\n    //     }\r\n    // };\r\n\r\n\r\n    const exportPDFWithMethod = () => {\r\n        setpdfShowDes(1);\r\n        setTimeout(() => {\r\n            // alert(pdfShowDes);\r\n            if (pdfExportComponent.current) {\r\n                pdfExportComponent.current.save();\r\n\r\n                setTimeout(() => {\r\n                    setpdfShowDes(0);\r\n                }, 100)\r\n            }\r\n        }, 100)\r\n\r\n    };\r\n\r\n    const ViewModel = () => {\r\n        setviewModal(true);\r\n    };\r\n\r\n    const getRandomNum = (length) => {\r\n        var randomNum =\r\n            (Math.pow(10, length).toString().slice(length - 1) +\r\n                Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n        return randomNum;\r\n    }\r\n    const OnVerifyHandle = () => {\r\n        // alert(EnteredBeliverOTP);\r\n        GetallRecords()\r\n\r\n        if (BeliverOTP == EnteredBeliverOTP) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                verifiedVal: \"1\",\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://localhost:9002/masters/validate/verify/${Upid}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    // console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"updated\");\r\n                        // setshowConfirmBox(true);\r\n                        setshowConfirmBox(true);\r\n                        setShowResetOTP(true);\r\n                        setBeliverOTP(0)\r\n                        setTransOTP(0)\r\n                        setSeconds(0)\r\n                        GetallRecords()\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        } else if (BeliverOTP != EnteredBeliverOTP) {\r\n            setshowWrongOtp(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n            GetallRecords()\r\n        } else {\r\n            // setshowConfirmBox(true);\r\n            GetallRecords()\r\n            return false;\r\n        }\r\n\r\n        // setShowResetOTPTrans(true)\r\n        // setSeconds(0)\r\n        // setsecondsfortrans(60)\r\n    }\r\n    const ResendBeliverDataTrans = () => {\r\n        setShowResetOTPTrans(true)\r\n        setSeconds(0)\r\n        setsecondsfortrans(60)\r\n    }\r\n    const HandleInputChange = (event) => {\r\n        setEnteredBeliverOTP(event.target.value);\r\n    }\r\n    const HandleSubmit = () => {\r\n        // alert(varifiedValue)\r\n        if (varifiedValue == 1) {\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n        } else {\r\n            const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n            const sid = \"transganization2\"\r\n            const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n            const from = \"9850674452\"\r\n            const to = \"8767984910\"\r\n            const body = \"Good Evening\"\r\n            var formdata = new FormData();\r\n            formdata.append('From', from)\r\n            formdata.append('To', to)\r\n            formdata.append('Body', body)\r\n            const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n            axios.post(url,\r\n                {\r\n                    withCredentials: true,\r\n                    headers: {\r\n                        \"Accept\": \"application/x-www-form-urlencoded\",\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                    },\r\n                    data: formdata\r\n                },\r\n            )\r\n                .then((res) => {\r\n                    console.log(`statusCode: ${res.statusCode}`)\r\n                    console.log(res)\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                })\r\n\r\n            setshowHide(true);\r\n            setTimeout(() => {\r\n                setshowHide(false);\r\n            }, 1000)\r\n\r\n            setShowResetOTP(true);\r\n            const beliver = getRandomNum(6);\r\n            setBeliverOTP(beliver)\r\n            const trans = getRandomNum(6);\r\n            setTransOTP(trans)\r\n            setSeconds(60)\r\n\r\n\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                otp: beliver,\r\n                belEmail: belEmail,\r\n                transEmail: transEmail,\r\n                bypassEmail: bypassEmail\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(\r\n                `http://localhost:9002/masters/beliverConceptsSend`,\r\n                requestOptions\r\n            )\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Check\");\r\n\r\n                    }\r\n                    // GetallRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        }\r\n    }\r\n    const ResendBeliverData = () => {\r\n        // alert(varifiedValue)\r\n        if (varifiedValue == 1) {\r\n            setshowConfirmBox(true);\r\n            setShowResetOTP(true);\r\n            setBeliverOTP(0)\r\n            setTransOTP(0)\r\n            setSeconds(0)\r\n        } else {\r\n            const key = \"5afd5b5bcab935161bee432f1bc21d1f043787455f6bb135\"\r\n            const sid = \"transganization2\"\r\n            const token = \"0c390c278d2f9805143307a9befedf54f66343499ed0786c\"\r\n            const from = \"9850674452\"\r\n            const to = \"8767984910\"\r\n            const body = \"Good Evening\"\r\n            var formdata = new FormData();\r\n            formdata.append('From', from)\r\n            formdata.append('To', to)\r\n            formdata.append('Body', body)\r\n            const url = \"https://\" + key + \":\" + token + \"@api.exotel.in/v1/Accounts/\" + sid + \"/Sms/send.json\"\r\n            axios.post(url,\r\n                {\r\n                    withCredentials: true,\r\n                    headers: {\r\n                        \"Accept\": \"application/x-www-form-urlencoded\",\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                    },\r\n                    data: formdata\r\n                },\r\n            )\r\n                .then((res) => {\r\n                    console.log(`statusCode: ${res.statusCode}`)\r\n                    console.log(res)\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                })\r\n\r\n            setshowHide(true);\r\n            setTimeout(() => {\r\n                setshowHide(false);\r\n            }, 1000)\r\n\r\n            setShowResetOTP(true);\r\n            const beliver = getRandomNum(6);\r\n            setBeliverOTP(beliver)\r\n            const trans = getRandomNum(6);\r\n            setTransOTP(trans)\r\n            setSeconds(60)\r\n\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                otp: beliver,\r\n                belEmail: belEmail,\r\n                transEmail: transEmail,\r\n                bypassEmail: bypassEmail\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(\r\n                `http://localhost:9002/masters/beliverConceptsSend`,\r\n                requestOptions\r\n            )\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Check\");\r\n\r\n                    }\r\n                    // GetallRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        }\r\n    }\r\n    const OnVerifyHandleConfirm = () => {\r\n        setShowResetOTPTrans(false)\r\n        setshowConfirmBox(true);\r\n    }\r\n    const HandleConfirmation = () => {\r\n        // setShowPdf(1)\r\n        setshowConfirmBox(false);\r\n    }\r\n\r\n\r\n    const HandleSave = () => {\r\n        // alert(ValidateData.length)\r\n        if (ValidateData.length === 0) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var rawrich = JSON.stringify({\r\n                question1: Question1,\r\n                question2: Question2,\r\n                question3: Question3,\r\n                question4: Question4,\r\n                question5: Question5,\r\n                question6: Question6,\r\n                question7: Question7,\r\n                question8: Question8,\r\n                question9: Question9,\r\n                question10: Question10,\r\n                question11: Question11,\r\n                question12: Question12,\r\n                question13: Question13,\r\n                question14: Question14,\r\n                question15: Question15,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n                updated_by: s_id,\r\n                submit_flag: s_id\r\n            });\r\n            var requestOptionsrichtext = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: rawrich,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://localhost:9002/masters/validate/`, requestOptionsrichtext)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Data Updated Successfully\")\r\n                        setSmShow(true);\r\n                        setTimeout(() => {\r\n                            setSmShow(false);\r\n                        }, 1000)\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error))\r\n        } else {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var rawrich = JSON.stringify({\r\n                question1: Question1,\r\n                question2: Question2,\r\n                question3: Question3,\r\n                question4: Question4,\r\n                question5: Question5,\r\n                question6: Question6,\r\n                question7: Question7,\r\n                question8: Question8,\r\n                question9: Question9,\r\n                question10: Question10,\r\n                question11: Question11,\r\n                question12: Question12,\r\n                question13: Question13,\r\n                question14: Question14,\r\n                question15: Question15,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n                updated_by: s_id,\r\n                submit_flag: s_id\r\n            });\r\n            var requestOptionsrichtext = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: rawrich,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://localhost:9002/masters/validate/${Upid}`, requestOptionsrichtext)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Data Updated Successfully\")\r\n                        setSmShow(true);\r\n                        setTimeout(() => {\r\n                            setSmShow(false);\r\n                        }, 1000)\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error))\r\n        }\r\n\r\n    }\r\n    const pdfExportComponent = React.useRef(null);\r\n    return (\r\n        <>\r\n\r\n            <ModalSubmit show={showHide} />\r\n            <Modal\r\n                size=\"sm\"\r\n                show={smShow}\r\n                onHide={() => setSmShow(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n            >\r\n                <Modal.Body >Form Saved Successful</Modal.Body>\r\n            </Modal>\r\n\r\n            <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n                <button type=\"submit\" class=\" ml-3 btn savebtn waves-effect\" onClick={HandleSave}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /></button>\r\n\r\n                <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                        <div className=\"card p-4 mt-2\">\r\n                            <div class=\"modal fade\" id=\"largeModal\" tabindex=\"-1\" role=\"dialog\">\r\n                                <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                                    <div class=\"modal-content\">\r\n                                        <div class=\"modal-header\">\r\n                                        </div>\r\n                                        <div class=\"modal-body p-5\">\r\n                                            {seconds == 60 && ShowResetOTP ? (\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <h4 class=\"title\" id=\"largeModalLabel\">Verification For Believer</h4>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <CountdownCircleTimer\r\n                                                            isPlaying\r\n                                                            duration={60}\r\n                                                            onComplete={() => {\r\n                                                                setShowResetOTP(false)\r\n                                                                setshowConfirmBox(false)\r\n                                                            }}\r\n                                                            size={90}\r\n                                                            colors={[\r\n                                                                ['#004777', 0.33],\r\n                                                                ['#F7B801', 0.33],\r\n                                                                ['#A30000', 0.33],\r\n                                                            ]}\r\n                                                        >\r\n                                                            {({ remainingTime }) => remainingTime}\r\n                                                        </CountdownCircleTimer>\r\n                                                    </div>\r\n                                                    <div style={{ marginTop: 30 }}>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Believer OTP\" name=\"firstName\" value={BeliverOTP} />\r\n\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Beliver OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnVerifyHandle} >Verify </button>\r\n                                                        <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (null)}\r\n                                            {secondsfortrans == 60 && ShowResetOTPTrans ? (\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <h4 class=\"title\" id=\"largeModalLabel\">Verification For Transganizer</h4>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <CountdownCircleTimer\r\n                                                            isPlaying\r\n                                                            duration={60}\r\n                                                            onComplete={() => {\r\n                                                                setShowResetOTPTrans(0)\r\n                                                            }}\r\n                                                            size={90}\r\n                                                            colors={[\r\n                                                                ['#004777', 0.33],\r\n                                                                ['#F7B801', 0.33],\r\n                                                                ['#A30000', 0.33],\r\n                                                            ]}\r\n                                                        >\r\n                                                            {({ remainingTime }) => remainingTime}\r\n                                                        </CountdownCircleTimer>\r\n                                                    </div>\r\n                                                    <div style={{ marginTop: 30 }}>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Transganizer OTP\" name=\"firstName\" value={transOTP} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Transganizer OTP\" name=\"EnteredBeliverOTP\" onChange={HandleInputChange} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={OnVerifyHandleConfirm}>Verify </button>\r\n                                                        <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">CLOSE</button>\r\n                                                    </div>\r\n                                                </div>) : (null)}\r\n                                            {showConfirmBox ? (\r\n                                                <div>\r\n                                                    <h4 class=\"title\" id=\"largeModalLabel\">Confirmation </h4>\r\n                                                    Are You Sure You Want To Submit!!\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button>\r\n                                                        <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (null)}\r\n\r\n                                            {showWrongOtp ? (\r\n                                                <div>\r\n                                                    <h4 class=\"title\" id=\"largeModalLabel\">Wrong OTP </h4>\r\n                                                    You Have Entered Wrong OTP!!\r\n                                                    <div class=\"modal-footer\">\r\n                                                        {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" data-dismiss=\"modal\" onClick={HandleConfirmation}>Confirm </button> */}\r\n                                                        <button type=\"button\" class=\"btn viewbtn waves-effect\" data-dismiss=\"modal\">Cancel</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (null)}\r\n                                            {!ShowResetOTP ? (\r\n                                                <div>\r\n                                                    <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                                                    </h4>\r\n                                                    <button type=\"submit\" class=\"btn waves-effect\" onClick={ResendBeliverData}>RESEND OTP For Beliver </button>\r\n                                                </div>\r\n                                            ) : (null)}\r\n                                            {!ShowResetOTPTrans && !showConfirmBox ? (\r\n                                                <div>\r\n                                                    <h4 class=\"title\" id=\"largeModalLabel\">Resend Verification Code\r\n                                                    </h4>\r\n                                                    <button type=\"submit\" class=\"btn btn-success  waves-effect\" onClick={ResendBeliverDataTrans}>RESEND OTP For Transaganiser </button>\r\n                                                </div>\r\n                                            ) : (null)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"header\">\r\n                                <h2><strong>Ask yourself these Questions | Select your answers genuinely for better effectiveness of this activity</strong></h2>\r\n                                {completed == 0 ? (null) : (\r\n                                    <ProgressBar bgcolor={\"#a3238e\"} completed={Math.ceil(completed)} />\r\n                                )}\r\n                            </div>\r\n                            {/* {rebirthcommom && reflectiondata && childhood && postEducation && postMarriage && discoverydata && CommonPointer && CiteExample && PreciseTalk && SelfTalk && Spritualf && Sadhnaf && Mananf && showData ? ( */}\r\n                            <div className=\"body\">\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong></strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>1 ) Are you resonating with what you have written as your Manan Statement?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" name=\"Question1\" onChange={(event) => {\r\n                                                setQuestion1(event.target.value);\r\n                                                if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question1}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>2 ) Is the Manan statement what you really believe in?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion2(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question2} >\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>3) Is your lifestory resonating with your Manan statement?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion3(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question3}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>4 ) Situation: If you do not have single penny in your bank account, will the same Manan motivate you forever?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion4(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question4}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>5 ) Situation: If you have everything what you always wanted/desired, will the Manan statement motivate you forever?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion5(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question5}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>6 ) Is the Manan motivating you now?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion6(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question6}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>7 ) Have you written all the possible examples to prove your Manan?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion7(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question7}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>8 ) Do you think, Sadhana statement is the only way you can deliver your Manan?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion8(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question8}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>9 )  Is your Sadhana connecting to your Business?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion9(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question9}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>10 ) Do you really deliver every word written in SOCH ( Manan + Sadhana) with your Business?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion10(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question10}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>11 ) Are all the Spiritual Foundations that you have written are followed by you in every step of life?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion11(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question11}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>12 ) Have you written all the Spiritual Foundations and their Explaination with Examples with complete genuinely?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion12(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question12}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>13 ) While making tough choices, were these Spiritual Foundations basis to your decision?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion13(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question13}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>14 ) Situation: Discuss with your closest family member/friends/employees to judge whether the foundations really reflect you or not?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion14(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question14}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h2 className=\"card-inside-title\"><strong>15 ) Are you content with what has come out - Manan, Sadhana and Spiritual Foundation?</strong></h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-1\">\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"mb-3\">\r\n                                            <select class=\"form-control show-tick\" onChange={(event) => {\r\n                                                setQuestion15(event.target.value); if (event.target.value == 'Yes') {\r\n                                                    setCompleted(completed + 6.66666667)\r\n                                                } else {\r\n                                                    setCompleted(completed - 6.66666667)\r\n                                                }\r\n                                            }} value={Question15}>\r\n                                                <option value='Not Sure'>Not Sure</option>\r\n                                                <option value=\"Yes\">Yes</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                </div>\r\n                                <div style={{ marginTop: 30 }}>\r\n                                </div>\r\n                                {/* <div className=\"container-fluid\"\r\n                                    style={{\r\n                                        position: \"absolute\",\r\n                                        left: \"-3000px\",\r\n                                        top: 0,\r\n                                        backgroundColor:\"green\"\r\n                                    }}>\r\n                                    <PDFExport  style={{backgroundColor:\"red\"}} paperSize=\"A4\" margin=\"1cm\" ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`} forcePageBreak=\".page-break\">\r\n                                        <div className=\"bg-blue\" >\r\n                                            'dklkjhskd\r\n                                            <div id=\"divToPrint\" className=\"mt4\" >\r\n\r\n                                                <div className=\"row clearfix navbar-brand navbar-brand bg-blue-grey\" >\r\n                                                    <div className=\"col-md-12 row\" >\r\n                                                        <div className=\"col-md-6\">\r\n\r\n                                                            <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6\" style={{ alignSelf: 'right', alignContent: 'right', textAlign: 'right', marginTop: '16px', fontWeight: \"bold\" }}>\r\n\r\n                                                            Purpose Discovery\r\n                                                        </div>                                 </div>\r\n\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"pdfHeader\">Reflection</div>\r\n                                                        <div style={{ alignSelf: 'left', alignContent: 'left', textAlign: 'left', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '10px', marginLeft: '0' }}>1. Childhood Life</div>\r\n                                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', borderRadius: \"6px\", marginLeft: '0', padding: \"50px\", margin: '10px', marginTop: '6px' }}>{childhood.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"headText\">2. Post Education, Pre Marriage, Joined Company/Founded Company</div>\r\n                                                        <div className=\"dynamicContent\">{postEducation.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"headText\">3. Post Marriage</div>\r\n                                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', marginLeft: '0', borderRadius: \"6px\", padding: \"50px\", margin: '10px', marginTop: '10px' }}>{postMarriage.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n\r\n\r\n                                                <div className=\"row clearfix\" className=\"page-break\" >\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', border: '1px solid black', marginLeft: '0', padding: \"10px\", margin: '10px', marginTop: '30px' }}>Discovery</div>\r\n                                                        <div className=\"headText\">1. Common Pointers from All Three Stories which you have written in Stage 1\r\n                                                        </div>\r\n                                                        <div className=\"dynamicContent\">{CommonPointer.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"headText\">2. Self Talk / Self Brainstorming\r\n                                                        </div>\r\n                                                        <div className=\"dynamicContent\">{SelfTalk.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"headText\">3. Cite Examples Connecting to Story/Common Pointers\r\n                                                        </div>\r\n                                                        <div className=\"dynamicContent\">{CiteExample.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"headText\">4. Precise Talk\r\n                                                        </div>\r\n                                                        <div className=\"dynamicContent\">{PreciseTalk.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\" className=\"page-break\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', border: '1px solid black', marginLeft: '0', padding: \"10px\", margin: '10px', marginTop: '30px' }}>Rebirth</div>\r\n                                                        <Grid style={{\r\n                                                            maxHeight: \"400px\"\r\n                                                        }} data={Search.slice(0, 100)}>\r\n                                                            <Column field=\"firstName\" title=\"Search for Common Words that you can see in the story\" width=\"420px\" />\r\n                                                        </Grid>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '20px', marginLeft: '0' }}>1. Frame a Manan Statement with Words that resonate the most with you (Summarise Bhavana of Story in One Line)\r\n                                                        </div>\r\n                                                        <div className=\"dynamicContent\">{Mananf.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '20px', marginLeft: '0' }}>2)Frame a Sadhana Statement on how will you deliver your Manan to everyone\r\n                                                        </div>\r\n                                                        <div className=\"dynamicContent\">{Sadhnaf.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '20px', marginLeft: '0' }}>3. List out Spiritual Foundations (Ref: Story, Examples which you have cited already)\r\n                                                        </div>\r\n                                                        <div className=\"dynamicContent\">{Spritualf.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\" className=\"page-break\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', border: '1px solid black', marginLeft: '0', padding: \"10px\", margin: '10px', marginTop: '30px' }}>Validation\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row clearfix\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <TableContainer component={Paper}>\r\n                                                            <Table aria-label=\"simple table\">\r\n                                                                <TableHead>\r\n                                                                    <TableRow>\r\n                                                                        <TableCell width={70}>Questions</TableCell>\r\n                                                                        <TableCell align=\"right\" width={30}>Answers</TableCell>\r\n                                                                    </TableRow>\r\n                                                                </TableHead>\r\n                                                                <TableBody>\r\n                                                                    {rows.map((row) => (\r\n                                                                        <TableRow key={row.name}>\r\n                                                                            <TableCell width={70} component=\"th\" scope=\"row\">\r\n                                                                                {row.name}\r\n                                                                            </TableCell>\r\n                                                                            <TableCell width={30} align=\"right\">{row.calories.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</TableCell>\r\n                                                                        </TableRow>\r\n                                                                    ))}\r\n                                                                </TableBody>\r\n                                                            </Table>\r\n                                                        </TableContainer>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </PDFExport>\r\n                                </div> */}\r\n\r\n                                <div className=\"btnGroups\">\r\n                                    <button type=\"submit\" class=\"btn savebtn waves-effect\" onClick={HandleSave}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /></button>\r\n                                    {/* <button type=\"button\" class=\"btn btn-success  waves-effect\"  data-target=\"#largeModal\">SUBMIT</button>  */}\r\n\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn viewbtn waves-effect\"\r\n                                        onClick={ViewModel}\r\n                                    >\r\n                                        View  <i className=\"ml-1 zmdi zmdi-eye \" /> </button>\r\n\r\n                                    <button type=\"button\" class=\"btn savebtn waves-effect m-r-20\" data-toggle=\"modal\" data-target=\"#largeModal\" onClick={HandleSubmit}>SUBMIT <i class=\"ml-1 zmdi zmdi-check\"></i></button>\r\n\r\n                                    {/* {ShowPdf ? ( */}\r\n                                    {/* <div> */}\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn downloadbtn waves-effect\"\r\n                                        onClick={exportPDFWithMethod}\r\n                                    >\r\n                                        Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                                    </button>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* </div> */}\r\n                                {/* ) : null} */}\r\n                            </div>\r\n                            {/* ) : (null)} */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* View Modal-----------------------> */}\r\n            <Modal\r\n                size=\"lg\"\r\n                show={viewModal}\r\n                onHide={handleClose}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n            >\r\n                <Modal.Header style={{ padding: \"10px\" }}>\r\n                    <div className=\"col-md-12 row\" >\r\n                        <div className=\"col-md-6\">\r\n                            <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                        </div>\r\n                        <div className=\"col-md-6 pageHeading\" >\r\n                            Purpose Discovery\r\n                        </div>\r\n                    </div>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body  >\r\n\r\n                    <div id=\"divToPrint\" className=\"mt4\" >\r\n\r\n                        <div className=\"body pdfBody\"  >\r\n\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"pdfHeader\">Reflection</div>\r\n                                    <div className=\"headText\">1. Childhood Life</div>\r\n                                    <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', borderRadius: \"6px\", marginLeft: '0', padding: \"50px\", margin: '10px', marginTop: '6px' }}>{childhood.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"headText\">2. Post Education, Pre Marriage, Joined Company/Founded Company</div>\r\n                                    <div className=\"dynamicContent\">{postEducation.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"headText\">3. Post Marriage</div>\r\n                                    <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', marginLeft: '0', borderRadius: \"6px\", padding: \"50px\", margin: '10px', marginTop: '10px' }}>{postMarriage.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"body pdfBody\"  >\r\n\r\n                            <div className=\"row clearfix\" className=\"page-break\" >\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"pdfHeader\">Discovery</div>\r\n\r\n                                    <div className=\"headText\">1. Common Pointers from All Three Stories which you have written in Stage 1\r\n                                    </div>\r\n                                    <div className=\"dynamicContent\">{CommonPointer.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"headText\">2. Self Talk / Self Brainstorming\r\n                                    </div>\r\n                                    <div className=\"dynamicContent\">{SelfTalk.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"headText\">3. Cite Examples Connecting to Story/Common Pointers\r\n                                    </div>\r\n                                    <div className=\"dynamicContent\">{CiteExample.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"headText\">4. Precise Talk\r\n                                    </div>\r\n                                    <div className=\"dynamicContent\">{PreciseTalk.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"body pdfBody\"  >\r\n\r\n                            <div className=\"row clearfix\" className=\"page-break\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"pdfHeader\">Rebirth</div>\r\n\r\n                                    {/* <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', border: '1px solid black', marginLeft: '0', padding: \"10px\", margin: '10px', marginTop: '30px' }}>Rebirth</div> */}\r\n                                    <Grid style={{\r\n                                        maxHeight: \"400px\"\r\n                                    }} data={Search.slice(0, 100)}>\r\n                                        <Column field=\"firstName\" title=\"Search for Common Words that you can see in the story\" width=\"420px\" />\r\n                                    </Grid>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '20px', marginLeft: '0' }}>1. Frame a Manan Statement with Words that resonate the most with you (Summarise Bhavana of Story in One Line)\r\n                                    </div>\r\n                                    <div className=\"dynamicContent\">{Mananf.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '20px', marginLeft: '0' }}>2)Frame a Sadhana Statement on how will you deliver your Manan to everyone\r\n                                    </div>\r\n                                    <div className=\"dynamicContent\">{Sadhnaf.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '20px', marginLeft: '0' }}>3. List out Spiritual Foundations (Ref: Story, Examples which you have cited already)\r\n                                    </div>\r\n                                    <div className=\"dynamicContent\">{Spritualf.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"body pdfBody\"  >\r\n\r\n                            <div className=\"row clearfix\" className=\"page-break\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"pdfHeader\">Validation</div>\r\n\r\n                                    {/* <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', border: '1px solid black', marginLeft: '0', padding: \"10px\", margin: '10px', marginTop: '30px' }}>Validation \r\n                                </div>*/}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col-md-12\">\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table aria-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell width={70}>Questions</TableCell>\r\n                                                    <TableCell align=\"right\" width={30}>Answers</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {rows.map((row) => (\r\n                                                    <TableRow key={row.name}>\r\n                                                        <TableCell width={70} component=\"th\" scope=\"row\">\r\n                                                            {row.name}\r\n                                                        </TableCell>\r\n                                                        <TableCell width={30} align=\"right\">{row.calories}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </div>\r\n                            </div>                        </div>\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* PDF-----------------------> */}\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: \"-3000px\",\r\n                    top: 0,\r\n                    color: \"black\",\r\n                }}>\r\n        {pdfShowDes > 0 ? (\r\n                <PDFExport paperSize=\"A4\" ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`} >\r\n                    <Modal.Header style={{ padding: \"10px\" }}>\r\n                        <div className=\"col-md-12 row\" >\r\n                            <div className=\"col-md-6\">\r\n                                <img src=\"../../assets/images/transaganization.png\" width=\"135\" alt=\"Transganization\" />\r\n                            </div>\r\n                            <div className=\"col-md-6\" style={{ padding: \"5px\", fontSize: \"22px\", alignSelf: 'right', alignContent: 'right', textAlign: 'right', marginTop: '16px', fontWeight: \"bold\" }}>\r\n\r\n                                Purpose Discovery\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body  >\r\n\r\n                        <div id=\"divToPrint\" className=\"mt4\" >\r\n\r\n                            <div className=\"body pdfBody\"  >\r\n\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"pdfHeader\">Reflection</div>\r\n                                        <div className=\"headText\">1. Childhood Life</div>\r\n                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', borderRadius: \"6px\", marginLeft: '0', padding: \"50px\", margin: '10px', marginTop: '6px' }}>{childhood.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"headText\">2. Post Education, Pre Marriage, Joined Company/Founded Company</div>\r\n                                        <div className=\"dynamicContent\">{postEducation.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"headText\">3. Post Marriage</div>\r\n                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', marginLeft: '0', borderRadius: \"6px\", padding: \"50px\", margin: '10px', marginTop: '10px' }}>{postMarriage.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"body pdfBody\"  >\r\n\r\n                                <div className=\"row clearfix\" className=\"page-break\" >\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"pdfHeader\">Discovery</div>\r\n\r\n                                        <div className=\"headText\">1. Common Pointers from All Three Stories which you have written in Stage 1\r\n                                        </div>\r\n                                        <div className=\"dynamicContent\">{CommonPointer.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"headText\">2. Self Talk / Self Brainstorming\r\n                                        </div>\r\n                                        <div className=\"dynamicContent\">{SelfTalk.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"headText\">3. Cite Examples Connecting to Story/Common Pointers\r\n                                        </div>\r\n                                        <div className=\"dynamicContent\">{CiteExample.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"headText\">4. Precise Talk\r\n                                        </div>\r\n                                        <div className=\"dynamicContent\">{PreciseTalk.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"body pdfBody\"  >\r\n\r\n                                <div className=\"row clearfix\" className=\"page-break\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"pdfHeader\">Rebirth</div>\r\n\r\n                                        {/* <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', border: '1px solid black', marginLeft: '0', padding: \"10px\", margin: '10px', marginTop: '30px' }}>Rebirth</div> */}\r\n                                        <Grid style={{\r\n                                            maxHeight: \"400px\"\r\n                                        }} data={Search.slice(0, 100)}>\r\n                                            <Column field=\"firstName\" title=\"Search for Common Words that you can see in the story\" width=\"420px\" />\r\n                                        </Grid>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '20px', marginLeft: '0' }}>1. Frame a Manan Statement with Words that resonate the most with you (Summarise Bhavana of Story in One Line)\r\n                                        </div>\r\n                                        <div className=\"dynamicContent\">{Mananf.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '20px', marginLeft: '0' }}>2)Frame a Sadhana Statement on how will you deliver your Manan to everyone\r\n                                        </div>\r\n                                        <div className=\"dynamicContent\">{Sadhnaf.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', padding: \"10px\", margin: '10px', marginTop: '20px', marginLeft: '0' }}>3. List out Spiritual Foundations (Ref: Story, Examples which you have cited already)\r\n                                        </div>\r\n                                        <div className=\"dynamicContent\">{Spritualf.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"body pdfBody\"  >\r\n\r\n                                <div className=\"row clearfix\" className=\"page-break\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"pdfHeader\">Validation</div>\r\n\r\n                                        {/* <div style={{ alignSelf: 'center', alignContent: 'center', textAlign: 'center', fontWeight: 'bold', backgroundColor: 'lightgrey', width: '150', border: '1px solid black', marginLeft: '0', padding: \"10px\", margin: '10px', marginTop: '30px' }}>Validation \r\n            </div>*/}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <TableContainer component={Paper}>\r\n                                            <Table aria-label=\"simple table\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell width={70}>Questions</TableCell>\r\n                                                        <TableCell align=\"right\" width={30}>Answers</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {rows.map((row) => (\r\n                                                        <TableRow key={row.name}>\r\n                                                            <TableCell width={70} component=\"th\" scope=\"row\">\r\n                                                                {row.name}\r\n                                                            </TableCell>\r\n                                                            <TableCell width={30} align=\"right\">{row.calories}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TableContainer>\r\n                                    </div>\r\n                                </div>                        </div>\r\n\r\n                        </div>\r\n                    </Modal.Body>\r\n\r\n                </PDFExport>\r\n        ):(null)}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Discovery.js",["1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573"],"import React, { useState, useEffect } from 'react';\r\nimport Editor from \"../../components/SunEditor\"\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Form(props) {\r\n    const history = useHistory();\r\n    let id = localStorage.getItem(\"tr_id\");\r\n\r\n    let [commonPointer, setcommonPointer] = useState('');\r\n    let [selfTalk, setselfTalk] = useState('');\r\n    let [siteExample, setsiteExample] = useState('');\r\n    let [peciTalk, setpeciTalk] = useState('');\r\n    let [ReflectionData, setReflectionData] = useState('');\r\n    const [showData, setShowData] = useState(false);\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [viewModal, setviewModal] = useState(false);\r\n\r\n    const [ShowPdf, setShowPdf] = useState(false);\r\n    const pdfExportComponent = React.useRef(null);\r\n    const [belConceptDataa, setbelConceptDataa] = useState();\r\n    const [Upid, setUpid] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        var s_id = localStorage.getItem('tr_id')\r\n        if (!id) {\r\n            history.push(\"Not_support\");\r\n        }\r\n\r\n        GetallRecords();\r\n    }, [])\r\n\r\n    const exportPDFWithMethod = () => {\r\n        if (pdfExportComponent.current) {\r\n            pdfExportComponent.current.save();\r\n        }\r\n    };\r\n    const handleClose = () => {\r\n        // setShowData(false);\r\n        setviewModal(false);\r\n    };\r\n\r\n    const ViewModel = () => {\r\n        setviewModal(true);\r\n    };\r\n\r\n    const handleChangeEditorCommon = (newContent) => {\r\n        console.log(newContent)\r\n        setcommonPointer(newContent)\r\n        // setContent(newContent);\r\n    };\r\n    const handleChangeEditorSelf = (newContent) => {\r\n        console.log(newContent)\r\n        setselfTalk(newContent)\r\n        // setContent(newContent);\r\n    };\r\n    const handleChangeEditorSite = (newContent) => {\r\n        console.log(newContent)\r\n        setsiteExample(newContent)\r\n        // setContent(newContent);\r\n    };\r\n    const handleChangeEditorPreci = (newContent) => {\r\n        console.log(newContent)\r\n        setpeciTalk(newContent)\r\n        // setContent(newContent);\r\n    };\r\n\r\n\r\n\r\n\r\n    const HandleSubmitClick = () => {\r\n        if (ReflectionData.length === 0) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                common_pointers: commonPointer,\r\n                self_talk: selfTalk,\r\n                cite_examples: siteExample,\r\n                precise_talk: peciTalk,\r\n                email_id: `${id}`,\r\n                created_by: `${id}`\r\n            })\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://localhost:9002/masters/discovery`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        setSmShow(true);\r\n                        setTimeout(() => {\r\n                            setSmShow(false);\r\n                            props.OnValidateSecond(true)\r\n                        }, 1000)\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        } else {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                common_pointers: commonPointer,\r\n                self_talk: selfTalk,\r\n                cite_examples: siteExample,\r\n                precise_talk: peciTalk,\r\n                email_id: `${id}`,\r\n                created_by: `${id}`\r\n            })\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://localhost:9002/masters/discovery/${Upid}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        setSmShow(true);\r\n                        setTimeout(() => {\r\n                            setSmShow(false);\r\n                            props.OnValidateSecond(true)\r\n                        }, 1000)\r\n                        console.log(\"sdsdf\");\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        }\r\n\r\n    }\r\n\r\n    const GetallRecords = () => {\r\n        var myGetHeaders = new Headers();\r\n        myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptions = {\r\n            method: \"GET\",\r\n            headers: myGetHeaders,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://localhost:9002/masters/discovery/user/${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.data.length > 0) {\r\n                    let MyValues = resData.data;\r\n                    MyValues.map((item, key) => {\r\n                        setcommonPointer(item.common_pointers)\r\n                        setpeciTalk(item.precise_talk);\r\n                        setselfTalk(item.self_talk)\r\n                        setsiteExample(item.cite_examples);\r\n                    })\r\n                    setReflectionData(resData.data);\r\n                    setUpid(resData.data[0].id);\r\n\r\n                }\r\n                setShowData(true);\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                size=\"sm\"\r\n                show={smShow}\r\n                onHide={() => setSmShow(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n            >\r\n                <Modal.Body >Form Saved Successful</Modal.Body>\r\n            </Modal>\r\n\r\n            <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n                <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                        <div className=\"card p-4 mt-2\">\r\n                            {showData ? (\r\n                                <div className=\"body p-5\">\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <h2 className=\"card-inside-title\"><strong>Common Pointers from All Three Stories which you have written in Stage 1</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <Editor contents={commonPointer} getValue={handleChangeEditorCommon} />\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 30 }}>\r\n                                    </div>\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <h2 className=\"card-inside-title\"><strong>Self Talk / Self Brainstorming</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div >\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <Editor contents={selfTalk} getValue={handleChangeEditorSelf} />\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 30 }}>\r\n                                    </div>\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <h2 className=\"card-inside-title\"><strong>Cite Examples Connecting to Story/Common Pointers</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div >\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <Editor contents={siteExample} getValue={handleChangeEditorSite} />\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 30 }}>\r\n                                    </div>\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <h2 className=\"card-inside-title\"><strong>Precise Talk</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div >\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <Editor contents={peciTalk} getValue={handleChangeEditorPreci} />\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 30 }}>\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn savebtn waves-effect\" onClick={HandleSubmitClick}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button>\r\n                                    {/* {ShowPdf ? ( */}\r\n                                    {/* <div>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-primary  waves-effect\"\r\n                                            onClick={exportPDFWithMethod}\r\n                                        >\r\n                                            Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-primary  waves-effect\"\r\n                                            onClick={ViewModel}\r\n                                        >\r\n                                            View  <i className=\"ml-1 zmdi zmdi-eye \" />                                        </button>\r\n                                    </div> */}\r\n                                    {/* ) : null} */}\r\n                                </div>\r\n                            ) : (null)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            {/* For Pdf -----------------------> */}\r\n\r\n\r\n            {/* View Modal-----------------------> */}\r\n            <Modal\r\n                size=\"lg\"\r\n                show={viewModal}\r\n                onHide={handleClose}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row clearfix\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                <div className=\"card\">\r\n                                    <div>\r\n                                        <div id=\"divToPrint\" className=\"mt4\">\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <img\r\n                                                        src=\"../../assets/images/transaganization.png\"\r\n                                                        width=\"135\"\r\n                                                        alt=\"Transganization\"\r\n                                                    />\r\n                                                    <h1\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            marginTop: \"20px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        Purpose Discovery\r\n                                                    </h1>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            backgroundColor: \"lightgrey\",\r\n                                                            width: \"150\",\r\n                                                            border: \"1px solid black\",\r\n                                                            marginLeft: \"0\",\r\n                                                            padding: \"10px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"30px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        Discovery\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"left\",\r\n                                                            alignContent: \"left\",\r\n                                                            textAlign: \"left\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            padding: \"10px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"20px\",\r\n                                                            marginLeft: \"0\",\r\n                                                        }}\r\n                                                    >\r\n                                                        1) Common Pointers from All Three Stories which you have written in Stage 1\r\n\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            backgroundColor: \"lightgrey\",\r\n                                                            width: \"150\",\r\n                                                            border: \"2px solid black\",\r\n                                                            marginLeft: \"0\",\r\n                                                            padding: \"50px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"10px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        {commonPointer.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"left\",\r\n                                                            alignContent: \"left\",\r\n                                                            textAlign: \"left\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            padding: \"10px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"20px\",\r\n                                                            marginLeft: \"0\",\r\n                                                        }}\r\n                                                    >\r\n                                                        2) Self Talk / Self Brainstorming\r\n\r\n\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            backgroundColor: \"lightgrey\",\r\n                                                            width: \"150\",\r\n                                                            border: \"2px solid black\",\r\n                                                            marginLeft: \"0\",\r\n                                                            padding: \"50px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"10px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        {selfTalk.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"left\",\r\n                                                            alignContent: \"left\",\r\n                                                            textAlign: \"left\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            padding: \"10px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"20px\",\r\n                                                            marginLeft: \"0\",\r\n                                                        }}\r\n                                                    >\r\n                                                        3) Cite Examples Connecting to Story/Common Pointers\r\n\r\n\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            backgroundColor: \"lightgrey\",\r\n                                                            width: \"150\",\r\n                                                            marginLeft: \"0\",\r\n                                                            border: \"2px solid black\",\r\n                                                            padding: \"50px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"10px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        {siteExample.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"left\",\r\n                                                            alignContent: \"left\",\r\n                                                            textAlign: \"left\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            padding: \"10px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"20px\",\r\n                                                            marginLeft: \"0\",\r\n                                                        }}\r\n                                                    >\r\n                                                        4) Precise Talk\r\n\r\n\r\n\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            backgroundColor: \"lightgrey\",\r\n                                                            width: \"150\",\r\n                                                            marginLeft: \"0\",\r\n                                                            border: \"2px solid black\",\r\n                                                            padding: \"50px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"10px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        {peciTalk.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <Grid\r\n                                                            style={{\r\n                                                                maxHeight: \"400px\",\r\n                                                            }}\r\n                                                        // data={inputList.slice(0, 2)}\r\n                                                        >\r\n                                                            <Column\r\n                                                                field=\"beliverse_group\"\r\n                                                                title=\"List of Believers Group\"\r\n                                                                width=\"420px\"\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <Grid\r\n                                                            style={{\r\n                                                                maxHeight: \"400px\",\r\n                                                            }}\r\n                                                        // data={inputList2.slice(0, 2)}\r\n                                                        >\r\n                                                            <Column\r\n                                                                field=\"face_of_tribe\"\r\n                                                                title=\"Key Words To Define Face of Your Believer\"\r\n                                                                width=\"420px\"\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                         */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 30 }}></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan01/Reflection.js",["1574","1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport Editor from \"../../components/SunEditor\"\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"../Parivartan.css\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RightSidebar from '../RightSideBar';\r\nimport ReactQuill from \"react-quill\"\r\nimport 'react-quill/dist/quill.snow.css'\r\n\r\nexport default function Form(props) {\r\n    const history = useHistory();\r\n    var s_id = localStorage.getItem(\"tr_id\");\r\n    const [convertedText, setConvertedText] = useState(\"Some default content\");\r\n\r\n    let [childhood, setchildhood] = useState('');\r\n    let [postMarriage, setpostMarriage] = useState('');\r\n    let [postEducation, setpostEducation] = useState('');\r\n    let [ReflectionData, setReflectionData] = useState('');\r\n    const [showData, setShowData] = useState(false);\r\n    const [smShow, setSmShow] = useState(false);\r\n\r\n    const [YourTribe, setYourTribe] = useState(\"\");\r\n    const [PrimaryCustomer, setPrimaryCustomer] = useState(\"\");\r\n    const [FaceBeliver, setFaceBeliver] = useState(\"\");\r\n    const [ShowPdf, setShowPdf] = useState(false);\r\n    const pdfExportComponent = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [viewModal, setviewModal] = useState(false);\r\n    const [belConceptDataa, setbelConceptDataa] = useState();\r\n    const [Upid, setUpid] = useState(\"\");\r\n\r\n    let MyValues;\r\n    useEffect(() => {\r\n        if (!s_id) {\r\n            history.push(\"Not_support\");\r\n        }\r\n\r\n        GetallRecords();\r\n    }, [])\r\n\r\n    const exportPDFWithMethod = () => {\r\n        if (pdfExportComponent.current) {\r\n            pdfExportComponent.current.save();\r\n        }\r\n    };\r\n\r\n    const ViewModel = () => {\r\n        // var regex = /(<([^>]+)>)/ig;\r\n        // childhood.replace(regex, '');\r\n        // const result = chil;\r\n        setviewModal(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setviewModal(false);\r\n        var aat = \"<p>Hello, <b>World</b></p>\";\r\n        var cleanText = aat.replace(/<\\/?[^>]+(>|$)/g, \"\");\r\n        // alert(cleanText);\r\n\r\n    };\r\n\r\n    const handleChangeEditorChild = (newContent) => {\r\n        console.log(\"new content\", newContent)\r\n        setchildhood(newContent)\r\n        // setContent(newContent);\r\n    };\r\n    const handleChangeEditorMarraige = (newContent1) => {\r\n        // console.log(newContent);\r\n        setpostMarriage(newContent1)\r\n        // setContent(newContent);\r\n    };\r\n    const handleChangeEditorEducation = (newContent2) => {\r\n        // console.log(newContent);\r\n        setpostEducation(newContent2)\r\n        // setContent(newContent);\r\n    };\r\n    const GetallRecords = () => {\r\n        var myGetHeaders = new Headers();\r\n        myGetHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptions = {\r\n            method: \"GET\",\r\n            headers: myGetHeaders,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://localhost:9002/masters/reflection/user/${s_id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.data.length > 0) {\r\n                    let MyValues = resData.data;\r\n                    console.log(MyValues)\r\n                    MyValues.map((item, key) => {\r\n                        setchildhood(item.child_hood);\r\n                        setpostEducation(item.post_education);\r\n                        setpostMarriage(item.post_marriage)\r\n                    })\r\n                    setReflectionData(resData.data);\r\n                    setUpid(resData.data[0].id);\r\n\r\n                    console.log(\"yyyyyy\", resData.data)\r\n\r\n                }\r\n\r\n                setShowData(true);\r\n\r\n            })\r\n    }\r\n    const HandleSubmit = () => {\r\n        if (ReflectionData.length === 0) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                child_hood: childhood,\r\n                post_marriage: postMarriage,\r\n                post_education: postEducation,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n            })\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://localhost:9002/masters/reflection/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        setSmShow(true);\r\n                        setTimeout(() => {\r\n                            setSmShow(false);\r\n                            props.OnValidateFirst(true);\r\n                        }, 1000)\r\n                    }\r\n                    GetallRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        } else {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                child_hood: childhood,\r\n                post_marriage: postMarriage,\r\n                post_education: postEducation,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n            })\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://localhost:9002/masters/reflection/${Upid}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        setSmShow(true);\r\n                        setTimeout(() => {\r\n                            setSmShow(false);\r\n                            props.OnValidateFirst(true);\r\n                        }, 1000)\r\n\r\n                        setShowPdf(true);\r\n\r\n                    }\r\n                    GetallRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n                <Modal\r\n                    size=\"sm\"\r\n                    show={smShow}\r\n                    onHide={() => setSmShow(false)}\r\n                    aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                >\r\n                    <Modal.Body >Form Saved Successful</Modal.Body>\r\n                </Modal>\r\n                <div className=\"row clearfix \" >\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 \">\r\n                        <div className=\"card p-4 mt-2\" >\r\n                            {showData ? (\r\n                                <div className=\"body p-5\">\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <h2 className=\"card-inside-title\"><strong>Childhood Life</strong></h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12 \">\r\n                                            <Editor contents={childhood} getValue={handleChangeEditorChild} />\r\n                                            {/* <ReactQuill\r\n                                                theme='snow'\r\n                                                value={childhood}\r\n                                                onChange={handleChangeEditorChild}\r\n                                            /> */}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 30 }}>\r\n                                    </div>\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <h2 className=\"card-inside-title\"><strong>Post Education ,Pre Marriage,Joined Company/Founded Company</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div >\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <Editor contents={postEducation} getValue={handleChangeEditorEducation} />\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 30 }}>\r\n                                    </div>\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <h2 className=\"card-inside-title\"><strong>Post Marriage</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div >\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <Editor contents={postMarriage} getValue={handleChangeEditorMarraige} />\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 30 }}>\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn savebtn waves-effect\" onClick={HandleSubmit}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button>\r\n                                    {/* {ShowPdf ? ( */}\r\n                                    {/* <div>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-primary  waves-effect\"\r\n                                            onClick={exportPDFWithMethod}\r\n                                        >\r\n                                            Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-primary  waves-effect\"\r\n                                            onClick={ViewModel}\r\n                                        >\r\n                                            View  <i className=\"ml-1 zmdi zmdi-eye \" />                                        </button>\r\n                                    </div> */}\r\n                                    {/* ) : null} */}\r\n                                </div>\r\n                            ) : (null)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            {/* View Modal-----------------------> */}\r\n            <Modal\r\n                size=\"lg\"\r\n                show={viewModal}\r\n                onHide={handleClose}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row clearfix\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                <div className=\"card\">\r\n                                    <div>\r\n                                        <div id=\"divToPrint\" className=\"mt4\">\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <img\r\n                                                        src=\"../../assets/images/transaganization.png\"\r\n                                                        width=\"135\"\r\n                                                        alt=\"Transganization\"\r\n                                                    />\r\n                                                    <h1\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            marginTop: \"20px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        Purpose Discovery\r\n                                                    </h1>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            backgroundColor: \"lightgrey\",\r\n                                                            width: \"150\",\r\n                                                            border: \"1px solid black\",\r\n                                                            marginLeft: \"0\",\r\n                                                            padding: \"10px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"30px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        Reflection\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"left\",\r\n                                                            alignContent: \"left\",\r\n                                                            textAlign: \"left\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            padding: \"10px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"20px\",\r\n                                                            marginLeft: \"0\",\r\n                                                        }}\r\n                                                    >\r\n                                                        1) Childhood Life\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            backgroundColor: \"lightgrey\",\r\n                                                            width: \"150\",\r\n                                                            border: \"2px solid black\",\r\n                                                            marginLeft: \"0\",\r\n                                                            padding: \"50px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"10px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        {childhood.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"left\",\r\n                                                            alignContent: \"left\",\r\n                                                            textAlign: \"left\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            padding: \"10px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"20px\",\r\n                                                            marginLeft: \"0\",\r\n                                                        }}\r\n                                                    >\r\n                                                        2) Post Education ,Pre Marriage,Joined Company/Founded Company\r\n\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            backgroundColor: \"lightgrey\",\r\n                                                            width: \"150\",\r\n                                                            border: \"2px solid black\",\r\n                                                            marginLeft: \"0\",\r\n                                                            padding: \"50px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"10px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        {postEducation.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"left\",\r\n                                                            alignContent: \"left\",\r\n                                                            textAlign: \"left\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            padding: \"10px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"20px\",\r\n                                                            marginLeft: \"0\",\r\n                                                        }}\r\n                                                    >\r\n                                                        3) Post Marriage\r\n\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            alignSelf: \"center\",\r\n                                                            alignContent: \"center\",\r\n                                                            textAlign: \"center\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            backgroundColor: \"lightgrey\",\r\n                                                            width: \"150\",\r\n                                                            marginLeft: \"0\",\r\n                                                            border: \"2px solid black\",\r\n                                                            padding: \"50px\",\r\n                                                            margin: \"10px\",\r\n                                                            marginTop: \"10px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        {postMarriage.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, ' ')}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <Grid\r\n                                                            style={{\r\n                                                                maxHeight: \"400px\",\r\n                                                            }}\r\n                                                        // data={inputList.slice(0, 2)}\r\n                                                        >\r\n                                                            <Column\r\n                                                                field=\"beliverse_group\"\r\n                                                                title=\"List of Believers Group\"\r\n                                                                width=\"420px\"\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row clearfix\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <Grid\r\n                                                            style={{\r\n                                                                maxHeight: \"400px\",\r\n                                                            }}\r\n                                                        // data={inputList2.slice(0, 2)}\r\n                                                        >\r\n                                                            <Column\r\n                                                                field=\"face_of_tribe\"\r\n                                                                title=\"Key Words To Define Face of Your Believer\"\r\n                                                                width=\"420px\"\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                         */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 30 }}></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/accrodianinnovation.js",["1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616"],"import React, { useState } from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Editor from \"../../components/SunEditor\"\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst AccrodionTabs = (props) => {\r\n  let formData = props.AllData;\r\n  let optionData = props.Optiondata;\r\n  let rows = [];\r\n  let [Briefblock, setBriefblock] = useState('')\r\n  let [ownership, setownership] = useState(' ');\r\n  let [startDate, setstartDate] = useState('')\r\n  let [expectedDate, setexpectedDate] = useState('')\r\n  let [days, setdays] = useState('')\r\n  let [weaks, setweaks] = useState('')\r\n  let [postorupdate, setpostorupdate] = useState('')\r\n  const [completeData, setcompleteData] = useState('')\r\n  const [open, setOpen] = useState(false);\r\n  const [Accrodianid, setAccrodianid] = useState('');\r\n  const [CMMid, setCMMid] = useState('');\r\n  const [smShow, setSmShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setAccrodianid('')\r\n  };\r\n  const handleChangeEditorBrief = (newContent) => {\r\n    console.log(newContent)\r\n    setBriefblock(newContent);\r\n  }\r\n  const handleChangestartDate = (event) => {\r\n    console.log(event.target.value)\r\n\r\n    setstartDate(event.target.value);\r\n  }\r\n  const handleChangeExpectedDate = (event) => {\r\n\r\n    setexpectedDate(event.target.value);\r\n    let Expected = event.target.value;\r\n    var date1 = startDate;\r\n    var date2 = Expected;\r\n\r\n    // First we split the values to arrays date1[0] is the year, [1] the month and [2] the day\r\n    date1 = date1.split('-');\r\n    date2 = date2.split('-');\r\n    // Now we convert the array to a Date object, which has several helpful methods\r\n    var dt1 = new Date(date1[0], date1[1], date1[2]);\r\n    var dt2 = new Date(date2[0], date2[1], date2[2]);\r\n    setweaks(diff_weeks(dt1, dt2));\r\n    setdays(Math.floor((dt2.getTime() - dt1.getTime()) / (1000 * 60 * 60 * 24)));\r\n\r\n  }\r\n  const handleChangeWeaks = (event) => {\r\n    console.log(event.target.value)\r\n\r\n    setweaks(event.target.value);\r\n  }\r\n  const handleChangeDays = (event) => {\r\n    console.log(event.target.value)\r\n\r\n    setdays(event.target.value);\r\n  }\r\n  const handleChangeOwner = (event) => {\r\n    console.log(event.target.value)\r\n    setownership(event.target.value);\r\n  }\r\n  const GetFormattedDate = (datepara) => {\r\n    var todayTime = new Date(datepara);\r\n    var month = todayTime.getMonth() + 1;\r\n    var day = todayTime.getDate();\r\n    var year = todayTime.getFullYear();\r\n    return month + \"/\" + day + \"/\" + year;\r\n  }\r\n\r\n  const AddBriefBlock = (id) => {\r\n    setBriefblock(\"\")\r\n    setdays(\"\");\r\n    setownership(\"\");\r\n    setstartDate(\"\");\r\n    setexpectedDate(\"\");\r\n    setweaks(\"\");\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/CMMT3/` + `${id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        setCMMid(id)\r\n        console.log(\"Fetched dthe api\", resData.data);\r\n        let response = resData.data;\r\n        setcompleteData(resData.data)\r\n        if (response.length !== 0) {\r\n          response.map((item) => {\r\n            console.log(\"Total Welaks\", item.weeks)\r\n            console.log(item.ownership)\r\n            console.log(item.brief_building_blocks)\r\n            setBriefblock(item.brief_building_blocks)\r\n            setdays(item.days);\r\n            setownership(item.ownership);\r\n            let dateMDY = GetFormattedDate(item.start_date);\r\n            console.log(dateMDY)\r\n            //  let startdateMDY=new Date(item.start_date);\r\n            //  let dateMDY = `${startdateMDY.getFullYear()}-${startdateMDY.getMonth() + 1}-${startdateMDY.getDate()}`;\r\n            setstartDate(item.start_date);\r\n            let enddateMDY = new Date(item.expected_closure_date);\r\n            let dateMDYcon = `${enddateMDY.getFullYear()}-${enddateMDY.getMonth() + 1}-${enddateMDY.getDate()}`;\r\n            setexpectedDate(item.expected_closure_date);\r\n            setweaks(item.weeks);\r\n            setOpen(true);\r\n            setAccrodianid(id);\r\n          })\r\n        } else {\r\n          setOpen(true);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error))\r\n  }\r\n\r\n  const diff_weeks = (dt2, dt1) => {\r\n    var diff = (dt2.getTime() - dt1.getTime()) / 1000;\r\n    diff /= (60 * 60 * 24 * 7);\r\n    return Math.abs(Math.round(diff));\r\n  }\r\n\r\n  const HandleSubmit = () => {\r\n    setOpen(false);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var rawrich = JSON.stringify({\r\n      brief_building_blocks: Briefblock,\r\n      ownership: ownership,\r\n      start_date: startDate,\r\n      expected_closure_date: expectedDate,\r\n      weeks: weaks,\r\n      days: days,\r\n      cmmid: CMMid,\r\n      email_id: \"1\",\r\n      created_by: \"2\"\r\n    })\r\n    // var myHeadersGet = new Headers();\r\n    // myHeadersGet.append(\"Content-Type\", \"application/json\");\r\n    // var requestOptionsget = {\r\n    //   method: \"GET\",\r\n    //   headers: myHeaders,\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(`http://localhost:9002/masters/CMMT3/` + `${Accrodianid}`, requestOptionsget)\r\n    //   .then((response) => response.json())\r\n    //   .then((resData) => {\r\n    //     console.log(\"all Get fetched \", resData.data)\r\n    //     setpostorupdate(resData.data)\r\n    //   })\r\n    if (completeData.length === 0) {\r\n      var requestOptionsget = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/CMMT3`, requestOptionsget)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData.data);\r\n          if (resData.status == 200) {\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n            }, 1000)\r\n            console.log(\"Data Added succesfully POSt\")\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error))\r\n    } else {\r\n      var requestOptionsget = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/CMMT3/` + `${Accrodianid}`, requestOptionsget)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData.data);\r\n          if (resData.status == 200) {\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n            }, 1000)\r\n            console.log(\"Data Added succesfully Update\")\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error))\r\n    }\r\n  }\r\n  if (formData) {\r\n    formData.map((item, key) => {\r\n      if (item.tag0 == \"Innovation\") {\r\n        rows.push(\r\n          <div className=\"row clearfix\">\r\n            <div className=\"col-md-10\">\r\n              <div style={{ marginTop: 10 }}>\r\n              </div>\r\n              <Accordion key={key}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  {/* <Typography >Innovation</Typography> */}\r\n                  <Typography >Questions appearing in mind Journey:{item.value0}</Typography>\r\n\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\" col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>\r\n                            Questions appearing in mind Journey:{item.value0}\r\n                          </strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Question appearing in Mind of:{item.value1}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Who Gives the answer:{item.value2}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Possible Answer:{item.value3}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Choice Made:{item.value4}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <div style={{ marginTop: 10 }}>\r\n              </div>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <button type=\"button\" class=\"btn addbtndark waves-effect\" onClick={() => AddBriefBlock(item.id)}>ADD </button>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <Modal\r\n        size=\"sm\"\r\n        show={smShow}\r\n        onHide={() => setSmShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth maxWidth=\"lg\">\r\n        <DialogTitle id=\"form-dialog-title\">Customer Mind Map</DialogTitle>\r\n        <DialogContent>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Brief Building Blocks</strong>\r\n          </h6>\r\n          <Editor contents={Briefblock} getValue={handleChangeEditorBrief} />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Ownership</strong>\r\n          </h6>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={handleChangeOwner}\r\n              defaultValue={ownership}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Start Date</strong>\r\n          </h6>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            placeholder=\"dd-mm-yyyy\"\r\n            min=\"1997-01-01\"\r\n            defaultValue={startDate}\r\n            onChange={e => handleChangestartDate(e)}\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Expected Closure Date</strong>\r\n          </h6>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            placeholder=\"dd-mm-yyyy\"\r\n            min=\"1997-01-01\"\r\n            defaultValue={expectedDate}\r\n            onChange={handleChangeExpectedDate}\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Days</strong>\r\n          </h6>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            defaultValue={days}\r\n            onChange={handleChangeDays}\r\n            disabled\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Weeks</strong>\r\n          </h6>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            defaultValue={weaks}\r\n            onChange={handleChangeWeaks}\r\n            disabled\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button type=\"button\" class=\"btn btn-success  waves-effect\" onClick={HandleSubmit}>SAVE CHANGES</button>\r\n          <button type=\"button\" class=\"btn btn-danger waves-effect\" onClick={handleClose}>CLOSE</button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {rows}\r\n    </div>\r\n  )\r\n}\r\nexport default AccrodionTabs;","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/accrodianconcept.js",["1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628"],"import React, { useState } from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Editor from \"../../components/SunEditor\"\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst AccrodionTabs = (props) => {\r\n  let formData = props.AllData;\r\n  let optionData = props.Optiondata;\r\n  let rows = [];\r\n  let [Briefblock, setBriefblock] = useState('')\r\n  let [ownership, setownership] = useState(' ');\r\n  let [startDate, setstartDate] = useState(new Date())\r\n  let [expectedDate, setexpectedDate] = useState(new Date())\r\n  let [days, setdays] = useState('')\r\n  let [weaks, setweaks] = useState('')\r\n  let [postorupdate, setpostorupdate] = useState('')\r\n  const [completeData, setcompleteData] = useState('')\r\n  const [open, setOpen] = useState(false);\r\n  const [Accrodianid, setAccrodianid] = useState('');\r\n  const [CMMid, setCMMid] = useState('');\r\n  const [smShow, setSmShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setAccrodianid('')\r\n  };\r\n  const handleChangeEditorBrief = (newContent) => {\r\n    console.log(newContent)\r\n    setBriefblock(newContent);\r\n  }\r\n  const handleChangestartDate = (event) => {\r\n    console.log(event.target.value)\r\n    setstartDate(event.target.value);\r\n  }\r\n  const handleChangeExpectedDate = (event) => {\r\n    setexpectedDate(event.target.value);\r\n    let Expected = event.target.value;\r\n    var date1 = startDate;\r\n    var date2 = Expected;\r\n    // First we split the values to arrays date1[0] is the year, [1] the month and [2] the day\r\n    date1 = date1.split('-');\r\n    date2 = date2.split('-');\r\n    // Now we convert the array to a Date object, which has several helpful methods\r\n    var dt1 = new Date(date1[0], date1[1], date1[2]);\r\n    var dt2 = new Date(date2[0], date2[1], date2[2]);\r\n    setweaks(diff_weeks(dt1, dt2));\r\n    setdays(Math.floor((dt2.getTime() - dt1.getTime()) / (1000 * 60 * 60 * 24)));\r\n  }\r\n  const handleChangeWeaks = (event) => {\r\n    console.log(event.target.value)\r\n\r\n    setweaks(event.target.value);\r\n  }\r\n  const handleChangeDays = (event) => {\r\n    console.log(event.target.value)\r\n\r\n    setdays(event.target.value);\r\n  }\r\n  const handleChangeOwner = (event) => {\r\n    console.log(event.target.value)\r\n    setownership(event.target.value);\r\n  }\r\n  const GetFormattedDate = (datepara) => {\r\n    var todayTime = new Date(datepara);\r\n    var month = todayTime.getMonth() + 1;\r\n    var day = todayTime.getDate();\r\n    var year = todayTime.getFullYear();\r\n    return month + \"/\" + day + \"/\" + year;\r\n  }\r\n\r\n  const AddBriefBlock = (id) => {\r\n    setBriefblock(\"\")\r\n    setdays(\"\");\r\n    setownership(\"\");\r\n    setstartDate(\"\");\r\n    setexpectedDate(\"\");\r\n    setweaks(\"\");\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/CMMT3/` + `${id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        setCMMid(id)\r\n        console.log(\"Fetched dthe api\", resData.data);\r\n        let response = resData.data;\r\n        setcompleteData(resData.data)\r\n        if (response.length !== 0) {\r\n          response.map((item) => {\r\n            console.log(\"Total Welaks\", item.weeks)\r\n            console.log(item.ownership)\r\n            console.log(item.brief_building_blocks)\r\n            setBriefblock(item.brief_building_blocks)\r\n            setdays(item.days);\r\n            setownership(item.ownership);\r\n            let dateMDY = GetFormattedDate(item.start_date);\r\n            console.log(dateMDY)\r\n            setstartDate(item.start_date);\r\n            let enddateMDY = new Date(item.expected_closure_date);\r\n            let dateMDYcon = `${enddateMDY.getFullYear()}-${enddateMDY.getMonth() + 1}-${enddateMDY.getDate()}`;\r\n            setexpectedDate(item.expected_closure_date);\r\n            setweaks(item.weeks);\r\n            setOpen(true);\r\n            setAccrodianid(id);\r\n          })\r\n        } else {\r\n          setOpen(true);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error))\r\n  }\r\n  const diff_weeks = (dt2, dt1) => {\r\n    var diff = (dt2.getTime() - dt1.getTime()) / 1000;\r\n    diff /= (60 * 60 * 24 * 7);\r\n    return Math.abs(Math.round(diff));\r\n  }\r\n\r\n  const HandleSubmit = () => {\r\n    setOpen(false);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var rawrich = JSON.stringify({\r\n      brief_building_blocks: Briefblock,\r\n      ownership: ownership,\r\n      start_date: startDate,\r\n      expected_closure_date: expectedDate,\r\n      weeks: weaks,\r\n      days: days,\r\n      cmmid: CMMid,\r\n      email_id: \"1\",\r\n      created_by: \"2\"\r\n    })\r\n    // var myHeadersGet = new Headers();\r\n    // myHeadersGet.append(\"Content-Type\", \"application/json\");\r\n    // var requestOptionsget = {\r\n    //   method: \"GET\",\r\n    //   headers: myHeaders,\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(`http://localhost:9002/masters/CMMT3/` + `${Accrodianid}`, requestOptionsget)\r\n    //   .then((response) => response.json())\r\n    //   .then((resData) => {\r\n    //     console.log(\"all Get fetched \", resData.data)\r\n    //     setpostorupdate(resData.data)\r\n    //   })\r\n    if (completeData.length === 0) {\r\n      var requestOptionsget = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/CMMT3`, requestOptionsget)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData.data);\r\n          if (resData.status == 200) {\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n            }, 1000)\r\n            console.log(\"Data Added succesfully POSt\")\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error))\r\n    } else {\r\n      var requestOptionsget = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/CMMT3/` + `${Accrodianid}`, requestOptionsget)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData.data);\r\n          if (resData.status == 200) {\r\n            console.log(\"Data Added succesfully Update\")\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n            }, 1000)\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error))\r\n    }\r\n  }\r\n  if (formData) {\r\n    formData.map((item, key) => {\r\n      if (item.tag0 == \"Current Process Improvement\") {\r\n        rows.push(\r\n          <div className=\"row clearfix\">\r\n            <div className=\"col-md-10\">\r\n              <div style={{ marginTop: 10 }}>\r\n              </div>\r\n              <Accordion key={key}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  {/* <Typography >Current Process Improvement</Typography> */}\r\n                  <Typography >Questions appearing in mind Journey:{item.value0}</Typography>\r\n\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\" col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>\r\n                            Questions appearing in mind Journey:{item.value0}\r\n                          </strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Question appearing in Mind of:{item.value1}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Who Gives the answer:{item.value2}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Possible Answer:{item.value3}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Choice Made:{item.value4}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <div style={{ marginTop: 10 }}>\r\n              </div>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <button type=\"button\" class=\"btn addbtndark waves-effect\" onClick={() => AddBriefBlock(item.id)}>ADD </button>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <Modal\r\n        size=\"sm\"\r\n        show={smShow}\r\n        onHide={() => setSmShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth maxWidth=\"lg\">\r\n        <DialogTitle id=\"form-dialog-title\">Customer Mind Map</DialogTitle>\r\n        <DialogContent>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Brief Building Blocks</strong>\r\n          </h6>\r\n          <Editor contents={Briefblock} getValue={handleChangeEditorBrief} />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Ownership</strong>\r\n          </h6>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={handleChangeOwner}\r\n              Value={ownership}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Start Date</strong>\r\n          </h6>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            Value={startDate}\r\n            onChange={e => handleChangestartDate(e)}\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Expected Closure Date</strong>\r\n          </h6>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            Value={expectedDate}\r\n            onChange={handleChangeExpectedDate}\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Days</strong>\r\n          </h6>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            Value={days}\r\n            onChange={handleChangeDays}\r\n            disabled\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Weeks</strong>\r\n          </h6>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            Value={weaks}\r\n            onChange={handleChangeWeaks}\r\n            disabled\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button type=\"button\" class=\"btn btn-success  waves-effect\" onClick={HandleSubmit}>SAVE CHANGES</button>\r\n          <button type=\"button\" class=\"btn btn-danger waves-effect\" onClick={handleClose}>CLOSE</button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {rows}\r\n    </div>\r\n  )\r\n}\r\nexport default AccrodionTabs;","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/components/Select.js",["1629","1630","1631","1632","1633","1634"],"import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport SelectBox from '../../components/Select'\r\n\r\nexport default (props) => {\r\n\r\n  const options = ['Undefined', 'Current Process Improvement', 'Innovation'];\r\n  const onChangeTagSelect = (event, value) => {\r\n    props.onChangeTag(value, props.keyid)\r\n  };\r\n  const getSelectedItem = () => {\r\n    const item = options.find((opt) => {\r\n      if (opt.value == props.keyValue)\r\n        return opt;\r\n    })\r\n    return item || {};\r\n  }\r\n  return (\r\n    <div>\r\n      <Autocomplete\r\n        id=\"controllable-states-demo\"\r\n        defaultValue={props.keyValue} // put your default value here\r\n        options={options}\r\n        style={{ width: 300 }}\r\n        // renderInput={(params) => <TextField {...params}  variant=\"outlined\" />}\r\n        onChange={(event, value) => { onChangeTagSelect(event, value) }} // prints the selected value\r\n        renderInput={params => (\r\n          <TextField {...params} variant=\"outlined\" />\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/accrodion.js",["1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647"],"import React, { useState } from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Editor from \"../../components/SunEditor\"\r\nimport * as moment from \"moment\"\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst AccrodionTabs = (props) => {\r\n  let formData = props.AllData;\r\n  let rows = [];\r\n  let [Briefblock, setBriefblock] = useState('')\r\n  let [ownership, setownership] = useState(' ');\r\n  let [startDate, setstartDate] = useState('')\r\n  let [expectedDate, setexpectedDate] = useState('')\r\n  let [days, setdays] = useState('')\r\n  let [weaks, setweaks] = useState('')\r\n  let [postorupdate, setpostorupdate] = useState('')\r\n  const [completeData, setcompleteData] = useState('')\r\n  const [open, setOpen] = useState(false);\r\n  const [Accrodianid, setAccrodianid] = useState('');\r\n  const [CMMid, setCMMid] = useState('');\r\n  const [smShow, setSmShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setAccrodianid('')\r\n  };\r\n\r\n  const handleChangeEditorBrief = (newContent) => {\r\n    setBriefblock(newContent);\r\n  }\r\n  const handleChangeOwner = (event) => {\r\n    console.log(event.target.value)\r\n    setownership(event.target.value);\r\n  }\r\n\r\n\r\n  const handleChangestartDate = (event) => {\r\n    console.log(event.target.value)\r\n    setstartDate(event.target.value);\r\n  }\r\n\r\n  const handleChangeExpectedDate = (event) => {\r\n    setexpectedDate(event.target.value);\r\n    let expected = event.target.value;\r\n    var date1 = startDate;\r\n    var date2 = expected;\r\n    // First we split the values to arrays date1[0] is the year, [1] the month and [2] the day\r\n    date1 = date1.split('-');\r\n    date2 = date2.split('-');\r\n    // Now we convert the array to a Date object, which has several helpful methods\r\n    var dt1 = new Date(date1[0], date1[1], date1[2]);\r\n    var dt2 = new Date(date2[0], date2[1], date2[2]);\r\n    setweaks(diff_weeks(dt1, dt2));\r\n    setdays(Math.floor((dt2.getTime() - dt1.getTime()) / (1000 * 60 * 60 * 24)));\r\n  }\r\n  const handleChangeWeaks = (event) => {\r\n    setweaks(event.target.value);\r\n  }\r\n  const handleChangeDays = (event) => {\r\n    setdays(event.target.value);\r\n  }\r\n\r\n  const GetFormattedDate = (datepara) => {\r\n    var todayTime = new Date(datepara);\r\n    var month = todayTime.getMonth() + 1;\r\n    var day = todayTime.getDate();\r\n    var year = todayTime.getFullYear();\r\n    return month + \"/\" + day + \"/\" + year;\r\n  }\r\n\r\n  const AddBriefBlock = (id) => {\r\n    setBriefblock(\"\")\r\n    setdays(\"\");\r\n    setownership(\"\");\r\n    setstartDate(\"\");\r\n    setexpectedDate(\"\");\r\n    setweaks(\"\");\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptionsget = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`http://localhost:9002/masters/CMMT3/` + `${id}`, requestOptionsget)\r\n      .then((response) => response.json())\r\n      .then((resData) => {\r\n        setCMMid(id);\r\n        console.log(\"Fetched dthe api\", resData.data);\r\n        let response = resData.data;\r\n        setcompleteData(resData.data);\r\n        if (response.length !== 0) {\r\n          response.map((item) => {\r\n            console.log(\"Total Welaks\", item.weeks)\r\n            console.log(item.ownership)\r\n            console.log(item.brief_building_blocks)\r\n            setBriefblock(item.brief_building_blocks)\r\n            setdays(item.days);\r\n            setownership(item.ownership);\r\n            let dateMDY = moment(item.start_date).format(\"L\");\r\n            setstartDate(item.start_date);\r\n            let Expecteddtae = moment(item.expected_closure_date).format(\"L\")\r\n            setexpectedDate(item.expected_closure_date);\r\n            setweaks(item.weeks);\r\n            setOpen(true);\r\n            setAccrodianid(item.id);\r\n          })\r\n        }\r\n        else {\r\n          setOpen(true);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error))\r\n  }\r\n\r\n  const diff_weeks = (dt2, dt1) => {\r\n    var diff = (dt2.getTime() - dt1.getTime()) / 1000;\r\n    diff /= (60 * 60 * 24 * 7);\r\n    return Math.abs(Math.round(diff));\r\n  }\r\n\r\n  const HandleSubmit = () => {\r\n    setOpen(false);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var rawrich = JSON.stringify({\r\n      brief_building_blocks: Briefblock,\r\n      ownership: ownership,\r\n      start_date: startDate,\r\n      expected_closure_date: expectedDate,\r\n      weeks: weaks,\r\n      days: days,\r\n      cmmid: CMMid,\r\n      email_id: \"1\",\r\n      created_by: \"2\"\r\n    })\r\n    // var myHeadersGet = new Headers();\r\n    // myHeadersGet.append(\"Content-Type\", \"application/json\");\r\n    // var requestOptionsget = {\r\n    //   method: \"GET\",\r\n    //   headers: myHeaders,\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(`http://localhost:9002/masters/CMMT3/` + `${Accrodianid}`, requestOptionsget)\r\n    //   .then((response) => response.json())\r\n    //   .then((resData) => {\r\n    //     console.log(\"all Get fetched \", resData.data)\r\n    //     setpostorupdate(resData.data)\r\n    //   })\r\n    if (completeData.length === 0) {\r\n      var requestOptionsget = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/CMMT3`, requestOptionsget)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData.data);\r\n          if (resData.status == 200) {\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n            }, 1000)\r\n            console.log(\"Data Added succesfully POSt\")\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error))\r\n    } else {\r\n      var requestOptionsget = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: rawrich,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`http://localhost:9002/masters/CMMT3/` + `${Accrodianid}`, requestOptionsget)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n          console.log(resData.data);\r\n          if (resData.status == 200) {\r\n            setSmShow(true);\r\n            setTimeout(() => {\r\n              setSmShow(false);\r\n            }, 1000)\r\n            console.log(\"Data Added succesfully Update\")\r\n          }\r\n        })\r\n        .catch((error) => console.log(\"error\", error))\r\n    }\r\n  }\r\n  if (formData) {\r\n    formData.map((item, key) => {\r\n      if (item.tag0 == \"Undefined\") {\r\n        rows.push(\r\n          <div className=\"row clearfix\">\r\n            <div className=\"col-md-10\">\r\n              <div style={{ marginTop: 10 }}>\r\n              </div>\r\n              <Accordion key={key}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  {/* <Typography >Undefined</Typography> */}\r\n                  <Typography >Questions appearing in mind Journey:{item.value0}</Typography>\r\n\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\" col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>\r\n                            Questions appearing in mind Journey:{item.value0}\r\n                          </strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Question appearing in Mind of:{item.value1}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Who Gives the answer:{item.value2}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Possible Answer:{item.value3}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: 30 }}>\r\n                    </div>\r\n                    <div className=\"row clearfix\">\r\n                      <div className=\"col-md-12\">\r\n                        <h2 className=\"card-inside-title\">\r\n                          <strong>Choice Made:{item.value4}</strong>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <div style={{ marginTop: 10 }}>\r\n              </div>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <button type=\"button\" class=\"btn addbtndark waves-effect\" onClick={() => AddBriefBlock(item.id)}>ADD </button>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <Modal\r\n        size=\"sm\"\r\n        show={smShow}\r\n        onHide={() => setSmShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Body >Form Saved Successful</Modal.Body>\r\n      </Modal>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth maxWidth=\"lg\">\r\n        <DialogTitle id=\"form-dialog-title\">Customer Mind Map</DialogTitle>\r\n        <DialogContent>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Brief Building Blocks</strong>\r\n          </h6>\r\n          <Editor contents={Briefblock} getValue={handleChangeEditorBrief} />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Ownership</strong>\r\n          </h6>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={handleChangeOwner}\r\n              Value={ownership}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Start Date</strong>\r\n          </h6>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            Value={startDate}\r\n            onChange={e => handleChangestartDate(e)}\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Expected Closure Date</strong>\r\n          </h6>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            Value={expectedDate}\r\n            onChange={handleChangeExpectedDate}\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Days</strong>\r\n          </h6>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            Value={days}\r\n            onChange={handleChangeDays}\r\n            disabled\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n          <h6 className=\"card-inside-title\">\r\n            <strong>Weeks</strong>\r\n          </h6>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            Value={weaks}\r\n            onChange={handleChangeWeaks}\r\n            disabled\r\n          />\r\n          <div style={{ marginTop: 10 }}>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button type=\"button\" class=\"btn btn-success  waves-effect\" onClick={HandleSubmit}>SAVE CHANGES</button>\r\n          <button type=\"button\" class=\"btn btn-danger waves-effect\" onClick={handleClose}>CLOSE</button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {rows}\r\n    </div>\r\n  )\r\n}\r\nexport default AccrodionTabs;","/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/apiServices/rebirthCommon.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/apiServices/rebirthapi.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/apiServices/discovery.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/ProgressBar.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/components/Select.js",[],"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/data.js",[],{"ruleId":"1648","replacedBy":"1649"},{"ruleId":"1650","replacedBy":"1651"},{"ruleId":"1652","severity":1,"message":"1653","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1656","line":1,"column":17,"nodeType":"1654","messageId":"1655","endLine":1,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1657","line":1,"column":28,"nodeType":"1654","messageId":"1655","endLine":1,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1658","line":2,"column":25,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1659","line":2,"column":37,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1660","line":16,"column":8,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1661","line":28,"column":10,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1662","line":30,"column":8,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1663","line":34,"column":8,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1664","line":2,"column":8,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1665","line":3,"column":8,"nodeType":"1654","messageId":"1655","endLine":3,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1666","line":4,"column":10,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1667","line":4,"column":33,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1668","line":9,"column":11,"nodeType":"1654","messageId":"1655","endLine":9,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1669","line":1,"column":17,"nodeType":"1654","messageId":"1655","endLine":1,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1667","line":2,"column":22,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1670","line":10,"column":10,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1671","line":11,"column":12,"nodeType":"1654","messageId":"1655","endLine":11,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1673","line":23,"column":57,"nodeType":"1674","messageId":"1675","endLine":23,"endColumn":58},{"ruleId":"1676","severity":1,"message":"1677","line":27,"column":37,"nodeType":"1678","messageId":"1679","endLine":27,"endColumn":39},{"ruleId":"1680","severity":1,"message":"1681","line":32,"column":8,"nodeType":"1682","endLine":32,"endColumn":10,"suggestions":"1683"},{"ruleId":"1684","severity":1,"message":"1685","line":63,"column":30,"nodeType":"1686","endLine":63,"endColumn":78},{"ruleId":"1684","severity":1,"message":"1685","line":75,"column":30,"nodeType":"1686","endLine":75,"endColumn":81},{"ruleId":"1684","severity":1,"message":"1685","line":92,"column":30,"nodeType":"1686","endLine":92,"endColumn":95},{"ruleId":"1684","severity":1,"message":"1685","line":110,"column":29,"nodeType":"1686","endLine":110,"endColumn":64},{"ruleId":"1684","severity":1,"message":"1685","line":120,"column":29,"nodeType":"1686","endLine":120,"endColumn":64},{"ruleId":"1652","severity":1,"message":"1664","line":2,"column":8,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1666","line":4,"column":10,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":19},{"ruleId":"1680","severity":1,"message":"1681","line":14,"column":8,"nodeType":"1682","endLine":14,"endColumn":10,"suggestions":"1687"},{"ruleId":"1652","severity":1,"message":"1657","line":1,"column":17,"nodeType":"1654","messageId":"1655","endLine":1,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1658","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":20},{"ruleId":"1688","severity":1,"message":"1689","line":24,"column":7,"nodeType":"1690","messageId":"1691","endLine":24,"endColumn":8},{"ruleId":"1652","severity":1,"message":"1692","line":5,"column":21,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1664","line":8,"column":8,"nodeType":"1654","messageId":"1655","endLine":8,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1693","line":19,"column":10,"nodeType":"1654","messageId":"1655","endLine":19,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1694","line":19,"column":23,"nodeType":"1654","messageId":"1655","endLine":19,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1695","line":20,"column":10,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1696","line":26,"column":10,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1697","line":50,"column":10,"nodeType":"1654","messageId":"1655","endLine":50,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1698","line":50,"column":18,"nodeType":"1654","messageId":"1655","endLine":50,"endColumn":27},{"ruleId":"1680","severity":1,"message":"1699","line":66,"column":6,"nodeType":"1682","endLine":66,"endColumn":8,"suggestions":"1700"},{"ruleId":"1701","severity":1,"message":"1702","line":161,"column":30,"nodeType":"1674","messageId":"1703","endLine":161,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":172,"column":11,"nodeType":"1654","messageId":"1706","endLine":172,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1707","line":174,"column":11,"nodeType":"1654","messageId":"1706","endLine":174,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1708","line":183,"column":11,"nodeType":"1654","messageId":"1706","endLine":183,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":193,"column":30,"nodeType":"1674","messageId":"1703","endLine":193,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1709","line":208,"column":9,"nodeType":"1654","messageId":"1655","endLine":208,"endColumn":17},{"ruleId":"1676","severity":1,"message":"1677","line":234,"column":36,"nodeType":"1678","messageId":"1679","endLine":234,"endColumn":38},{"ruleId":"1710","severity":1,"message":"1711","line":235,"column":33,"nodeType":"1712","messageId":"1703","endLine":235,"endColumn":37},{"ruleId":"1710","severity":1,"message":"1711","line":236,"column":31,"nodeType":"1712","messageId":"1703","endLine":236,"endColumn":35},{"ruleId":"1701","severity":1,"message":"1702","line":290,"column":20,"nodeType":"1674","messageId":"1703","endLine":290,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":308,"column":30,"nodeType":"1674","messageId":"1703","endLine":308,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1713","line":320,"column":27,"nodeType":"1674","messageId":"1703","endLine":320,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":348,"column":23,"nodeType":"1674","messageId":"1703","endLine":348,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":418,"column":30,"nodeType":"1674","messageId":"1703","endLine":418,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":429,"column":23,"nodeType":"1674","messageId":"1703","endLine":429,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":499,"column":30,"nodeType":"1674","messageId":"1703","endLine":499,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":529,"column":24,"nodeType":"1674","messageId":"1703","endLine":529,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":573,"column":32,"nodeType":"1674","messageId":"1703","endLine":573,"endColumn":34},{"ruleId":"1680","severity":1,"message":"1714","line":19,"column":8,"nodeType":"1682","endLine":19,"endColumn":10,"suggestions":"1715"},{"ruleId":"1652","severity":1,"message":"1716","line":21,"column":10,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":24},{"ruleId":"1676","severity":1,"message":"1677","line":28,"column":30,"nodeType":"1678","messageId":"1679","endLine":28,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1717","line":42,"column":9,"nodeType":"1654","messageId":"1655","endLine":42,"endColumn":13},{"ruleId":"1688","severity":1,"message":"1689","line":24,"column":7,"nodeType":"1690","messageId":"1691","endLine":24,"endColumn":8},{"ruleId":"1652","severity":1,"message":"1718","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1719","line":3,"column":8,"nodeType":"1654","messageId":"1655","endLine":3,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1720","line":5,"column":10,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":5,"column":21,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":6,"column":10,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":6,"column":30,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1723","line":7,"column":8,"nodeType":"1654","messageId":"1655","endLine":7,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1664","line":8,"column":8,"nodeType":"1654","messageId":"1655","endLine":8,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1724","line":9,"column":8,"nodeType":"1654","messageId":"1655","endLine":9,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1725","line":10,"column":8,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1726","line":16,"column":12,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1727","line":16,"column":23,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1728","line":17,"column":12,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1729","line":17,"column":24,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1693","line":18,"column":12,"nodeType":"1654","messageId":"1655","endLine":18,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1694","line":18,"column":25,"nodeType":"1654","messageId":"1655","endLine":18,"endColumn":39},{"ruleId":"1652","severity":1,"message":"1695","line":19,"column":12,"nodeType":"1654","messageId":"1655","endLine":19,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1730","line":19,"column":29,"nodeType":"1654","messageId":"1655","endLine":19,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1731","line":20,"column":12,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1732","line":20,"column":23,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1733","line":21,"column":12,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1734","line":21,"column":29,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1735","line":22,"column":12,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1736","line":22,"column":25,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":39},{"ruleId":"1652","severity":1,"message":"1737","line":23,"column":12,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1738","line":23,"column":21,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1739","line":24,"column":11,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1696","line":25,"column":12,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1740","line":25,"column":18,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1741","line":26,"column":12,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1742","line":27,"column":12,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1743","line":27,"column":23,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1744","line":28,"column":12,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1745","line":29,"column":12,"nodeType":"1654","messageId":"1655","endLine":29,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1746","line":29,"column":20,"nodeType":"1654","messageId":"1655","endLine":29,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1747","line":31,"column":12,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1748","line":31,"column":24,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1749","line":32,"column":12,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1750","line":32,"column":22,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1751","line":33,"column":12,"nodeType":"1654","messageId":"1655","endLine":33,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1752","line":33,"column":21,"nodeType":"1654","messageId":"1655","endLine":33,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1753","line":34,"column":12,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1754","line":34,"column":29,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1755","line":35,"column":12,"nodeType":"1654","messageId":"1655","endLine":35,"endColumn":24},{"ruleId":"1652","severity":1,"message":"1756","line":35,"column":26,"nodeType":"1654","messageId":"1655","endLine":35,"endColumn":41},{"ruleId":"1652","severity":1,"message":"1757","line":36,"column":12,"nodeType":"1654","messageId":"1655","endLine":36,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1758","line":36,"column":31,"nodeType":"1654","messageId":"1655","endLine":36,"endColumn":51},{"ruleId":"1652","severity":1,"message":"1759","line":37,"column":12,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1760","line":37,"column":28,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1761","line":39,"column":12,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1762","line":39,"column":22,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":33},{"ruleId":"1680","severity":1,"message":"1763","line":44,"column":8,"nodeType":"1682","endLine":44,"endColumn":10,"suggestions":"1764"},{"ruleId":"1652","severity":1,"message":"1765","line":5,"column":10,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1766","line":5,"column":18,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1767","line":15,"column":14,"nodeType":"1654","messageId":"1655","endLine":15,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":22,"column":19,"nodeType":"1674","messageId":"1703","endLine":22,"endColumn":21},{"ruleId":"1701","severity":1,"message":"1702","line":22,"column":64,"nodeType":"1674","messageId":"1703","endLine":22,"endColumn":66},{"ruleId":"1768","severity":1,"message":"1769","line":98,"column":49,"nodeType":"1770","messageId":"1771","endLine":98,"endColumn":61},{"ruleId":"1768","severity":1,"message":"1769","line":110,"column":46,"nodeType":"1770","messageId":"1771","endLine":110,"endColumn":61},{"ruleId":"1652","severity":1,"message":"1772","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1773","line":2,"column":18,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1720","line":4,"column":10,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":4,"column":21,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":5,"column":10,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":5,"column":30,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1718","line":8,"column":10,"nodeType":"1654","messageId":"1655","endLine":8,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1725","line":10,"column":8,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1774","line":16,"column":9,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1775","line":41,"column":12,"nodeType":"1654","messageId":"1655","endLine":41,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1737","line":51,"column":12,"nodeType":"1654","messageId":"1655","endLine":51,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1744","line":53,"column":12,"nodeType":"1654","messageId":"1655","endLine":53,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1776","line":53,"column":29,"nodeType":"1654","messageId":"1655","endLine":53,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1777","line":55,"column":12,"nodeType":"1654","messageId":"1655","endLine":55,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1778","line":55,"column":23,"nodeType":"1654","messageId":"1655","endLine":55,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1779","line":56,"column":12,"nodeType":"1654","messageId":"1655","endLine":56,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1780","line":56,"column":18,"nodeType":"1654","messageId":"1655","endLine":56,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1781","line":57,"column":12,"nodeType":"1654","messageId":"1655","endLine":57,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1782","line":57,"column":19,"nodeType":"1654","messageId":"1655","endLine":57,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1747","line":60,"column":12,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1749","line":61,"column":12,"nodeType":"1654","messageId":"1655","endLine":61,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1751","line":62,"column":12,"nodeType":"1654","messageId":"1655","endLine":62,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1753","line":63,"column":12,"nodeType":"1654","messageId":"1655","endLine":63,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1755","line":64,"column":12,"nodeType":"1654","messageId":"1655","endLine":64,"endColumn":24},{"ruleId":"1652","severity":1,"message":"1757","line":65,"column":12,"nodeType":"1654","messageId":"1655","endLine":65,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1759","line":66,"column":12,"nodeType":"1654","messageId":"1655","endLine":66,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1761","line":68,"column":12,"nodeType":"1654","messageId":"1655","endLine":68,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1783","line":72,"column":11,"nodeType":"1654","messageId":"1655","endLine":72,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1784","line":76,"column":11,"nodeType":"1654","messageId":"1655","endLine":76,"endColumn":16},{"ruleId":"1701","severity":1,"message":"1702","line":78,"column":22,"nodeType":"1674","messageId":"1703","endLine":78,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1785","line":79,"column":17,"nodeType":"1654","messageId":"1706","endLine":79,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":81,"column":29,"nodeType":"1674","messageId":"1703","endLine":81,"endColumn":31},{"ruleId":"1704","severity":1,"message":"1785","line":82,"column":17,"nodeType":"1654","messageId":"1706","endLine":82,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1785","line":85,"column":17,"nodeType":"1654","messageId":"1706","endLine":85,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":107,"column":36,"nodeType":"1674","messageId":"1703","endLine":107,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1786","line":125,"column":11,"nodeType":"1654","messageId":"1655","endLine":125,"endColumn":15},{"ruleId":"1701","severity":1,"message":"1702","line":197,"column":36,"nodeType":"1674","messageId":"1703","endLine":197,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1787","line":288,"column":11,"nodeType":"1654","messageId":"1655","endLine":288,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1788","line":310,"column":11,"nodeType":"1654","messageId":"1655","endLine":310,"endColumn":24},{"ruleId":"1652","severity":1,"message":"1789","line":321,"column":11,"nodeType":"1654","messageId":"1655","endLine":321,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1790","line":326,"column":11,"nodeType":"1654","messageId":"1655","endLine":326,"endColumn":23},{"ruleId":"1701","severity":1,"message":"1702","line":329,"column":48,"nodeType":"1674","messageId":"1703","endLine":329,"endColumn":50},{"ruleId":"1701","severity":1,"message":"1702","line":332,"column":56,"nodeType":"1674","messageId":"1703","endLine":332,"endColumn":58},{"ruleId":"1701","severity":1,"message":"1702","line":335,"column":57,"nodeType":"1674","messageId":"1703","endLine":335,"endColumn":59},{"ruleId":"1701","severity":1,"message":"1702","line":368,"column":36,"nodeType":"1674","messageId":"1703","endLine":368,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1791","line":398,"column":11,"nodeType":"1654","messageId":"1655","endLine":398,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1792","line":403,"column":11,"nodeType":"1654","messageId":"1655","endLine":403,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1793","line":408,"column":11,"nodeType":"1654","messageId":"1655","endLine":408,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1794","line":409,"column":13,"nodeType":"1654","messageId":"1655","endLine":409,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1795","line":411,"column":11,"nodeType":"1654","messageId":"1655","endLine":411,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1796","line":453,"column":11,"nodeType":"1654","messageId":"1655","endLine":453,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1797","line":461,"column":11,"nodeType":"1654","messageId":"1655","endLine":461,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1798","line":465,"column":11,"nodeType":"1654","messageId":"1655","endLine":465,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1720","line":6,"column":10,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":6,"column":21,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1737","line":24,"column":10,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":24,"column":19,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":26,"column":10,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":26,"column":27,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":45},{"ruleId":"1680","severity":1,"message":"1699","line":35,"column":6,"nodeType":"1682","endLine":35,"endColumn":8,"suggestions":"1799"},{"ruleId":"1652","severity":1,"message":"1787","line":37,"column":9,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1783","line":47,"column":9,"nodeType":"1654","messageId":"1655","endLine":47,"endColumn":18},{"ruleId":"1701","severity":1,"message":"1702","line":95,"column":30,"nodeType":"1674","messageId":"1703","endLine":95,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":107,"column":11,"nodeType":"1654","messageId":"1706","endLine":107,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1707","line":110,"column":11,"nodeType":"1654","messageId":"1706","endLine":110,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1708","line":118,"column":11,"nodeType":"1654","messageId":"1706","endLine":118,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":128,"column":30,"nodeType":"1674","messageId":"1703","endLine":128,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":164,"column":36,"nodeType":"1678","messageId":"1679","endLine":164,"endColumn":38},{"ruleId":"1710","severity":1,"message":"1711","line":165,"column":30,"nodeType":"1712","messageId":"1703","endLine":165,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1772","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1773","line":2,"column":18,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1720","line":4,"column":10,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":4,"column":21,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":5,"column":10,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":5,"column":30,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1718","line":8,"column":10,"nodeType":"1654","messageId":"1655","endLine":8,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1725","line":10,"column":8,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1774","line":16,"column":9,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1775","line":41,"column":12,"nodeType":"1654","messageId":"1655","endLine":41,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1737","line":50,"column":12,"nodeType":"1654","messageId":"1655","endLine":50,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1744","line":52,"column":12,"nodeType":"1654","messageId":"1655","endLine":52,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1776","line":52,"column":29,"nodeType":"1654","messageId":"1655","endLine":52,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1777","line":54,"column":12,"nodeType":"1654","messageId":"1655","endLine":54,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1778","line":54,"column":23,"nodeType":"1654","messageId":"1655","endLine":54,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1779","line":55,"column":12,"nodeType":"1654","messageId":"1655","endLine":55,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1780","line":55,"column":18,"nodeType":"1654","messageId":"1655","endLine":55,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1781","line":56,"column":12,"nodeType":"1654","messageId":"1655","endLine":56,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1782","line":56,"column":19,"nodeType":"1654","messageId":"1655","endLine":56,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1747","line":59,"column":12,"nodeType":"1654","messageId":"1655","endLine":59,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1749","line":60,"column":12,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1751","line":61,"column":12,"nodeType":"1654","messageId":"1655","endLine":61,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1753","line":62,"column":12,"nodeType":"1654","messageId":"1655","endLine":62,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1755","line":63,"column":12,"nodeType":"1654","messageId":"1655","endLine":63,"endColumn":24},{"ruleId":"1652","severity":1,"message":"1757","line":64,"column":12,"nodeType":"1654","messageId":"1655","endLine":64,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1759","line":65,"column":12,"nodeType":"1654","messageId":"1655","endLine":65,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1761","line":67,"column":12,"nodeType":"1654","messageId":"1655","endLine":67,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1783","line":71,"column":11,"nodeType":"1654","messageId":"1655","endLine":71,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1784","line":75,"column":11,"nodeType":"1654","messageId":"1655","endLine":75,"endColumn":16},{"ruleId":"1701","severity":1,"message":"1702","line":77,"column":22,"nodeType":"1674","messageId":"1703","endLine":77,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1785","line":78,"column":17,"nodeType":"1654","messageId":"1706","endLine":78,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":80,"column":29,"nodeType":"1674","messageId":"1703","endLine":80,"endColumn":31},{"ruleId":"1704","severity":1,"message":"1785","line":81,"column":17,"nodeType":"1654","messageId":"1706","endLine":81,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1785","line":84,"column":17,"nodeType":"1654","messageId":"1706","endLine":84,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":106,"column":36,"nodeType":"1674","messageId":"1703","endLine":106,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1786","line":124,"column":11,"nodeType":"1654","messageId":"1655","endLine":124,"endColumn":15},{"ruleId":"1701","severity":1,"message":"1702","line":196,"column":36,"nodeType":"1674","messageId":"1703","endLine":196,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1800","line":212,"column":11,"nodeType":"1654","messageId":"1655","endLine":212,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1801","line":240,"column":11,"nodeType":"1654","messageId":"1655","endLine":240,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1787","line":253,"column":11,"nodeType":"1654","messageId":"1655","endLine":253,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1788","line":275,"column":11,"nodeType":"1654","messageId":"1655","endLine":275,"endColumn":24},{"ruleId":"1652","severity":1,"message":"1789","line":286,"column":11,"nodeType":"1654","messageId":"1655","endLine":286,"endColumn":19},{"ruleId":"1701","severity":1,"message":"1702","line":294,"column":48,"nodeType":"1674","messageId":"1703","endLine":294,"endColumn":50},{"ruleId":"1701","severity":1,"message":"1702","line":297,"column":56,"nodeType":"1674","messageId":"1703","endLine":297,"endColumn":58},{"ruleId":"1701","severity":1,"message":"1702","line":300,"column":57,"nodeType":"1674","messageId":"1703","endLine":300,"endColumn":59},{"ruleId":"1701","severity":1,"message":"1702","line":333,"column":36,"nodeType":"1674","messageId":"1703","endLine":333,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1791","line":363,"column":11,"nodeType":"1654","messageId":"1655","endLine":363,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1792","line":368,"column":11,"nodeType":"1654","messageId":"1655","endLine":368,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1793","line":373,"column":11,"nodeType":"1654","messageId":"1655","endLine":373,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1794","line":374,"column":13,"nodeType":"1654","messageId":"1655","endLine":374,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1795","line":376,"column":11,"nodeType":"1654","messageId":"1655","endLine":376,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1796","line":418,"column":11,"nodeType":"1654","messageId":"1655","endLine":418,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1797","line":426,"column":11,"nodeType":"1654","messageId":"1655","endLine":426,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1798","line":430,"column":11,"nodeType":"1654","messageId":"1655","endLine":430,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1656","line":1,"column":17,"nodeType":"1654","messageId":"1655","endLine":1,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1802","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1803","line":13,"column":8,"nodeType":"1654","messageId":"1655","endLine":13,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1804","line":14,"column":8,"nodeType":"1654","messageId":"1655","endLine":14,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1656","line":1,"column":17,"nodeType":"1654","messageId":"1655","endLine":1,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1802","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1662","line":12,"column":8,"nodeType":"1654","messageId":"1655","endLine":12,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1802","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1789","line":57,"column":10,"nodeType":"1654","messageId":"1655","endLine":57,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1805","line":69,"column":9,"nodeType":"1654","messageId":"1655","endLine":69,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1802","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1806","line":5,"column":8,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":12},{"ruleId":"1652","severity":1,"message":"1807","line":6,"column":8,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":11},{"ruleId":"1652","severity":1,"message":"1808","line":10,"column":8,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1809","line":34,"column":10,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1810","line":49,"column":9,"nodeType":"1654","messageId":"1655","endLine":49,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1811","line":50,"column":10,"nodeType":"1654","messageId":"1655","endLine":50,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1812","line":51,"column":9,"nodeType":"1654","messageId":"1655","endLine":51,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1802","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1692","line":2,"column":21,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1813","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1814","line":5,"column":8,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1719","line":6,"column":8,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1737","line":61,"column":10,"nodeType":"1654","messageId":"1655","endLine":61,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":61,"column":19,"nodeType":"1654","messageId":"1655","endLine":61,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1697","line":72,"column":10,"nodeType":"1654","messageId":"1655","endLine":72,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1698","line":72,"column":18,"nodeType":"1654","messageId":"1655","endLine":72,"endColumn":27},{"ruleId":"1701","severity":1,"message":"1702","line":106,"column":28,"nodeType":"1674","messageId":"1703","endLine":106,"endColumn":30},{"ruleId":"1680","severity":1,"message":"1699","line":188,"column":6,"nodeType":"1682","endLine":188,"endColumn":8,"suggestions":"1815"},{"ruleId":"1701","severity":1,"message":"1702","line":272,"column":28,"nodeType":"1674","messageId":"1703","endLine":272,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":299,"column":20,"nodeType":"1674","messageId":"1703","endLine":299,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":317,"column":30,"nodeType":"1674","messageId":"1703","endLine":317,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1713","line":329,"column":27,"nodeType":"1674","messageId":"1703","endLine":329,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":357,"column":23,"nodeType":"1674","messageId":"1703","endLine":357,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":427,"column":30,"nodeType":"1674","messageId":"1703","endLine":427,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":438,"column":23,"nodeType":"1674","messageId":"1703","endLine":438,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":508,"column":30,"nodeType":"1674","messageId":"1703","endLine":508,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":535,"column":24,"nodeType":"1674","messageId":"1703","endLine":535,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":579,"column":32,"nodeType":"1674","messageId":"1703","endLine":579,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1692","line":4,"column":21,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1775","line":31,"column":10,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1816","line":32,"column":10,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1817","line":34,"column":10,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1818","line":34,"column":23,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1819","line":35,"column":10,"nodeType":"1654","messageId":"1655","endLine":35,"endColumn":15},{"ruleId":"1701","severity":1,"message":"1702","line":117,"column":28,"nodeType":"1674","messageId":"1703","endLine":117,"endColumn":30},{"ruleId":"1672","severity":1,"message":"1673","line":158,"column":57,"nodeType":"1674","messageId":"1675","endLine":158,"endColumn":58},{"ruleId":"1701","severity":1,"message":"1702","line":163,"column":24,"nodeType":"1674","messageId":"1703","endLine":163,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":178,"column":28,"nodeType":"1674","messageId":"1703","endLine":178,"endColumn":30},{"ruleId":"1680","severity":1,"message":"1820","line":234,"column":6,"nodeType":"1682","endLine":234,"endColumn":8,"suggestions":"1821"},{"ruleId":"1652","severity":1,"message":"1822","line":236,"column":9,"nodeType":"1654","messageId":"1655","endLine":236,"endColumn":20},{"ruleId":"1701","severity":1,"message":"1702","line":370,"column":28,"nodeType":"1674","messageId":"1703","endLine":370,"endColumn":30},{"ruleId":"1676","severity":1,"message":"1677","line":418,"column":34,"nodeType":"1678","messageId":"1679","endLine":418,"endColumn":36},{"ruleId":"1676","severity":1,"message":"1677","line":753,"column":34,"nodeType":"1678","messageId":"1679","endLine":753,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1802","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1723","line":12,"column":8,"nodeType":"1654","messageId":"1655","endLine":12,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1823","line":60,"column":8,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1824","line":61,"column":10,"nodeType":"1654","messageId":"1655","endLine":61,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1825","line":61,"column":16,"nodeType":"1654","messageId":"1655","endLine":61,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1789","line":62,"column":10,"nodeType":"1654","messageId":"1655","endLine":62,"endColumn":18},{"ruleId":"1680","severity":1,"message":"1826","line":92,"column":6,"nodeType":"1682","endLine":92,"endColumn":8,"suggestions":"1827"},{"ruleId":"1701","severity":1,"message":"1702","line":107,"column":28,"nodeType":"1674","messageId":"1703","endLine":107,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1692","line":6,"column":21,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":7,"column":10,"nodeType":"1654","messageId":"1655","endLine":7,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":7,"column":30,"nodeType":"1654","messageId":"1655","endLine":7,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1664","line":9,"column":8,"nodeType":"1654","messageId":"1655","endLine":9,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1828","line":19,"column":9,"nodeType":"1654","messageId":"1655","endLine":19,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1829","line":20,"column":9,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1830","line":21,"column":9,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1737","line":38,"column":10,"nodeType":"1654","messageId":"1655","endLine":38,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":38,"column":19,"nodeType":"1654","messageId":"1655","endLine":38,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":39,"column":10,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":39,"column":27,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1697","line":58,"column":10,"nodeType":"1654","messageId":"1655","endLine":58,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1698","line":58,"column":18,"nodeType":"1654","messageId":"1655","endLine":58,"endColumn":27},{"ruleId":"1680","severity":1,"message":"1699","line":97,"column":6,"nodeType":"1682","endLine":97,"endColumn":8,"suggestions":"1831"},{"ruleId":"1701","severity":1,"message":"1702","line":125,"column":30,"nodeType":"1674","messageId":"1703","endLine":125,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":139,"column":11,"nodeType":"1654","messageId":"1706","endLine":139,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1832","line":141,"column":11,"nodeType":"1654","messageId":"1706","endLine":141,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1833","line":152,"column":11,"nodeType":"1654","messageId":"1706","endLine":152,"endColumn":33},{"ruleId":"1672","severity":1,"message":"1673","line":158,"column":55,"nodeType":"1674","messageId":"1675","endLine":158,"endColumn":56},{"ruleId":"1701","severity":1,"message":"1702","line":162,"column":30,"nodeType":"1674","messageId":"1703","endLine":162,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":207,"column":36,"nodeType":"1678","messageId":"1679","endLine":207,"endColumn":38},{"ruleId":"1701","severity":1,"message":"1702","line":238,"column":20,"nodeType":"1674","messageId":"1703","endLine":238,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":256,"column":30,"nodeType":"1674","messageId":"1703","endLine":256,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1713","line":268,"column":27,"nodeType":"1674","messageId":"1703","endLine":268,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":296,"column":23,"nodeType":"1674","messageId":"1703","endLine":296,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":366,"column":30,"nodeType":"1674","messageId":"1703","endLine":366,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":377,"column":23,"nodeType":"1674","messageId":"1703","endLine":377,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":447,"column":30,"nodeType":"1674","messageId":"1703","endLine":447,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":473,"column":24,"nodeType":"1674","messageId":"1703","endLine":473,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":517,"column":32,"nodeType":"1674","messageId":"1703","endLine":517,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1834","line":50,"column":7,"nodeType":"1654","messageId":"1655","endLine":50,"endColumn":11},{"ruleId":"1835","severity":1,"message":"1836","line":88,"column":13,"nodeType":"1686","messageId":"1837","endLine":88,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1719","line":2,"column":8,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1692","line":4,"column":21,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":5,"column":10,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":5,"column":30,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1838","line":6,"column":8,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1828","line":19,"column":9,"nodeType":"1654","messageId":"1655","endLine":19,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1829","line":20,"column":9,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1830","line":21,"column":9,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1741","line":23,"column":10,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1839","line":50,"column":10,"nodeType":"1654","messageId":"1655","endLine":50,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1840","line":50,"column":19,"nodeType":"1654","messageId":"1655","endLine":50,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1823","line":53,"column":8,"nodeType":"1654","messageId":"1655","endLine":53,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1841","line":53,"column":22,"nodeType":"1654","messageId":"1655","endLine":53,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1842","line":55,"column":8,"nodeType":"1654","messageId":"1655","endLine":55,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1843","line":55,"column":23,"nodeType":"1654","messageId":"1655","endLine":55,"endColumn":39},{"ruleId":"1652","severity":1,"message":"1737","line":59,"column":10,"nodeType":"1654","messageId":"1655","endLine":59,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":59,"column":19,"nodeType":"1654","messageId":"1655","endLine":59,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":60,"column":10,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":60,"column":27,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1697","line":80,"column":10,"nodeType":"1654","messageId":"1655","endLine":80,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1698","line":80,"column":18,"nodeType":"1654","messageId":"1655","endLine":80,"endColumn":27},{"ruleId":"1680","severity":1,"message":"1844","line":91,"column":6,"nodeType":"1682","endLine":91,"endColumn":8,"suggestions":"1845"},{"ruleId":"1701","severity":1,"message":"1702","line":166,"column":28,"nodeType":"1674","messageId":"1703","endLine":166,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":241,"column":28,"nodeType":"1674","messageId":"1703","endLine":241,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":307,"column":20,"nodeType":"1674","messageId":"1703","endLine":307,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":325,"column":30,"nodeType":"1674","messageId":"1703","endLine":325,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1713","line":337,"column":27,"nodeType":"1674","messageId":"1703","endLine":337,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":365,"column":23,"nodeType":"1674","messageId":"1703","endLine":365,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":435,"column":30,"nodeType":"1674","messageId":"1703","endLine":435,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":446,"column":23,"nodeType":"1674","messageId":"1703","endLine":446,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":516,"column":30,"nodeType":"1674","messageId":"1703","endLine":516,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":545,"column":24,"nodeType":"1674","messageId":"1703","endLine":545,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":589,"column":32,"nodeType":"1674","messageId":"1703","endLine":589,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1692","line":2,"column":21,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1828","line":15,"column":9,"nodeType":"1654","messageId":"1655","endLine":15,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1829","line":16,"column":9,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1830","line":17,"column":9,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1846","line":20,"column":10,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1847","line":20,"column":16,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1848","line":21,"column":10,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1849","line":21,"column":17,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1741","line":22,"column":10,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1850","line":23,"column":10,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1851","line":23,"column":20,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1852","line":24,"column":10,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1853","line":24,"column":21,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1854","line":39,"column":10,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1855","line":39,"column":17,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1737","line":59,"column":10,"nodeType":"1654","messageId":"1655","endLine":59,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":59,"column":19,"nodeType":"1654","messageId":"1655","endLine":59,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":60,"column":10,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":60,"column":27,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1697","line":79,"column":10,"nodeType":"1654","messageId":"1655","endLine":79,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1698","line":79,"column":18,"nodeType":"1654","messageId":"1655","endLine":79,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1856","line":265,"column":9,"nodeType":"1654","messageId":"1655","endLine":265,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1857","line":311,"column":9,"nodeType":"1654","messageId":"1655","endLine":311,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1811","line":372,"column":9,"nodeType":"1654","messageId":"1655","endLine":372,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1811","line":402,"column":9,"nodeType":"1654","messageId":"1655","endLine":402,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1858","line":530,"column":9,"nodeType":"1654","messageId":"1655","endLine":530,"endColumn":15},{"ruleId":"1680","severity":1,"message":"1859","line":544,"column":6,"nodeType":"1682","endLine":544,"endColumn":8,"suggestions":"1860"},{"ruleId":"1701","severity":1,"message":"1702","line":596,"column":30,"nodeType":"1674","messageId":"1703","endLine":596,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":609,"column":11,"nodeType":"1654","messageId":"1706","endLine":609,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1832","line":611,"column":11,"nodeType":"1654","messageId":"1706","endLine":611,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1833","line":648,"column":11,"nodeType":"1654","messageId":"1706","endLine":648,"endColumn":33},{"ruleId":"1672","severity":1,"message":"1673","line":656,"column":60,"nodeType":"1674","messageId":"1675","endLine":656,"endColumn":61},{"ruleId":"1701","severity":1,"message":"1702","line":660,"column":30,"nodeType":"1674","messageId":"1703","endLine":660,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":703,"column":34,"nodeType":"1678","messageId":"1679","endLine":703,"endColumn":36},{"ruleId":"1701","severity":1,"message":"1702","line":752,"column":20,"nodeType":"1674","messageId":"1703","endLine":752,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":770,"column":30,"nodeType":"1674","messageId":"1703","endLine":770,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1713","line":782,"column":27,"nodeType":"1674","messageId":"1703","endLine":782,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":810,"column":23,"nodeType":"1674","messageId":"1703","endLine":810,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":880,"column":30,"nodeType":"1674","messageId":"1703","endLine":880,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":891,"column":23,"nodeType":"1674","messageId":"1703","endLine":891,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":961,"column":30,"nodeType":"1674","messageId":"1703","endLine":961,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":988,"column":24,"nodeType":"1674","messageId":"1703","endLine":988,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":1032,"column":32,"nodeType":"1674","messageId":"1703","endLine":1032,"endColumn":34},{"ruleId":"1768","severity":1,"message":"1769","line":1819,"column":65,"nodeType":"1770","messageId":"1771","endLine":1819,"endColumn":87},{"ruleId":"1768","severity":1,"message":"1769","line":1968,"column":65,"nodeType":"1770","messageId":"1771","endLine":1968,"endColumn":87},{"ruleId":"1652","severity":1,"message":"1838","line":2,"column":8,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1692","line":6,"column":21,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":7,"column":10,"nodeType":"1654","messageId":"1655","endLine":7,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":7,"column":30,"nodeType":"1654","messageId":"1655","endLine":7,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1810","line":40,"column":9,"nodeType":"1654","messageId":"1655","endLine":40,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1809","line":68,"column":10,"nodeType":"1654","messageId":"1655","endLine":68,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1850","line":84,"column":10,"nodeType":"1654","messageId":"1655","endLine":84,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1851","line":84,"column":20,"nodeType":"1654","messageId":"1655","endLine":84,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1852","line":85,"column":10,"nodeType":"1654","messageId":"1655","endLine":85,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1737","line":105,"column":10,"nodeType":"1654","messageId":"1655","endLine":105,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":105,"column":19,"nodeType":"1654","messageId":"1655","endLine":105,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1697","line":115,"column":10,"nodeType":"1654","messageId":"1655","endLine":115,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1698","line":115,"column":18,"nodeType":"1654","messageId":"1655","endLine":115,"endColumn":27},{"ruleId":"1701","severity":1,"message":"1702","line":178,"column":28,"nodeType":"1674","messageId":"1703","endLine":178,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1861","line":223,"column":9,"nodeType":"1654","messageId":"1655","endLine":223,"endColumn":24},{"ruleId":"1652","severity":1,"message":"1862","line":224,"column":17,"nodeType":"1654","messageId":"1655","endLine":224,"endColumn":25},{"ruleId":"1680","severity":1,"message":"1699","line":236,"column":6,"nodeType":"1682","endLine":236,"endColumn":8,"suggestions":"1863"},{"ruleId":"1701","severity":1,"message":"1702","line":330,"column":28,"nodeType":"1674","messageId":"1703","endLine":330,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":411,"column":20,"nodeType":"1674","messageId":"1703","endLine":411,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":429,"column":30,"nodeType":"1674","messageId":"1703","endLine":429,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1713","line":441,"column":27,"nodeType":"1674","messageId":"1703","endLine":441,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":469,"column":23,"nodeType":"1674","messageId":"1703","endLine":469,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":539,"column":30,"nodeType":"1674","messageId":"1703","endLine":539,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":550,"column":23,"nodeType":"1674","messageId":"1703","endLine":550,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":620,"column":30,"nodeType":"1674","messageId":"1703","endLine":620,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":650,"column":24,"nodeType":"1674","messageId":"1703","endLine":650,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":694,"column":32,"nodeType":"1674","messageId":"1703","endLine":694,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1657","line":2,"column":25,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1864","line":20,"column":3,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":8},{"ruleId":"1652","severity":1,"message":"1865","line":21,"column":3,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":7},{"ruleId":"1680","severity":1,"message":"1866","line":95,"column":6,"nodeType":"1682","endLine":95,"endColumn":8,"suggestions":"1867"},{"ruleId":"1652","severity":1,"message":"1868","line":3,"column":10,"nodeType":"1654","messageId":"1655","endLine":3,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1869","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1720","line":7,"column":10,"nodeType":"1654","messageId":"1655","endLine":7,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":7,"column":21,"nodeType":"1654","messageId":"1655","endLine":7,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":8,"column":10,"nodeType":"1654","messageId":"1655","endLine":8,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":8,"column":30,"nodeType":"1654","messageId":"1655","endLine":8,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1813","line":9,"column":8,"nodeType":"1654","messageId":"1655","endLine":9,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1814","line":10,"column":8,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1719","line":11,"column":8,"nodeType":"1654","messageId":"1655","endLine":11,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1811","line":43,"column":10,"nodeType":"1654","messageId":"1655","endLine":43,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1862","line":43,"column":17,"nodeType":"1654","messageId":"1655","endLine":43,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1870","line":77,"column":12,"nodeType":"1654","messageId":"1655","endLine":77,"endColumn":20},{"ruleId":"1680","severity":1,"message":"1871","line":109,"column":6,"nodeType":"1682","endLine":109,"endColumn":8,"suggestions":"1872"},{"ruleId":"1701","severity":1,"message":"1702","line":190,"column":28,"nodeType":"1674","messageId":"1703","endLine":190,"endColumn":30},{"ruleId":"1676","severity":1,"message":"1677","line":233,"column":34,"nodeType":"1678","messageId":"1679","endLine":233,"endColumn":36},{"ruleId":"1680","severity":1,"message":"1681","line":19,"column":6,"nodeType":"1682","endLine":19,"endColumn":8,"suggestions":"1873"},{"ruleId":"1676","severity":1,"message":"1677","line":24,"column":30,"nodeType":"1678","messageId":"1679","endLine":24,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1720","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":2,"column":21,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1813","line":3,"column":8,"nodeType":"1654","messageId":"1655","endLine":3,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1814","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1719","line":5,"column":8,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1852","line":17,"column":10,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1787","line":84,"column":9,"nodeType":"1654","messageId":"1655","endLine":84,"endColumn":28},{"ruleId":"1680","severity":1,"message":"1871","line":96,"column":6,"nodeType":"1682","endLine":96,"endColumn":8,"suggestions":"1874"},{"ruleId":"1701","severity":1,"message":"1702","line":111,"column":28,"nodeType":"1674","messageId":"1703","endLine":111,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":151,"column":28,"nodeType":"1674","messageId":"1703","endLine":151,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1875","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1876","line":2,"column":23,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1877","line":2,"column":28,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1878","line":12,"column":9,"nodeType":"1654","messageId":"1655","endLine":12,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1879","line":17,"column":10,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1880","line":24,"column":10,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1881","line":24,"column":19,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1882","line":25,"column":10,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1883","line":25,"column":20,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1884","line":26,"column":10,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1885","line":27,"column":10,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1886","line":29,"column":21,"nodeType":"1654","messageId":"1655","endLine":29,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1887","line":30,"column":10,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1888","line":33,"column":10,"nodeType":"1654","messageId":"1655","endLine":33,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1889","line":40,"column":7,"nodeType":"1654","messageId":"1655","endLine":40,"endColumn":9},{"ruleId":"1652","severity":1,"message":"1890","line":41,"column":9,"nodeType":"1654","messageId":"1655","endLine":41,"endColumn":15},{"ruleId":"1680","severity":1,"message":"1859","line":45,"column":6,"nodeType":"1682","endLine":45,"endColumn":8,"suggestions":"1891"},{"ruleId":"1672","severity":1,"message":"1673","line":62,"column":59,"nodeType":"1674","messageId":"1675","endLine":62,"endColumn":60},{"ruleId":"1652","severity":1,"message":"1892","line":67,"column":13,"nodeType":"1654","messageId":"1655","endLine":67,"endColumn":17},{"ruleId":"1676","severity":1,"message":"1677","line":68,"column":34,"nodeType":"1678","messageId":"1679","endLine":68,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":69,"column":25,"nodeType":"1712","messageId":"1703","endLine":69,"endColumn":29},{"ruleId":"1710","severity":1,"message":"1711","line":70,"column":26,"nodeType":"1712","messageId":"1703","endLine":70,"endColumn":30},{"ruleId":"1676","severity":1,"message":"1677","line":73,"column":35,"nodeType":"1678","messageId":"1679","endLine":73,"endColumn":37},{"ruleId":"1672","severity":1,"message":"1673","line":94,"column":62,"nodeType":"1674","messageId":"1675","endLine":94,"endColumn":63},{"ruleId":"1676","severity":1,"message":"1677","line":112,"column":34,"nodeType":"1678","messageId":"1679","endLine":112,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":114,"column":25,"nodeType":"1712","messageId":"1703","endLine":114,"endColumn":29},{"ruleId":"1710","severity":1,"message":"1711","line":115,"column":26,"nodeType":"1712","messageId":"1703","endLine":115,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":168,"column":28,"nodeType":"1674","messageId":"1703","endLine":168,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1893","line":192,"column":26,"nodeType":"1654","messageId":"1655","endLine":192,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1894","line":205,"column":9,"nodeType":"1654","messageId":"1655","endLine":205,"endColumn":27},{"ruleId":"1701","severity":1,"message":"1702","line":274,"column":28,"nodeType":"1674","messageId":"1703","endLine":274,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":296,"column":36,"nodeType":"1674","messageId":"1703","endLine":296,"endColumn":38},{"ruleId":"1676","severity":1,"message":"1677","line":305,"column":31,"nodeType":"1678","messageId":"1679","endLine":305,"endColumn":33},{"ruleId":"1676","severity":1,"message":"1677","line":308,"column":34,"nodeType":"1678","messageId":"1679","endLine":308,"endColumn":36},{"ruleId":"1704","severity":1,"message":"1895","line":311,"column":18,"nodeType":"1654","messageId":"1706","endLine":311,"endColumn":21},{"ruleId":"1701","severity":1,"message":"1702","line":348,"column":30,"nodeType":"1674","messageId":"1703","endLine":348,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":363,"column":11,"nodeType":"1654","messageId":"1706","endLine":363,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1707","line":365,"column":11,"nodeType":"1654","messageId":"1706","endLine":365,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1708","line":370,"column":11,"nodeType":"1654","messageId":"1706","endLine":370,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":383,"column":30,"nodeType":"1674","messageId":"1703","endLine":383,"endColumn":32},{"ruleId":"1896","severity":1,"message":"1897","line":424,"column":91,"nodeType":"1898","messageId":"1703","endLine":424,"endColumn":106},{"ruleId":"1701","severity":1,"message":"1702","line":436,"column":32,"nodeType":"1674","messageId":"1703","endLine":436,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1720","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":2,"column":21,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1664","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1813","line":5,"column":8,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1814","line":6,"column":8,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1719","line":7,"column":8,"nodeType":"1654","messageId":"1655","endLine":7,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1855","line":17,"column":17,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1852","line":21,"column":10,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1853","line":21,"column":21,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1899","line":22,"column":10,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1900","line":22,"column":29,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":49},{"ruleId":"1652","severity":1,"message":"1901","line":23,"column":10,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":24},{"ruleId":"1652","severity":1,"message":"1902","line":23,"column":26,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":43},{"ruleId":"1652","severity":1,"message":"1903","line":25,"column":10,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1904","line":25,"column":31,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":53},{"ruleId":"1652","severity":1,"message":"1905","line":26,"column":10,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1906","line":26,"column":32,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":55},{"ruleId":"1652","severity":1,"message":"1907","line":27,"column":10,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1908","line":27,"column":33,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":57},{"ruleId":"1652","severity":1,"message":"1909","line":28,"column":10,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1910","line":28,"column":32,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":55},{"ruleId":"1652","severity":1,"message":"1911","line":29,"column":10,"nodeType":"1654","messageId":"1655","endLine":29,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1912","line":29,"column":37,"nodeType":"1654","messageId":"1655","endLine":29,"endColumn":65},{"ruleId":"1652","severity":1,"message":"1913","line":30,"column":10,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1914","line":30,"column":35,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":61},{"ruleId":"1652","severity":1,"message":"1915","line":31,"column":10,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1916","line":31,"column":36,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":63},{"ruleId":"1652","severity":1,"message":"1917","line":34,"column":10,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1918","line":34,"column":18,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1919","line":35,"column":10,"nodeType":"1654","messageId":"1655","endLine":35,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1920","line":35,"column":17,"nodeType":"1654","messageId":"1655","endLine":35,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1696","line":36,"column":10,"nodeType":"1654","messageId":"1655","endLine":36,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1921","line":37,"column":10,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1922","line":39,"column":10,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1923","line":39,"column":33,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":57},{"ruleId":"1652","severity":1,"message":"1924","line":40,"column":10,"nodeType":"1654","messageId":"1655","endLine":40,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1925","line":40,"column":30,"nodeType":"1654","messageId":"1655","endLine":40,"endColumn":51},{"ruleId":"1652","severity":1,"message":"1926","line":42,"column":10,"nodeType":"1654","messageId":"1655","endLine":42,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1927","line":42,"column":35,"nodeType":"1654","messageId":"1655","endLine":42,"endColumn":61},{"ruleId":"1652","severity":1,"message":"1928","line":43,"column":10,"nodeType":"1654","messageId":"1655","endLine":43,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1929","line":43,"column":36,"nodeType":"1654","messageId":"1655","endLine":43,"endColumn":63},{"ruleId":"1652","severity":1,"message":"1930","line":44,"column":10,"nodeType":"1654","messageId":"1655","endLine":44,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1931","line":44,"column":37,"nodeType":"1654","messageId":"1655","endLine":44,"endColumn":65},{"ruleId":"1652","severity":1,"message":"1932","line":45,"column":10,"nodeType":"1654","messageId":"1655","endLine":45,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1933","line":45,"column":36,"nodeType":"1654","messageId":"1655","endLine":45,"endColumn":63},{"ruleId":"1652","severity":1,"message":"1934","line":46,"column":10,"nodeType":"1654","messageId":"1655","endLine":46,"endColumn":39},{"ruleId":"1652","severity":1,"message":"1935","line":46,"column":41,"nodeType":"1654","messageId":"1655","endLine":46,"endColumn":73},{"ruleId":"1652","severity":1,"message":"1936","line":47,"column":10,"nodeType":"1654","messageId":"1655","endLine":47,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1937","line":47,"column":39,"nodeType":"1654","messageId":"1655","endLine":47,"endColumn":69},{"ruleId":"1652","severity":1,"message":"1938","line":48,"column":10,"nodeType":"1654","messageId":"1655","endLine":48,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1939","line":48,"column":40,"nodeType":"1654","messageId":"1655","endLine":48,"endColumn":71},{"ruleId":"1652","severity":1,"message":"1940","line":49,"column":10,"nodeType":"1654","messageId":"1655","endLine":49,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1941","line":53,"column":10,"nodeType":"1654","messageId":"1655","endLine":53,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1893","line":75,"column":26,"nodeType":"1654","messageId":"1655","endLine":75,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1787","line":95,"column":9,"nodeType":"1654","messageId":"1655","endLine":95,"endColumn":28},{"ruleId":"1680","severity":1,"message":"1871","line":108,"column":6,"nodeType":"1682","endLine":108,"endColumn":8,"suggestions":"1942"},{"ruleId":"1701","severity":1,"message":"1702","line":123,"column":28,"nodeType":"1674","messageId":"1703","endLine":123,"endColumn":30},{"ruleId":"1676","severity":1,"message":"1677","line":139,"column":34,"nodeType":"1678","messageId":"1679","endLine":139,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":141,"column":25,"nodeType":"1712","messageId":"1703","endLine":141,"endColumn":29},{"ruleId":"1710","severity":1,"message":"1711","line":142,"column":26,"nodeType":"1712","messageId":"1703","endLine":142,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1943","line":177,"column":9,"nodeType":"1654","messageId":"1655","endLine":177,"endColumn":20},{"ruleId":"1701","severity":1,"message":"1702","line":205,"column":28,"nodeType":"1674","messageId":"1703","endLine":205,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":260,"column":36,"nodeType":"1674","messageId":"1703","endLine":260,"endColumn":38},{"ruleId":"1676","severity":1,"message":"1677","line":269,"column":31,"nodeType":"1678","messageId":"1679","endLine":269,"endColumn":33},{"ruleId":"1676","severity":1,"message":"1677","line":273,"column":34,"nodeType":"1678","messageId":"1679","endLine":273,"endColumn":36},{"ruleId":"1704","severity":1,"message":"1895","line":276,"column":18,"nodeType":"1654","messageId":"1706","endLine":276,"endColumn":21},{"ruleId":"1701","severity":1,"message":"1702","line":312,"column":30,"nodeType":"1674","messageId":"1703","endLine":312,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":330,"column":11,"nodeType":"1654","messageId":"1706","endLine":330,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1707","line":332,"column":11,"nodeType":"1654","messageId":"1706","endLine":332,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1708","line":336,"column":11,"nodeType":"1654","messageId":"1706","endLine":336,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":351,"column":30,"nodeType":"1674","messageId":"1703","endLine":351,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1723","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1664","line":5,"column":8,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1944","line":8,"column":7,"nodeType":"1654","messageId":"1655","endLine":8,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1840","line":21,"column":19,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":29},{"ruleId":"1672","severity":1,"message":"1673","line":34,"column":52,"nodeType":"1674","messageId":"1675","endLine":34,"endColumn":53},{"ruleId":"1701","severity":1,"message":"1702","line":39,"column":24,"nodeType":"1674","messageId":"1703","endLine":39,"endColumn":26},{"ruleId":"1680","severity":1,"message":"1871","line":52,"column":6,"nodeType":"1682","endLine":52,"endColumn":8,"suggestions":"1945"},{"ruleId":"1676","severity":1,"message":"1677","line":56,"column":34,"nodeType":"1678","messageId":"1679","endLine":56,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1944","line":8,"column":7,"nodeType":"1654","messageId":"1655","endLine":8,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1946","line":21,"column":10,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1947","line":21,"column":21,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1840","line":26,"column":19,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1948","line":28,"column":18,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1842","line":34,"column":8,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1843","line":34,"column":23,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":39},{"ruleId":"1652","severity":1,"message":"1949","line":44,"column":10,"nodeType":"1654","messageId":"1655","endLine":44,"endColumn":18},{"ruleId":"1701","severity":1,"message":"1702","line":160,"column":28,"nodeType":"1674","messageId":"1703","endLine":160,"endColumn":30},{"ruleId":"1672","severity":1,"message":"1673","line":286,"column":57,"nodeType":"1674","messageId":"1675","endLine":286,"endColumn":58},{"ruleId":"1701","severity":1,"message":"1702","line":291,"column":24,"nodeType":"1674","messageId":"1703","endLine":291,"endColumn":26},{"ruleId":"1680","severity":1,"message":"1871","line":307,"column":6,"nodeType":"1682","endLine":307,"endColumn":8,"suggestions":"1950"},{"ruleId":"1676","severity":1,"message":"1677","line":320,"column":34,"nodeType":"1678","messageId":"1679","endLine":320,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1720","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":2,"column":21,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1951","line":3,"column":8,"nodeType":"1654","messageId":"1655","endLine":3,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1952","line":18,"column":30,"nodeType":"1654","messageId":"1655","endLine":18,"endColumn":49},{"ruleId":"1652","severity":1,"message":"1953","line":20,"column":37,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":63},{"ruleId":"1652","severity":1,"message":"1954","line":22,"column":28,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1955","line":24,"column":33,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":55},{"ruleId":"1652","severity":1,"message":"1956","line":27,"column":24,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1957","line":32,"column":30,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":49},{"ruleId":"1652","severity":1,"message":"1958","line":34,"column":37,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":63},{"ruleId":"1652","severity":1,"message":"1959","line":36,"column":28,"nodeType":"1654","messageId":"1655","endLine":36,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1960","line":38,"column":33,"nodeType":"1654","messageId":"1655","endLine":38,"endColumn":55},{"ruleId":"1652","severity":1,"message":"1961","line":41,"column":24,"nodeType":"1654","messageId":"1655","endLine":41,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1962","line":46,"column":30,"nodeType":"1654","messageId":"1655","endLine":46,"endColumn":49},{"ruleId":"1652","severity":1,"message":"1963","line":48,"column":37,"nodeType":"1654","messageId":"1655","endLine":48,"endColumn":63},{"ruleId":"1652","severity":1,"message":"1964","line":50,"column":28,"nodeType":"1654","messageId":"1655","endLine":50,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1965","line":52,"column":33,"nodeType":"1654","messageId":"1655","endLine":52,"endColumn":55},{"ruleId":"1652","severity":1,"message":"1966","line":55,"column":24,"nodeType":"1654","messageId":"1655","endLine":55,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1967","line":58,"column":30,"nodeType":"1654","messageId":"1655","endLine":58,"endColumn":49},{"ruleId":"1652","severity":1,"message":"1968","line":60,"column":37,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":63},{"ruleId":"1652","severity":1,"message":"1969","line":62,"column":28,"nodeType":"1654","messageId":"1655","endLine":62,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1970","line":64,"column":33,"nodeType":"1654","messageId":"1655","endLine":64,"endColumn":55},{"ruleId":"1652","severity":1,"message":"1971","line":67,"column":24,"nodeType":"1654","messageId":"1655","endLine":67,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1972","line":71,"column":30,"nodeType":"1654","messageId":"1655","endLine":71,"endColumn":49},{"ruleId":"1652","severity":1,"message":"1973","line":73,"column":37,"nodeType":"1654","messageId":"1655","endLine":73,"endColumn":63},{"ruleId":"1652","severity":1,"message":"1974","line":75,"column":28,"nodeType":"1654","messageId":"1655","endLine":75,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1975","line":77,"column":33,"nodeType":"1654","messageId":"1655","endLine":77,"endColumn":55},{"ruleId":"1652","severity":1,"message":"1976","line":80,"column":24,"nodeType":"1654","messageId":"1655","endLine":80,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1977","line":84,"column":30,"nodeType":"1654","messageId":"1655","endLine":84,"endColumn":49},{"ruleId":"1652","severity":1,"message":"1978","line":86,"column":37,"nodeType":"1654","messageId":"1655","endLine":86,"endColumn":63},{"ruleId":"1652","severity":1,"message":"1979","line":88,"column":28,"nodeType":"1654","messageId":"1655","endLine":88,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1980","line":90,"column":33,"nodeType":"1654","messageId":"1655","endLine":90,"endColumn":55},{"ruleId":"1652","severity":1,"message":"1981","line":93,"column":24,"nodeType":"1654","messageId":"1655","endLine":93,"endColumn":37},{"ruleId":"1652","severity":1,"message":"1816","line":97,"column":12,"nodeType":"1654","messageId":"1655","endLine":97,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1982","line":97,"column":21,"nodeType":"1654","messageId":"1655","endLine":97,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1941","line":98,"column":12,"nodeType":"1654","messageId":"1655","endLine":98,"endColumn":23},{"ruleId":"1701","severity":1,"message":"1702","line":161,"column":36,"nodeType":"1674","messageId":"1703","endLine":161,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1787","line":206,"column":11,"nodeType":"1654","messageId":"1655","endLine":206,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1713","line":259,"column":31,"nodeType":"1674","messageId":"1703","endLine":259,"endColumn":33},{"ruleId":"1983","severity":1,"message":"1984","line":259,"column":40,"nodeType":"1674","messageId":"1985","endLine":259,"endColumn":64},{"ruleId":"1701","severity":1,"message":"1702","line":259,"column":58,"nodeType":"1674","messageId":"1703","endLine":259,"endColumn":60},{"ruleId":"1701","severity":1,"message":"1713","line":274,"column":31,"nodeType":"1674","messageId":"1703","endLine":274,"endColumn":33},{"ruleId":"1983","severity":1,"message":"1984","line":274,"column":40,"nodeType":"1674","messageId":"1985","endLine":274,"endColumn":64},{"ruleId":"1701","severity":1,"message":"1702","line":274,"column":58,"nodeType":"1674","messageId":"1703","endLine":274,"endColumn":60},{"ruleId":"1701","severity":1,"message":"1713","line":287,"column":31,"nodeType":"1674","messageId":"1703","endLine":287,"endColumn":33},{"ruleId":"1983","severity":1,"message":"1984","line":287,"column":40,"nodeType":"1674","messageId":"1985","endLine":287,"endColumn":64},{"ruleId":"1701","severity":1,"message":"1702","line":287,"column":58,"nodeType":"1674","messageId":"1703","endLine":287,"endColumn":60},{"ruleId":"1701","severity":1,"message":"1713","line":301,"column":31,"nodeType":"1674","messageId":"1703","endLine":301,"endColumn":33},{"ruleId":"1983","severity":1,"message":"1984","line":301,"column":40,"nodeType":"1674","messageId":"1985","endLine":301,"endColumn":64},{"ruleId":"1701","severity":1,"message":"1702","line":301,"column":58,"nodeType":"1674","messageId":"1703","endLine":301,"endColumn":60},{"ruleId":"1680","severity":1,"message":"1986","line":324,"column":8,"nodeType":"1682","endLine":324,"endColumn":10,"suggestions":"1987"},{"ruleId":"1701","severity":1,"message":"1702","line":722,"column":40,"nodeType":"1674","messageId":"1703","endLine":722,"endColumn":42},{"ruleId":"1704","severity":1,"message":"1705","line":739,"column":17,"nodeType":"1654","messageId":"1706","endLine":739,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1832","line":741,"column":17,"nodeType":"1654","messageId":"1706","endLine":741,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1833","line":822,"column":17,"nodeType":"1654","messageId":"1706","endLine":822,"endColumn":39},{"ruleId":"1701","severity":1,"message":"1702","line":832,"column":40,"nodeType":"1674","messageId":"1703","endLine":832,"endColumn":42},{"ruleId":"1652","severity":1,"message":"1810","line":21,"column":9,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1842","line":25,"column":8,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1843","line":25,"column":23,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":39},{"ruleId":"1701","severity":1,"message":"1702","line":130,"column":28,"nodeType":"1674","messageId":"1703","endLine":130,"endColumn":30},{"ruleId":"1680","severity":1,"message":"1714","line":218,"column":6,"nodeType":"1682","endLine":218,"endColumn":8,"suggestions":"1988"},{"ruleId":"1676","severity":1,"message":"1677","line":224,"column":30,"nodeType":"1678","messageId":"1679","endLine":224,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1664","line":6,"column":8,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1720","line":10,"column":10,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":10,"column":21,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":11,"column":10,"nodeType":"1654","messageId":"1655","endLine":11,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":11,"column":30,"nodeType":"1654","messageId":"1655","endLine":11,"endColumn":36},{"ruleId":"1704","severity":1,"message":"1989","line":17,"column":7,"nodeType":"1654","messageId":"1706","endLine":17,"endColumn":11},{"ruleId":"1652","severity":1,"message":"1990","line":36,"column":8,"nodeType":"1654","messageId":"1655","endLine":36,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1991","line":39,"column":8,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1992","line":39,"column":17,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1737","line":46,"column":10,"nodeType":"1654","messageId":"1655","endLine":46,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":46,"column":19,"nodeType":"1654","messageId":"1655","endLine":46,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":48,"column":10,"nodeType":"1654","messageId":"1655","endLine":48,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":48,"column":27,"nodeType":"1654","messageId":"1655","endLine":48,"endColumn":45},{"ruleId":"1680","severity":1,"message":"1699","line":59,"column":6,"nodeType":"1682","endLine":59,"endColumn":8,"suggestions":"1993"},{"ruleId":"1652","severity":1,"message":"1787","line":61,"column":9,"nodeType":"1654","messageId":"1655","endLine":61,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1783","line":71,"column":9,"nodeType":"1654","messageId":"1655","endLine":71,"endColumn":18},{"ruleId":"1701","severity":1,"message":"1702","line":100,"column":30,"nodeType":"1674","messageId":"1703","endLine":100,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":114,"column":11,"nodeType":"1654","messageId":"1706","endLine":114,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1832","line":116,"column":11,"nodeType":"1654","messageId":"1706","endLine":116,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1833","line":124,"column":11,"nodeType":"1654","messageId":"1706","endLine":124,"endColumn":33},{"ruleId":"1672","severity":1,"message":"1673","line":131,"column":58,"nodeType":"1674","messageId":"1675","endLine":131,"endColumn":59},{"ruleId":"1701","severity":1,"message":"1702","line":137,"column":30,"nodeType":"1674","messageId":"1703","endLine":137,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":153,"column":33,"nodeType":"1678","messageId":"1679","endLine":153,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1994","line":154,"column":13,"nodeType":"1654","messageId":"1655","endLine":154,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1673","line":171,"column":63,"nodeType":"1674","messageId":"1675","endLine":171,"endColumn":64},{"ruleId":"1701","severity":1,"message":"1702","line":175,"column":32,"nodeType":"1674","messageId":"1703","endLine":175,"endColumn":34},{"ruleId":"1701","severity":1,"message":"1702","line":191,"column":15,"nodeType":"1674","messageId":"1703","endLine":191,"endColumn":17},{"ruleId":"1701","severity":1,"message":"1702","line":194,"column":15,"nodeType":"1674","messageId":"1703","endLine":194,"endColumn":17},{"ruleId":"1676","severity":1,"message":"1677","line":216,"column":34,"nodeType":"1678","messageId":"1679","endLine":216,"endColumn":36},{"ruleId":"1704","severity":1,"message":"1705","line":230,"column":9,"nodeType":"1654","messageId":"1706","endLine":230,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1995","line":232,"column":9,"nodeType":"1654","messageId":"1706","endLine":232,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1996","line":245,"column":9,"nodeType":"1654","messageId":"1655","endLine":245,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1997","line":250,"column":9,"nodeType":"1654","messageId":"1655","endLine":250,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1692","line":5,"column":21,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1828","line":16,"column":9,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1829","line":17,"column":9,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1830","line":18,"column":9,"nodeType":"1654","messageId":"1655","endLine":18,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1847","line":21,"column":16,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1849","line":22,"column":17,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1850","line":24,"column":10,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1851","line":24,"column":20,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1852","line":25,"column":10,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1853","line":25,"column":21,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1854","line":34,"column":10,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1855","line":34,"column":17,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1737","line":37,"column":10,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":37,"column":19,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":38,"column":10,"nodeType":"1654","messageId":"1655","endLine":38,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":38,"column":27,"nodeType":"1654","messageId":"1655","endLine":38,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1823","line":54,"column":10,"nodeType":"1654","messageId":"1655","endLine":54,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1697","line":65,"column":10,"nodeType":"1654","messageId":"1655","endLine":65,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1698","line":65,"column":18,"nodeType":"1654","messageId":"1655","endLine":65,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1741","line":73,"column":10,"nodeType":"1654","messageId":"1655","endLine":73,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1998","line":73,"column":20,"nodeType":"1654","messageId":"1655","endLine":73,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1952","line":142,"column":28,"nodeType":"1654","messageId":"1655","endLine":142,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1953","line":144,"column":35,"nodeType":"1654","messageId":"1655","endLine":144,"endColumn":61},{"ruleId":"1652","severity":1,"message":"1954","line":146,"column":26,"nodeType":"1654","messageId":"1655","endLine":146,"endColumn":43},{"ruleId":"1652","severity":1,"message":"1955","line":148,"column":31,"nodeType":"1654","messageId":"1655","endLine":148,"endColumn":53},{"ruleId":"1652","severity":1,"message":"1956","line":151,"column":22,"nodeType":"1654","messageId":"1655","endLine":151,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1957","line":156,"column":28,"nodeType":"1654","messageId":"1655","endLine":156,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1958","line":158,"column":35,"nodeType":"1654","messageId":"1655","endLine":158,"endColumn":61},{"ruleId":"1652","severity":1,"message":"1959","line":160,"column":26,"nodeType":"1654","messageId":"1655","endLine":160,"endColumn":43},{"ruleId":"1652","severity":1,"message":"1960","line":162,"column":31,"nodeType":"1654","messageId":"1655","endLine":162,"endColumn":53},{"ruleId":"1652","severity":1,"message":"1961","line":165,"column":22,"nodeType":"1654","messageId":"1655","endLine":165,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1962","line":170,"column":28,"nodeType":"1654","messageId":"1655","endLine":170,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1963","line":172,"column":35,"nodeType":"1654","messageId":"1655","endLine":172,"endColumn":61},{"ruleId":"1652","severity":1,"message":"1964","line":174,"column":26,"nodeType":"1654","messageId":"1655","endLine":174,"endColumn":43},{"ruleId":"1652","severity":1,"message":"1965","line":176,"column":31,"nodeType":"1654","messageId":"1655","endLine":176,"endColumn":53},{"ruleId":"1652","severity":1,"message":"1966","line":179,"column":22,"nodeType":"1654","messageId":"1655","endLine":179,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1967","line":182,"column":28,"nodeType":"1654","messageId":"1655","endLine":182,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1968","line":184,"column":35,"nodeType":"1654","messageId":"1655","endLine":184,"endColumn":61},{"ruleId":"1652","severity":1,"message":"1969","line":186,"column":26,"nodeType":"1654","messageId":"1655","endLine":186,"endColumn":43},{"ruleId":"1652","severity":1,"message":"1970","line":188,"column":31,"nodeType":"1654","messageId":"1655","endLine":188,"endColumn":53},{"ruleId":"1652","severity":1,"message":"1971","line":191,"column":22,"nodeType":"1654","messageId":"1655","endLine":191,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1972","line":195,"column":28,"nodeType":"1654","messageId":"1655","endLine":195,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1973","line":197,"column":35,"nodeType":"1654","messageId":"1655","endLine":197,"endColumn":61},{"ruleId":"1652","severity":1,"message":"1974","line":199,"column":26,"nodeType":"1654","messageId":"1655","endLine":199,"endColumn":43},{"ruleId":"1652","severity":1,"message":"1975","line":201,"column":31,"nodeType":"1654","messageId":"1655","endLine":201,"endColumn":53},{"ruleId":"1652","severity":1,"message":"1976","line":204,"column":22,"nodeType":"1654","messageId":"1655","endLine":204,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1977","line":208,"column":28,"nodeType":"1654","messageId":"1655","endLine":208,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1978","line":210,"column":35,"nodeType":"1654","messageId":"1655","endLine":210,"endColumn":61},{"ruleId":"1652","severity":1,"message":"1979","line":212,"column":26,"nodeType":"1654","messageId":"1655","endLine":212,"endColumn":43},{"ruleId":"1652","severity":1,"message":"1980","line":214,"column":31,"nodeType":"1654","messageId":"1655","endLine":214,"endColumn":53},{"ruleId":"1652","severity":1,"message":"1981","line":217,"column":22,"nodeType":"1654","messageId":"1655","endLine":217,"endColumn":35},{"ruleId":"1680","severity":1,"message":"1699","line":266,"column":6,"nodeType":"1682","endLine":266,"endColumn":8,"suggestions":"1999"},{"ruleId":"1701","severity":1,"message":"1702","line":278,"column":20,"nodeType":"1674","messageId":"1703","endLine":278,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":296,"column":30,"nodeType":"1674","messageId":"1703","endLine":296,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1713","line":308,"column":27,"nodeType":"1674","messageId":"1703","endLine":308,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":336,"column":23,"nodeType":"1674","messageId":"1703","endLine":336,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":406,"column":30,"nodeType":"1674","messageId":"1703","endLine":406,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":417,"column":23,"nodeType":"1674","messageId":"1703","endLine":417,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":487,"column":30,"nodeType":"1674","messageId":"1703","endLine":487,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":549,"column":30,"nodeType":"1674","messageId":"1703","endLine":549,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":562,"column":11,"nodeType":"1654","messageId":"1706","endLine":562,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1832","line":564,"column":11,"nodeType":"1654","messageId":"1706","endLine":564,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1833","line":587,"column":11,"nodeType":"1654","messageId":"1706","endLine":587,"endColumn":33},{"ruleId":"1672","severity":1,"message":"1673","line":594,"column":57,"nodeType":"1674","messageId":"1675","endLine":594,"endColumn":58},{"ruleId":"1701","severity":1,"message":"1702","line":598,"column":30,"nodeType":"1674","messageId":"1703","endLine":598,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":645,"column":34,"nodeType":"1678","messageId":"1679","endLine":645,"endColumn":36},{"ruleId":"1701","severity":1,"message":"1702","line":721,"column":28,"nodeType":"1674","messageId":"1703","endLine":721,"endColumn":30},{"ruleId":"1704","severity":1,"message":"1705","line":737,"column":9,"nodeType":"1654","messageId":"1706","endLine":737,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1995","line":740,"column":9,"nodeType":"1654","messageId":"1706","endLine":740,"endColumn":26},{"ruleId":"1676","severity":1,"message":"1677","line":750,"column":34,"nodeType":"1678","messageId":"1679","endLine":750,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1856","line":771,"column":9,"nodeType":"1654","messageId":"1655","endLine":771,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1857","line":805,"column":9,"nodeType":"1654","messageId":"1655","endLine":805,"endColumn":17},{"ruleId":"1701","severity":1,"message":"1702","line":888,"column":24,"nodeType":"1674","messageId":"1703","endLine":888,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":932,"column":32,"nodeType":"1674","messageId":"1703","endLine":932,"endColumn":34},{"ruleId":"1652","severity":1,"message":"1772","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1773","line":2,"column":18,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1692","line":4,"column":21,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":5,"column":10,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":5,"column":30,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1774","line":17,"column":7,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":11},{"ruleId":"1652","severity":1,"message":"1737","line":51,"column":10,"nodeType":"1654","messageId":"1655","endLine":51,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":51,"column":19,"nodeType":"1654","messageId":"1655","endLine":51,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":53,"column":10,"nodeType":"1654","messageId":"1655","endLine":53,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":53,"column":27,"nodeType":"1654","messageId":"1655","endLine":53,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1778","line":55,"column":21,"nodeType":"1654","messageId":"1655","endLine":55,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1779","line":56,"column":10,"nodeType":"1654","messageId":"1655","endLine":56,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1780","line":56,"column":16,"nodeType":"1654","messageId":"1655","endLine":56,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1781","line":57,"column":10,"nodeType":"1654","messageId":"1655","endLine":57,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1782","line":57,"column":17,"nodeType":"1654","messageId":"1655","endLine":57,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1697","line":76,"column":10,"nodeType":"1654","messageId":"1655","endLine":76,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1698","line":76,"column":18,"nodeType":"1654","messageId":"1655","endLine":76,"endColumn":27},{"ruleId":"1701","severity":1,"message":"1702","line":86,"column":18,"nodeType":"1674","messageId":"1703","endLine":86,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1785","line":87,"column":11,"nodeType":"1654","messageId":"1706","endLine":87,"endColumn":19},{"ruleId":"1701","severity":1,"message":"1702","line":89,"column":25,"nodeType":"1674","messageId":"1703","endLine":89,"endColumn":27},{"ruleId":"1704","severity":1,"message":"1785","line":90,"column":11,"nodeType":"1654","messageId":"1706","endLine":90,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1785","line":93,"column":11,"nodeType":"1654","messageId":"1706","endLine":93,"endColumn":19},{"ruleId":"1701","severity":1,"message":"1702","line":115,"column":28,"nodeType":"1674","messageId":"1703","endLine":115,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1786","line":133,"column":9,"nodeType":"1654","messageId":"1655","endLine":133,"endColumn":13},{"ruleId":"1701","severity":1,"message":"1702","line":205,"column":28,"nodeType":"1674","messageId":"1703","endLine":205,"endColumn":30},{"ruleId":"1680","severity":1,"message":"1844","line":261,"column":6,"nodeType":"1682","endLine":261,"endColumn":8,"suggestions":"2000"},{"ruleId":"1652","severity":1,"message":"1788","line":310,"column":9,"nodeType":"1654","messageId":"1655","endLine":310,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1789","line":321,"column":9,"nodeType":"1654","messageId":"1655","endLine":321,"endColumn":17},{"ruleId":"1701","severity":1,"message":"1702","line":353,"column":28,"nodeType":"1674","messageId":"1703","endLine":353,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":379,"column":20,"nodeType":"1674","messageId":"1703","endLine":379,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":397,"column":30,"nodeType":"1674","messageId":"1703","endLine":397,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1713","line":409,"column":27,"nodeType":"1674","messageId":"1703","endLine":409,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":438,"column":23,"nodeType":"1674","messageId":"1703","endLine":438,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":508,"column":30,"nodeType":"1674","messageId":"1703","endLine":508,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":519,"column":23,"nodeType":"1674","messageId":"1703","endLine":519,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":589,"column":30,"nodeType":"1674","messageId":"1703","endLine":589,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":618,"column":24,"nodeType":"1674","messageId":"1703","endLine":618,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":662,"column":32,"nodeType":"1674","messageId":"1703","endLine":662,"endColumn":34},{"ruleId":"1701","severity":1,"message":"1702","line":1333,"column":66,"nodeType":"1674","messageId":"1703","endLine":1333,"endColumn":68},{"ruleId":"1701","severity":1,"message":"1702","line":1389,"column":96,"nodeType":"1674","messageId":"1703","endLine":1389,"endColumn":98},{"ruleId":"1701","severity":1,"message":"1702","line":1512,"column":50,"nodeType":"1674","messageId":"1703","endLine":1512,"endColumn":52},{"ruleId":"1652","severity":1,"message":"1875","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1876","line":2,"column":23,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1877","line":2,"column":28,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1879","line":11,"column":10,"nodeType":"1654","messageId":"1655","endLine":11,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1726","line":13,"column":10,"nodeType":"1654","messageId":"1655","endLine":13,"endColumn":19},{"ruleId":"1652","severity":1,"message":"2001","line":16,"column":10,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1880","line":17,"column":10,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1881","line":17,"column":19,"nodeType":"1654","messageId":"1655","endLine":17,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1882","line":18,"column":10,"nodeType":"1654","messageId":"1655","endLine":18,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1883","line":18,"column":20,"nodeType":"1654","messageId":"1655","endLine":18,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1884","line":19,"column":10,"nodeType":"1654","messageId":"1655","endLine":19,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1885","line":20,"column":10,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1854","line":21,"column":10,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1886","line":22,"column":21,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2002","line":23,"column":20,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1823","line":24,"column":10,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1888","line":26,"column":10,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1889","line":30,"column":7,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":9},{"ruleId":"1652","severity":1,"message":"1890","line":31,"column":9,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":15},{"ruleId":"1680","severity":1,"message":"1699","line":40,"column":6,"nodeType":"1682","endLine":40,"endColumn":8,"suggestions":"2003"},{"ruleId":"1672","severity":1,"message":"1673","line":56,"column":59,"nodeType":"1674","messageId":"1675","endLine":56,"endColumn":60},{"ruleId":"1652","severity":1,"message":"1892","line":61,"column":13,"nodeType":"1654","messageId":"1655","endLine":61,"endColumn":17},{"ruleId":"1676","severity":1,"message":"1677","line":62,"column":34,"nodeType":"1678","messageId":"1679","endLine":62,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":63,"column":25,"nodeType":"1712","messageId":"1703","endLine":63,"endColumn":29},{"ruleId":"1710","severity":1,"message":"1711","line":64,"column":26,"nodeType":"1712","messageId":"1703","endLine":64,"endColumn":30},{"ruleId":"1676","severity":1,"message":"1677","line":67,"column":35,"nodeType":"1678","messageId":"1679","endLine":67,"endColumn":37},{"ruleId":"1672","severity":1,"message":"1673","line":87,"column":60,"nodeType":"1674","messageId":"1675","endLine":87,"endColumn":61},{"ruleId":"1652","severity":1,"message":"2004","line":95,"column":13,"nodeType":"1654","messageId":"1655","endLine":95,"endColumn":22},{"ruleId":"1676","severity":1,"message":"1677","line":104,"column":34,"nodeType":"1678","messageId":"1679","endLine":104,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":106,"column":25,"nodeType":"1712","messageId":"1703","endLine":106,"endColumn":29},{"ruleId":"1652","severity":1,"message":"2005","line":107,"column":15,"nodeType":"1654","messageId":"1655","endLine":107,"endColumn":23},{"ruleId":"1710","severity":1,"message":"1711","line":107,"column":26,"nodeType":"1712","messageId":"1703","endLine":107,"endColumn":30},{"ruleId":"1710","severity":1,"message":"1711","line":109,"column":26,"nodeType":"1712","messageId":"1703","endLine":109,"endColumn":30},{"ruleId":"1652","severity":1,"message":"2006","line":153,"column":9,"nodeType":"1654","messageId":"1655","endLine":153,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":158,"column":42,"nodeType":"1674","messageId":"1703","endLine":158,"endColumn":44},{"ruleId":"1701","severity":1,"message":"1702","line":192,"column":28,"nodeType":"1674","messageId":"1703","endLine":192,"endColumn":30},{"ruleId":"1896","severity":1,"message":"1897","line":223,"column":108,"nodeType":"1898","messageId":"1703","endLine":223,"endColumn":123},{"ruleId":"1701","severity":1,"message":"1702","line":288,"column":100,"nodeType":"1674","messageId":"1703","endLine":288,"endColumn":102},{"ruleId":"1652","severity":1,"message":"1875","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1876","line":2,"column":23,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1877","line":2,"column":28,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1692","line":11,"column":21,"nodeType":"1654","messageId":"1655","endLine":11,"endColumn":28},{"ruleId":"1652","severity":1,"message":"2007","line":14,"column":18,"nodeType":"1654","messageId":"1655","endLine":14,"endColumn":29},{"ruleId":"1652","severity":1,"message":"2008","line":14,"column":31,"nodeType":"1654","messageId":"1655","endLine":14,"endColumn":41},{"ruleId":"1652","severity":1,"message":"2009","line":14,"column":43,"nodeType":"1654","messageId":"1655","endLine":14,"endColumn":51},{"ruleId":"1652","severity":1,"message":"2010","line":14,"column":53,"nodeType":"1654","messageId":"1655","endLine":14,"endColumn":65},{"ruleId":"1652","severity":1,"message":"2011","line":14,"column":67,"nodeType":"1654","messageId":"1655","endLine":14,"endColumn":73},{"ruleId":"1652","severity":1,"message":"2012","line":22,"column":10,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":29},{"ruleId":"1652","severity":1,"message":"2013","line":22,"column":31,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":53},{"ruleId":"1652","severity":1,"message":"1727","line":25,"column":21,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2014","line":26,"column":10,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":22},{"ruleId":"1652","severity":1,"message":"2015","line":26,"column":24,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":39},{"ruleId":"1652","severity":1,"message":"1880","line":30,"column":10,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1881","line":30,"column":19,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1882","line":31,"column":10,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1883","line":31,"column":20,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1884","line":34,"column":10,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":18},{"ruleId":"1652","severity":1,"message":"2016","line":37,"column":10,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":16},{"ruleId":"1652","severity":1,"message":"2017","line":37,"column":18,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1858","line":38,"column":10,"nodeType":"1654","messageId":"1655","endLine":38,"endColumn":16},{"ruleId":"1652","severity":1,"message":"2018","line":38,"column":18,"nodeType":"1654","messageId":"1655","endLine":38,"endColumn":27},{"ruleId":"1652","severity":1,"message":"2019","line":39,"column":10,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":16},{"ruleId":"1652","severity":1,"message":"2020","line":39,"column":18,"nodeType":"1654","messageId":"1655","endLine":39,"endColumn":27},{"ruleId":"1652","severity":1,"message":"2021","line":40,"column":10,"nodeType":"1654","messageId":"1655","endLine":40,"endColumn":16},{"ruleId":"1652","severity":1,"message":"2022","line":40,"column":18,"nodeType":"1654","messageId":"1655","endLine":40,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1886","line":41,"column":21,"nodeType":"1654","messageId":"1655","endLine":41,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2023","line":45,"column":10,"nodeType":"1654","messageId":"1655","endLine":45,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1889","line":49,"column":7,"nodeType":"1654","messageId":"1655","endLine":49,"endColumn":9},{"ruleId":"1652","severity":1,"message":"2024","line":55,"column":9,"nodeType":"1654","messageId":"1655","endLine":55,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1737","line":58,"column":10,"nodeType":"1654","messageId":"1655","endLine":58,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":58,"column":19,"nodeType":"1654","messageId":"1655","endLine":58,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":60,"column":10,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":60,"column":27,"nodeType":"1654","messageId":"1655","endLine":60,"endColumn":45},{"ruleId":"1652","severity":1,"message":"1697","line":79,"column":10,"nodeType":"1654","messageId":"1655","endLine":79,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1698","line":79,"column":18,"nodeType":"1654","messageId":"1655","endLine":79,"endColumn":27},{"ruleId":"1652","severity":1,"message":"2025","line":91,"column":10,"nodeType":"1654","messageId":"1655","endLine":91,"endColumn":19},{"ruleId":"1652","severity":1,"message":"2026","line":92,"column":10,"nodeType":"1654","messageId":"1655","endLine":92,"endColumn":21},{"ruleId":"1652","severity":1,"message":"2027","line":92,"column":23,"nodeType":"1654","messageId":"1655","endLine":92,"endColumn":37},{"ruleId":"1652","severity":1,"message":"2028","line":95,"column":10,"nodeType":"1654","messageId":"1655","endLine":95,"endColumn":16},{"ruleId":"1652","severity":1,"message":"2029","line":97,"column":10,"nodeType":"1654","messageId":"1655","endLine":97,"endColumn":22},{"ruleId":"1652","severity":1,"message":"2030","line":97,"column":24,"nodeType":"1654","messageId":"1655","endLine":97,"endColumn":39},{"ruleId":"1652","severity":1,"message":"2031","line":98,"column":10,"nodeType":"1654","messageId":"1655","endLine":98,"endColumn":14},{"ruleId":"1652","severity":1,"message":"2032","line":98,"column":16,"nodeType":"1654","messageId":"1655","endLine":98,"endColumn":23},{"ruleId":"1680","severity":1,"message":"1859","line":144,"column":6,"nodeType":"1682","endLine":144,"endColumn":8,"suggestions":"2033"},{"ruleId":"1672","severity":1,"message":"1673","line":176,"column":59,"nodeType":"1674","messageId":"1675","endLine":176,"endColumn":60},{"ruleId":"1652","severity":1,"message":"1892","line":182,"column":13,"nodeType":"1654","messageId":"1655","endLine":182,"endColumn":17},{"ruleId":"1676","severity":1,"message":"1677","line":183,"column":34,"nodeType":"1678","messageId":"1679","endLine":183,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":184,"column":25,"nodeType":"1712","messageId":"1703","endLine":184,"endColumn":29},{"ruleId":"1676","severity":1,"message":"1677","line":187,"column":35,"nodeType":"1678","messageId":"1679","endLine":187,"endColumn":37},{"ruleId":"1652","severity":1,"message":"2034","line":220,"column":15,"nodeType":"1654","messageId":"1655","endLine":220,"endColumn":23},{"ruleId":"1676","severity":1,"message":"2035","line":240,"column":34,"nodeType":"1678","messageId":"2036","endLine":240,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":241,"column":25,"nodeType":"1712","messageId":"1703","endLine":241,"endColumn":29},{"ruleId":"1710","severity":1,"message":"1711","line":242,"column":26,"nodeType":"1712","messageId":"1703","endLine":242,"endColumn":30},{"ruleId":"1652","severity":1,"message":"2037","line":243,"column":15,"nodeType":"1654","messageId":"1655","endLine":243,"endColumn":18},{"ruleId":"1652","severity":1,"message":"2038","line":261,"column":17,"nodeType":"1654","messageId":"1655","endLine":261,"endColumn":29},{"ruleId":"1676","severity":1,"message":"1677","line":270,"column":33,"nodeType":"1678","messageId":"1679","endLine":270,"endColumn":35},{"ruleId":"1676","severity":1,"message":"1677","line":278,"column":33,"nodeType":"1678","messageId":"1679","endLine":278,"endColumn":35},{"ruleId":"2039","severity":1,"message":"2040","line":313,"column":11,"nodeType":"2041","messageId":"2042","endLine":322,"endColumn":12},{"ruleId":"1676","severity":1,"message":"1677","line":314,"column":33,"nodeType":"1678","messageId":"1679","endLine":314,"endColumn":35},{"ruleId":"1676","severity":1,"message":"1677","line":343,"column":34,"nodeType":"1678","messageId":"1679","endLine":343,"endColumn":36},{"ruleId":"1652","severity":1,"message":"2043","line":363,"column":9,"nodeType":"1654","messageId":"1655","endLine":363,"endColumn":16},{"ruleId":"1701","severity":1,"message":"1713","line":391,"column":23,"nodeType":"1674","messageId":"1703","endLine":391,"endColumn":25},{"ruleId":"1652","severity":1,"message":"2044","line":473,"column":7,"nodeType":"1654","messageId":"1655","endLine":473,"endColumn":14},{"ruleId":"1652","severity":1,"message":"2045","line":474,"column":7,"nodeType":"1654","messageId":"1655","endLine":474,"endColumn":12},{"ruleId":"1676","severity":1,"message":"1677","line":477,"column":24,"nodeType":"1678","messageId":"1679","endLine":477,"endColumn":26},{"ruleId":"1652","severity":1,"message":"2046","line":485,"column":7,"nodeType":"1654","messageId":"1655","endLine":485,"endColumn":12},{"ruleId":"1652","severity":1,"message":"2047","line":488,"column":9,"nodeType":"1654","messageId":"1655","endLine":488,"endColumn":12},{"ruleId":"1676","severity":1,"message":"1677","line":498,"column":31,"nodeType":"1678","messageId":"1679","endLine":498,"endColumn":33},{"ruleId":"1676","severity":1,"message":"1677","line":502,"column":34,"nodeType":"1678","messageId":"1679","endLine":502,"endColumn":36},{"ruleId":"1704","severity":1,"message":"1895","line":506,"column":18,"nodeType":"1654","messageId":"1706","endLine":506,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1673","line":529,"column":55,"nodeType":"1674","messageId":"1675","endLine":529,"endColumn":56},{"ruleId":"1701","severity":1,"message":"1702","line":535,"column":28,"nodeType":"1674","messageId":"1703","endLine":535,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":554,"column":20,"nodeType":"1674","messageId":"1703","endLine":554,"endColumn":22},{"ruleId":"1701","severity":1,"message":"1702","line":572,"column":30,"nodeType":"1674","messageId":"1703","endLine":572,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1713","line":584,"column":27,"nodeType":"1674","messageId":"1703","endLine":584,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":612,"column":23,"nodeType":"1674","messageId":"1703","endLine":612,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":682,"column":30,"nodeType":"1674","messageId":"1703","endLine":682,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":693,"column":23,"nodeType":"1674","messageId":"1703","endLine":693,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":763,"column":30,"nodeType":"1674","messageId":"1703","endLine":763,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":793,"column":24,"nodeType":"1674","messageId":"1703","endLine":793,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":834,"column":32,"nodeType":"1674","messageId":"1703","endLine":834,"endColumn":34},{"ruleId":"1676","severity":1,"message":"2035","line":930,"column":46,"nodeType":"1678","messageId":"2036","endLine":930,"endColumn":48},{"ruleId":"1676","severity":1,"message":"2035","line":1437,"column":52,"nodeType":"1678","messageId":"2036","endLine":1437,"endColumn":54},{"ruleId":"1676","severity":1,"message":"2035","line":1478,"column":52,"nodeType":"1678","messageId":"2036","endLine":1478,"endColumn":54},{"ruleId":"1676","severity":1,"message":"2035","line":1593,"column":56,"nodeType":"1678","messageId":"2036","endLine":1593,"endColumn":58},{"ruleId":"1676","severity":1,"message":"2035","line":1634,"column":56,"nodeType":"1678","messageId":"2036","endLine":1634,"endColumn":58},{"ruleId":"1676","severity":1,"message":"2035","line":2121,"column":50,"nodeType":"1678","messageId":"2036","endLine":2121,"endColumn":52},{"ruleId":"1676","severity":1,"message":"2035","line":2162,"column":50,"nodeType":"1678","messageId":"2036","endLine":2162,"endColumn":52},{"ruleId":"1676","severity":1,"message":"2035","line":2277,"column":54,"nodeType":"1678","messageId":"2036","endLine":2277,"endColumn":56},{"ruleId":"1676","severity":1,"message":"2035","line":2318,"column":54,"nodeType":"1678","messageId":"2036","endLine":2318,"endColumn":56},{"ruleId":"1652","severity":1,"message":"1875","line":2,"column":10,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1876","line":2,"column":23,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1877","line":2,"column":28,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":32},{"ruleId":"1652","severity":1,"message":"1879","line":11,"column":10,"nodeType":"1654","messageId":"1655","endLine":11,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1880","line":18,"column":10,"nodeType":"1654","messageId":"1655","endLine":18,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1881","line":18,"column":19,"nodeType":"1654","messageId":"1655","endLine":18,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1882","line":19,"column":10,"nodeType":"1654","messageId":"1655","endLine":19,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1883","line":19,"column":20,"nodeType":"1654","messageId":"1655","endLine":19,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1884","line":20,"column":10,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1885","line":21,"column":10,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1886","line":23,"column":21,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":33},{"ruleId":"1652","severity":1,"message":"1888","line":27,"column":10,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1889","line":31,"column":7,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":9},{"ruleId":"1652","severity":1,"message":"1890","line":32,"column":9,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1673","line":47,"column":59,"nodeType":"1674","messageId":"1675","endLine":47,"endColumn":60},{"ruleId":"1652","severity":1,"message":"1892","line":52,"column":13,"nodeType":"1654","messageId":"1655","endLine":52,"endColumn":17},{"ruleId":"1676","severity":1,"message":"1677","line":53,"column":34,"nodeType":"1678","messageId":"1679","endLine":53,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":54,"column":25,"nodeType":"1712","messageId":"1703","endLine":54,"endColumn":29},{"ruleId":"1710","severity":1,"message":"1711","line":55,"column":26,"nodeType":"1712","messageId":"1703","endLine":55,"endColumn":30},{"ruleId":"1676","severity":1,"message":"1677","line":58,"column":35,"nodeType":"1678","messageId":"1679","endLine":58,"endColumn":37},{"ruleId":"1672","severity":1,"message":"1673","line":78,"column":60,"nodeType":"1674","messageId":"1675","endLine":78,"endColumn":61},{"ruleId":"1676","severity":1,"message":"1677","line":96,"column":34,"nodeType":"1678","messageId":"1679","endLine":96,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":98,"column":25,"nodeType":"1712","messageId":"1703","endLine":98,"endColumn":29},{"ruleId":"1710","severity":1,"message":"1711","line":99,"column":26,"nodeType":"1712","messageId":"1703","endLine":99,"endColumn":30},{"ruleId":"1680","severity":1,"message":"2048","line":147,"column":6,"nodeType":"1682","endLine":147,"endColumn":8,"suggestions":"2049"},{"ruleId":"1652","severity":1,"message":"1893","line":161,"column":25,"nodeType":"1654","messageId":"1655","endLine":161,"endColumn":28},{"ruleId":"1676","severity":1,"message":"1677","line":226,"column":31,"nodeType":"1678","messageId":"1679","endLine":226,"endColumn":33},{"ruleId":"1676","severity":1,"message":"1677","line":229,"column":34,"nodeType":"1678","messageId":"1679","endLine":229,"endColumn":36},{"ruleId":"1704","severity":1,"message":"1895","line":232,"column":18,"nodeType":"1654","messageId":"1706","endLine":232,"endColumn":21},{"ruleId":"1701","severity":1,"message":"1702","line":267,"column":30,"nodeType":"1674","messageId":"1703","endLine":267,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":280,"column":11,"nodeType":"1654","messageId":"1706","endLine":280,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1707","line":282,"column":11,"nodeType":"1654","messageId":"1706","endLine":282,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1708","line":288,"column":11,"nodeType":"1654","messageId":"1706","endLine":288,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":301,"column":30,"nodeType":"1674","messageId":"1703","endLine":301,"endColumn":32},{"ruleId":"1896","severity":1,"message":"1897","line":337,"column":108,"nodeType":"1898","messageId":"1703","endLine":337,"endColumn":123},{"ruleId":"1652","severity":1,"message":"1884","line":14,"column":10,"nodeType":"1654","messageId":"1655","endLine":14,"endColumn":18},{"ruleId":"1680","severity":1,"message":"1699","line":30,"column":6,"nodeType":"1682","endLine":30,"endColumn":8,"suggestions":"2050"},{"ruleId":"1701","severity":1,"message":"1702","line":38,"column":14,"nodeType":"1674","messageId":"1703","endLine":38,"endColumn":16},{"ruleId":"1676","severity":1,"message":"1677","line":40,"column":28,"nodeType":"1678","messageId":"1679","endLine":40,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":69,"column":35,"nodeType":"1674","messageId":"1703","endLine":69,"endColumn":37},{"ruleId":"1701","severity":1,"message":"1702","line":69,"column":65,"nodeType":"1674","messageId":"1703","endLine":69,"endColumn":67},{"ruleId":"1701","severity":1,"message":"1702","line":69,"column":102,"nodeType":"1674","messageId":"1703","endLine":69,"endColumn":104},{"ruleId":"1701","severity":1,"message":"1702","line":69,"column":135,"nodeType":"1674","messageId":"1703","endLine":69,"endColumn":137},{"ruleId":"1701","severity":1,"message":"1702","line":101,"column":30,"nodeType":"1674","messageId":"1703","endLine":101,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":114,"column":11,"nodeType":"1654","messageId":"1706","endLine":114,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1832","line":116,"column":11,"nodeType":"1654","messageId":"1706","endLine":116,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1833","line":123,"column":11,"nodeType":"1654","messageId":"1706","endLine":123,"endColumn":33},{"ruleId":"1701","severity":1,"message":"1702","line":138,"column":30,"nodeType":"1674","messageId":"1703","endLine":138,"endColumn":32},{"ruleId":"1672","severity":1,"message":"1673","line":165,"column":59,"nodeType":"1674","messageId":"1675","endLine":165,"endColumn":60},{"ruleId":"1676","severity":1,"message":"1677","line":178,"column":34,"nodeType":"1678","messageId":"1679","endLine":178,"endColumn":36},{"ruleId":"1710","severity":1,"message":"1711","line":179,"column":25,"nodeType":"1712","messageId":"1703","endLine":179,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":216,"column":28,"nodeType":"1674","messageId":"1703","endLine":216,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1664","line":6,"column":8,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1720","line":10,"column":10,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":10,"column":21,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":11,"column":10,"nodeType":"1654","messageId":"1655","endLine":11,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":11,"column":30,"nodeType":"1654","messageId":"1655","endLine":11,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1990","line":34,"column":8,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1991","line":37,"column":8,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":15},{"ruleId":"1652","severity":1,"message":"1992","line":37,"column":17,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1737","line":45,"column":10,"nodeType":"1654","messageId":"1655","endLine":45,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":45,"column":19,"nodeType":"1654","messageId":"1655","endLine":45,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":47,"column":10,"nodeType":"1654","messageId":"1655","endLine":47,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":47,"column":27,"nodeType":"1654","messageId":"1655","endLine":47,"endColumn":45},{"ruleId":"1680","severity":1,"message":"1699","line":57,"column":6,"nodeType":"1682","endLine":57,"endColumn":8,"suggestions":"2051"},{"ruleId":"1652","severity":1,"message":"1787","line":59,"column":9,"nodeType":"1654","messageId":"1655","endLine":59,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1783","line":69,"column":9,"nodeType":"1654","messageId":"1655","endLine":69,"endColumn":18},{"ruleId":"1701","severity":1,"message":"1702","line":98,"column":30,"nodeType":"1674","messageId":"1703","endLine":98,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":112,"column":11,"nodeType":"1654","messageId":"1706","endLine":112,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1832","line":114,"column":11,"nodeType":"1654","messageId":"1706","endLine":114,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1833","line":122,"column":11,"nodeType":"1654","messageId":"1706","endLine":122,"endColumn":33},{"ruleId":"1672","severity":1,"message":"1673","line":129,"column":58,"nodeType":"1674","messageId":"1675","endLine":129,"endColumn":59},{"ruleId":"1701","severity":1,"message":"1702","line":135,"column":30,"nodeType":"1674","messageId":"1703","endLine":135,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":152,"column":33,"nodeType":"1678","messageId":"1679","endLine":152,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1994","line":153,"column":13,"nodeType":"1654","messageId":"1655","endLine":153,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1673","line":170,"column":63,"nodeType":"1674","messageId":"1675","endLine":170,"endColumn":64},{"ruleId":"1701","severity":1,"message":"1702","line":174,"column":32,"nodeType":"1674","messageId":"1703","endLine":174,"endColumn":34},{"ruleId":"1701","severity":1,"message":"1702","line":188,"column":15,"nodeType":"1674","messageId":"1703","endLine":188,"endColumn":17},{"ruleId":"1701","severity":1,"message":"1702","line":191,"column":15,"nodeType":"1674","messageId":"1703","endLine":191,"endColumn":17},{"ruleId":"1676","severity":1,"message":"1677","line":213,"column":34,"nodeType":"1678","messageId":"1679","endLine":213,"endColumn":36},{"ruleId":"1704","severity":1,"message":"1705","line":228,"column":9,"nodeType":"1654","messageId":"1706","endLine":228,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1995","line":230,"column":9,"nodeType":"1654","messageId":"1706","endLine":230,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1996","line":243,"column":9,"nodeType":"1654","messageId":"1655","endLine":243,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1997","line":248,"column":9,"nodeType":"1654","messageId":"1655","endLine":248,"endColumn":26},{"ruleId":"1652","severity":1,"message":"1720","line":5,"column":10,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":5,"column":21,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":28},{"ruleId":"1652","severity":1,"message":"2012","line":20,"column":10,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1737","line":28,"column":10,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1738","line":28,"column":19,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1744","line":30,"column":10,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":25},{"ruleId":"1652","severity":1,"message":"1776","line":30,"column":27,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":45},{"ruleId":"1680","severity":1,"message":"1699","line":37,"column":6,"nodeType":"1682","endLine":37,"endColumn":8,"suggestions":"2052"},{"ruleId":"1652","severity":1,"message":"1783","line":45,"column":9,"nodeType":"1654","messageId":"1655","endLine":45,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1787","line":48,"column":9,"nodeType":"1654","messageId":"1655","endLine":48,"endColumn":28},{"ruleId":"1701","severity":1,"message":"1702","line":106,"column":30,"nodeType":"1674","messageId":"1703","endLine":106,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1705","line":118,"column":11,"nodeType":"1654","messageId":"1706","endLine":118,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1707","line":120,"column":11,"nodeType":"1654","messageId":"1706","endLine":120,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1708","line":128,"column":11,"nodeType":"1654","messageId":"1706","endLine":128,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1673","line":134,"column":62,"nodeType":"1674","messageId":"1675","endLine":134,"endColumn":63},{"ruleId":"1701","severity":1,"message":"1702","line":138,"column":30,"nodeType":"1674","messageId":"1703","endLine":138,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":176,"column":36,"nodeType":"1678","messageId":"1679","endLine":176,"endColumn":38},{"ruleId":"1710","severity":1,"message":"1711","line":177,"column":35,"nodeType":"1712","messageId":"1703","endLine":177,"endColumn":39},{"ruleId":"1672","severity":1,"message":"1673","line":215,"column":56,"nodeType":"1674","messageId":"1675","endLine":215,"endColumn":57},{"ruleId":"1701","severity":1,"message":"1702","line":223,"column":28,"nodeType":"1674","messageId":"1703","endLine":223,"endColumn":30},{"ruleId":"1652","severity":1,"message":"2053","line":2,"column":8,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1723","line":3,"column":8,"nodeType":"1654","messageId":"1655","endLine":3,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1940","line":14,"column":12,"nodeType":"1654","messageId":"1655","endLine":14,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1774","line":21,"column":9,"nodeType":"1654","messageId":"1655","endLine":21,"endColumn":13},{"ruleId":"1652","severity":1,"message":"2054","line":22,"column":12,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":22},{"ruleId":"1652","severity":1,"message":"2055","line":22,"column":24,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":37},{"ruleId":"1652","severity":1,"message":"2056","line":23,"column":12,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1886","line":23,"column":23,"nodeType":"1654","messageId":"1655","endLine":23,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1745","line":26,"column":12,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1746","line":26,"column":20,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1855","line":27,"column":19,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":27},{"ruleId":"1652","severity":1,"message":"2057","line":28,"column":10,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":19},{"ruleId":"1652","severity":1,"message":"2058","line":28,"column":21,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":33},{"ruleId":"1680","severity":1,"message":"2059","line":36,"column":8,"nodeType":"1682","endLine":36,"endColumn":10,"suggestions":"2060"},{"ruleId":"1701","severity":1,"message":"1702","line":51,"column":36,"nodeType":"1674","messageId":"1703","endLine":51,"endColumn":38},{"ruleId":"1676","severity":1,"message":"1677","line":67,"column":42,"nodeType":"1678","messageId":"1679","endLine":67,"endColumn":44},{"ruleId":"1710","severity":1,"message":"1711","line":69,"column":35,"nodeType":"1712","messageId":"1703","endLine":69,"endColumn":39},{"ruleId":"1710","severity":1,"message":"1711","line":70,"column":36,"nodeType":"1712","messageId":"1703","endLine":70,"endColumn":40},{"ruleId":"1701","severity":1,"message":"1702","line":120,"column":36,"nodeType":"1674","messageId":"1703","endLine":120,"endColumn":38},{"ruleId":"1704","severity":1,"message":"1707","line":136,"column":13,"nodeType":"1654","messageId":"1706","endLine":136,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1708","line":139,"column":13,"nodeType":"1654","messageId":"1706","endLine":139,"endColumn":27},{"ruleId":"1672","severity":1,"message":"1673","line":146,"column":61,"nodeType":"1674","messageId":"1675","endLine":146,"endColumn":62},{"ruleId":"1701","severity":1,"message":"1702","line":154,"column":36,"nodeType":"1674","messageId":"1703","endLine":154,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1893","line":192,"column":30,"nodeType":"1654","messageId":"1655","endLine":192,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2061","line":207,"column":11,"nodeType":"1654","messageId":"1655","endLine":207,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1996","line":230,"column":11,"nodeType":"1654","messageId":"1655","endLine":230,"endColumn":28},{"ruleId":"1652","severity":1,"message":"2062","line":236,"column":11,"nodeType":"1654","messageId":"1655","endLine":236,"endColumn":25},{"ruleId":"1701","severity":1,"message":"1702","line":264,"column":42,"nodeType":"1674","messageId":"1703","endLine":264,"endColumn":44},{"ruleId":"1676","severity":1,"message":"1677","line":273,"column":35,"nodeType":"1678","messageId":"1679","endLine":273,"endColumn":37},{"ruleId":"1676","severity":1,"message":"1677","line":277,"column":38,"nodeType":"1678","messageId":"1679","endLine":277,"endColumn":40},{"ruleId":"1704","severity":1,"message":"1895","line":280,"column":26,"nodeType":"1654","messageId":"1706","endLine":280,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":317,"column":40,"nodeType":"1674","messageId":"1703","endLine":317,"endColumn":42},{"ruleId":"1704","severity":1,"message":"1705","line":334,"column":17,"nodeType":"1654","messageId":"1706","endLine":334,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1707","line":336,"column":17,"nodeType":"1654","messageId":"1706","endLine":336,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1708","line":341,"column":17,"nodeType":"1654","messageId":"1706","endLine":341,"endColumn":31},{"ruleId":"1701","severity":1,"message":"1702","line":354,"column":40,"nodeType":"1674","messageId":"1703","endLine":354,"endColumn":42},{"ruleId":"1652","severity":1,"message":"2063","line":387,"column":43,"nodeType":"1654","messageId":"1655","endLine":387,"endColumn":52},{"ruleId":"1652","severity":1,"message":"2064","line":388,"column":43,"nodeType":"1654","messageId":"1655","endLine":388,"endColumn":52},{"ruleId":"1652","severity":1,"message":"2065","line":1,"column":27,"nodeType":"1654","messageId":"1655","endLine":1,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2066","line":9,"column":8,"nodeType":"1654","messageId":"1655","endLine":9,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1692","line":14,"column":21,"nodeType":"1654","messageId":"1655","endLine":14,"endColumn":28},{"ruleId":"1652","severity":1,"message":"2067","line":15,"column":13,"nodeType":"1654","messageId":"1655","endLine":15,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1989","line":64,"column":7,"nodeType":"1654","messageId":"1706","endLine":64,"endColumn":11},{"ruleId":"1652","severity":1,"message":"2068","line":68,"column":10,"nodeType":"1654","messageId":"1655","endLine":68,"endColumn":17},{"ruleId":"1652","severity":1,"message":"2069","line":70,"column":30,"nodeType":"1654","messageId":"1655","endLine":70,"endColumn":51},{"ruleId":"1652","severity":1,"message":"2056","line":71,"column":10,"nodeType":"1654","messageId":"1655","endLine":71,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1886","line":71,"column":21,"nodeType":"1654","messageId":"1655","endLine":71,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2055","line":72,"column":22,"nodeType":"1654","messageId":"1655","endLine":72,"endColumn":35},{"ruleId":"1652","severity":1,"message":"2070","line":75,"column":9,"nodeType":"1654","messageId":"1655","endLine":75,"endColumn":14},{"ruleId":"1652","severity":1,"message":"2071","line":76,"column":9,"nodeType":"1654","messageId":"1655","endLine":76,"endColumn":25},{"ruleId":"1680","severity":1,"message":"1699","line":91,"column":6,"nodeType":"1682","endLine":91,"endColumn":8,"suggestions":"2072"},{"ruleId":"1652","severity":1,"message":"2073","line":163,"column":9,"nodeType":"1654","messageId":"1655","endLine":163,"endColumn":27},{"ruleId":"1768","severity":1,"message":"1769","line":309,"column":65,"nodeType":"1770","messageId":"1771","endLine":309,"endColumn":87},{"ruleId":"1768","severity":1,"message":"1769","line":332,"column":65,"nodeType":"1770","messageId":"1771","endLine":332,"endColumn":87},{"ruleId":"1652","severity":1,"message":"2053","line":2,"column":8,"nodeType":"1654","messageId":"1655","endLine":2,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1940","line":15,"column":12,"nodeType":"1654","messageId":"1655","endLine":15,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1774","line":25,"column":9,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":13},{"ruleId":"1652","severity":1,"message":"2054","line":26,"column":12,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":22},{"ruleId":"1652","severity":1,"message":"2055","line":26,"column":24,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":37},{"ruleId":"1652","severity":1,"message":"2056","line":27,"column":12,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1886","line":27,"column":23,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1745","line":30,"column":12,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1746","line":30,"column":20,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":29},{"ruleId":"1652","severity":1,"message":"1855","line":31,"column":19,"nodeType":"1654","messageId":"1655","endLine":31,"endColumn":27},{"ruleId":"1652","severity":1,"message":"2057","line":32,"column":10,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":19},{"ruleId":"1652","severity":1,"message":"2058","line":32,"column":21,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":33},{"ruleId":"1680","severity":1,"message":"2059","line":40,"column":8,"nodeType":"1682","endLine":40,"endColumn":10,"suggestions":"2074"},{"ruleId":"1701","severity":1,"message":"1702","line":55,"column":36,"nodeType":"1674","messageId":"1703","endLine":55,"endColumn":38},{"ruleId":"1676","severity":1,"message":"1677","line":74,"column":42,"nodeType":"1678","messageId":"1679","endLine":74,"endColumn":44},{"ruleId":"1710","severity":1,"message":"1711","line":76,"column":35,"nodeType":"1712","messageId":"1703","endLine":76,"endColumn":39},{"ruleId":"1710","severity":1,"message":"1711","line":77,"column":36,"nodeType":"1712","messageId":"1703","endLine":77,"endColumn":40},{"ruleId":"1701","severity":1,"message":"1702","line":122,"column":36,"nodeType":"1674","messageId":"1703","endLine":122,"endColumn":38},{"ruleId":"1652","severity":1,"message":"1893","line":157,"column":30,"nodeType":"1654","messageId":"1655","endLine":157,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2061","line":172,"column":11,"nodeType":"1654","messageId":"1655","endLine":172,"endColumn":19},{"ruleId":"1701","severity":1,"message":"1702","line":230,"column":42,"nodeType":"1674","messageId":"1703","endLine":230,"endColumn":44},{"ruleId":"1676","severity":1,"message":"1677","line":239,"column":35,"nodeType":"1678","messageId":"1679","endLine":239,"endColumn":37},{"ruleId":"1676","severity":1,"message":"1677","line":243,"column":38,"nodeType":"1678","messageId":"1679","endLine":243,"endColumn":40},{"ruleId":"1704","severity":1,"message":"1895","line":246,"column":26,"nodeType":"1654","messageId":"1706","endLine":246,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":281,"column":40,"nodeType":"1674","messageId":"1703","endLine":281,"endColumn":42},{"ruleId":"1704","severity":1,"message":"1705","line":297,"column":17,"nodeType":"1654","messageId":"1706","endLine":297,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1707","line":299,"column":17,"nodeType":"1654","messageId":"1706","endLine":299,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1708","line":304,"column":17,"nodeType":"1654","messageId":"1706","endLine":304,"endColumn":31},{"ruleId":"1701","severity":1,"message":"1702","line":317,"column":40,"nodeType":"1674","messageId":"1703","endLine":317,"endColumn":42},{"ruleId":"1652","severity":1,"message":"1692","line":18,"column":21,"nodeType":"1654","messageId":"1655","endLine":18,"endColumn":28},{"ruleId":"1652","severity":1,"message":"2075","line":22,"column":8,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":13},{"ruleId":"1652","severity":1,"message":"1828","line":28,"column":11,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":20},{"ruleId":"1652","severity":1,"message":"1829","line":29,"column":11,"nodeType":"1654","messageId":"1655","endLine":29,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1830","line":30,"column":11,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":22},{"ruleId":"1652","severity":1,"message":"1741","line":32,"column":12,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":20},{"ruleId":"1652","severity":1,"message":"2076","line":34,"column":10,"nodeType":"1654","messageId":"1655","endLine":34,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1716","line":35,"column":10,"nodeType":"1654","messageId":"1655","endLine":35,"endColumn":24},{"ruleId":"1652","severity":1,"message":"2077","line":36,"column":10,"nodeType":"1654","messageId":"1655","endLine":36,"endColumn":23},{"ruleId":"1652","severity":1,"message":"2078","line":37,"column":10,"nodeType":"1654","messageId":"1655","endLine":37,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1737","line":49,"column":10,"nodeType":"1654","messageId":"1655","endLine":49,"endColumn":17},{"ruleId":"1652","severity":1,"message":"1697","line":80,"column":12,"nodeType":"1654","messageId":"1655","endLine":80,"endColumn":18},{"ruleId":"1652","severity":1,"message":"1698","line":80,"column":20,"nodeType":"1654","messageId":"1655","endLine":80,"endColumn":29},{"ruleId":"1680","severity":1,"message":"1699","line":100,"column":8,"nodeType":"1682","endLine":100,"endColumn":10,"suggestions":"2079"},{"ruleId":"1652","severity":1,"message":"2080","line":104,"column":11,"nodeType":"1654","messageId":"1655","endLine":104,"endColumn":23},{"ruleId":"1676","severity":1,"message":"1677","line":162,"column":46,"nodeType":"1678","messageId":"1679","endLine":162,"endColumn":48},{"ruleId":"1701","severity":1,"message":"1702","line":179,"column":40,"nodeType":"1674","messageId":"1703","endLine":179,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":180,"column":40,"nodeType":"1674","messageId":"1703","endLine":180,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":181,"column":40,"nodeType":"1674","messageId":"1703","endLine":181,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":182,"column":40,"nodeType":"1674","messageId":"1703","endLine":182,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":183,"column":40,"nodeType":"1674","messageId":"1703","endLine":183,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":184,"column":40,"nodeType":"1674","messageId":"1703","endLine":184,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":185,"column":40,"nodeType":"1674","messageId":"1703","endLine":185,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":186,"column":40,"nodeType":"1674","messageId":"1703","endLine":186,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":187,"column":40,"nodeType":"1674","messageId":"1703","endLine":187,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":188,"column":41,"nodeType":"1674","messageId":"1703","endLine":188,"endColumn":43},{"ruleId":"1701","severity":1,"message":"1702","line":189,"column":41,"nodeType":"1674","messageId":"1703","endLine":189,"endColumn":43},{"ruleId":"1701","severity":1,"message":"1702","line":190,"column":41,"nodeType":"1674","messageId":"1703","endLine":190,"endColumn":43},{"ruleId":"1701","severity":1,"message":"1702","line":191,"column":41,"nodeType":"1674","messageId":"1703","endLine":191,"endColumn":43},{"ruleId":"1701","severity":1,"message":"1702","line":192,"column":41,"nodeType":"1674","messageId":"1703","endLine":192,"endColumn":43},{"ruleId":"1701","severity":1,"message":"1702","line":193,"column":41,"nodeType":"1674","messageId":"1703","endLine":193,"endColumn":43},{"ruleId":"1676","severity":1,"message":"1677","line":215,"column":30,"nodeType":"1678","messageId":"1679","endLine":215,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":231,"column":31,"nodeType":"1678","messageId":"1679","endLine":231,"endColumn":33},{"ruleId":"1676","severity":1,"message":"1677","line":250,"column":31,"nodeType":"1678","messageId":"1679","endLine":250,"endColumn":33},{"ruleId":"1710","severity":1,"message":"1711","line":258,"column":26,"nodeType":"1712","messageId":"1703","endLine":258,"endColumn":30},{"ruleId":"1701","severity":1,"message":"1702","line":330,"column":24,"nodeType":"1674","messageId":"1703","endLine":330,"endColumn":26},{"ruleId":"1701","severity":1,"message":"1702","line":348,"column":40,"nodeType":"1674","messageId":"1703","endLine":348,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1713","line":360,"column":31,"nodeType":"1674","messageId":"1703","endLine":360,"endColumn":33},{"ruleId":"1701","severity":1,"message":"1702","line":387,"column":27,"nodeType":"1674","messageId":"1703","endLine":387,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":457,"column":40,"nodeType":"1674","messageId":"1703","endLine":457,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":468,"column":27,"nodeType":"1674","messageId":"1703","endLine":468,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":537,"column":40,"nodeType":"1674","messageId":"1703","endLine":537,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":592,"column":40,"nodeType":"1674","messageId":"1703","endLine":592,"endColumn":42},{"ruleId":"1704","severity":1,"message":"1705","line":602,"column":17,"nodeType":"1654","messageId":"1706","endLine":602,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1832","line":604,"column":17,"nodeType":"1654","messageId":"1706","endLine":604,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1833","line":625,"column":17,"nodeType":"1654","messageId":"1706","endLine":625,"endColumn":39},{"ruleId":"1701","severity":1,"message":"1702","line":635,"column":40,"nodeType":"1674","messageId":"1703","endLine":635,"endColumn":42},{"ruleId":"1701","severity":1,"message":"1702","line":673,"column":54,"nodeType":"1674","messageId":"1703","endLine":673,"endColumn":56},{"ruleId":"1701","severity":1,"message":"1702","line":716,"column":62,"nodeType":"1674","messageId":"1703","endLine":716,"endColumn":64},{"ruleId":"1701","severity":1,"message":"1702","line":796,"column":44,"nodeType":"1674","messageId":"1703","endLine":796,"endColumn":46},{"ruleId":"1701","severity":1,"message":"1702","line":827,"column":72,"nodeType":"1674","messageId":"1703","endLine":827,"endColumn":74},{"ruleId":"1701","severity":1,"message":"1702","line":856,"column":106,"nodeType":"1674","messageId":"1703","endLine":856,"endColumn":108},{"ruleId":"1701","severity":1,"message":"1702","line":885,"column":106,"nodeType":"1674","messageId":"1703","endLine":885,"endColumn":108},{"ruleId":"1701","severity":1,"message":"1702","line":914,"column":106,"nodeType":"1674","messageId":"1703","endLine":914,"endColumn":108},{"ruleId":"1701","severity":1,"message":"1702","line":943,"column":106,"nodeType":"1674","messageId":"1703","endLine":943,"endColumn":108},{"ruleId":"1701","severity":1,"message":"1702","line":972,"column":106,"nodeType":"1674","messageId":"1703","endLine":972,"endColumn":108},{"ruleId":"1701","severity":1,"message":"1702","line":1001,"column":106,"nodeType":"1674","messageId":"1703","endLine":1001,"endColumn":108},{"ruleId":"1701","severity":1,"message":"1702","line":1030,"column":106,"nodeType":"1674","messageId":"1703","endLine":1030,"endColumn":108},{"ruleId":"1701","severity":1,"message":"1702","line":1059,"column":106,"nodeType":"1674","messageId":"1703","endLine":1059,"endColumn":108},{"ruleId":"1701","severity":1,"message":"1702","line":1088,"column":107,"nodeType":"1674","messageId":"1703","endLine":1088,"endColumn":109},{"ruleId":"1701","severity":1,"message":"1702","line":1117,"column":107,"nodeType":"1674","messageId":"1703","endLine":1117,"endColumn":109},{"ruleId":"1701","severity":1,"message":"1702","line":1146,"column":107,"nodeType":"1674","messageId":"1703","endLine":1146,"endColumn":109},{"ruleId":"1701","severity":1,"message":"1702","line":1175,"column":107,"nodeType":"1674","messageId":"1703","endLine":1175,"endColumn":109},{"ruleId":"1701","severity":1,"message":"1702","line":1204,"column":107,"nodeType":"1674","messageId":"1703","endLine":1204,"endColumn":109},{"ruleId":"1701","severity":1,"message":"1702","line":1233,"column":107,"nodeType":"1674","messageId":"1703","endLine":1233,"endColumn":109},{"ruleId":"1768","severity":1,"message":"1769","line":1475,"column":59,"nodeType":"1770","messageId":"1771","endLine":1475,"endColumn":81},{"ruleId":"1768","severity":1,"message":"1769","line":1509,"column":59,"nodeType":"1770","messageId":"1771","endLine":1509,"endColumn":81},{"ruleId":"1768","severity":1,"message":"1769","line":1546,"column":59,"nodeType":"1770","messageId":"1771","endLine":1546,"endColumn":81},{"ruleId":"1768","severity":1,"message":"1769","line":1637,"column":63,"nodeType":"1770","messageId":"1771","endLine":1637,"endColumn":85},{"ruleId":"1768","severity":1,"message":"1769","line":1671,"column":63,"nodeType":"1770","messageId":"1771","endLine":1671,"endColumn":85},{"ruleId":"1768","severity":1,"message":"1769","line":1708,"column":63,"nodeType":"1770","messageId":"1771","endLine":1708,"endColumn":85},{"ruleId":"1652","severity":1,"message":"1720","line":4,"column":10,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":4,"column":21,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1737","line":20,"column":12,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1738","line":20,"column":21,"nodeType":"1654","messageId":"1655","endLine":20,"endColumn":31},{"ruleId":"1652","severity":1,"message":"1744","line":22,"column":12,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1776","line":22,"column":29,"nodeType":"1654","messageId":"1655","endLine":22,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1834","line":27,"column":13,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":17},{"ruleId":"1680","severity":1,"message":"2081","line":33,"column":8,"nodeType":"1682","endLine":33,"endColumn":10,"suggestions":"2082"},{"ruleId":"1652","severity":1,"message":"1787","line":35,"column":11,"nodeType":"1654","messageId":"1655","endLine":35,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1783","line":45,"column":11,"nodeType":"1654","messageId":"1655","endLine":45,"endColumn":20},{"ruleId":"1701","severity":1,"message":"1702","line":95,"column":40,"nodeType":"1674","messageId":"1703","endLine":95,"endColumn":42},{"ruleId":"1704","severity":1,"message":"1705","line":105,"column":17,"nodeType":"1654","messageId":"1706","endLine":105,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1707","line":107,"column":17,"nodeType":"1654","messageId":"1706","endLine":107,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1708","line":115,"column":17,"nodeType":"1654","messageId":"1706","endLine":115,"endColumn":31},{"ruleId":"1701","severity":1,"message":"1702","line":125,"column":40,"nodeType":"1674","messageId":"1703","endLine":125,"endColumn":42},{"ruleId":"1676","severity":1,"message":"1677","line":152,"column":46,"nodeType":"1678","messageId":"1679","endLine":152,"endColumn":48},{"ruleId":"1652","severity":1,"message":"2065","line":1,"column":38,"nodeType":"1654","messageId":"1655","endLine":1,"endColumn":44},{"ruleId":"1652","severity":1,"message":"1720","line":5,"column":10,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1692","line":5,"column":21,"nodeType":"1654","messageId":"1655","endLine":5,"endColumn":28},{"ruleId":"1652","severity":1,"message":"1721","line":6,"column":10,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1722","line":6,"column":30,"nodeType":"1654","messageId":"1655","endLine":6,"endColumn":36},{"ruleId":"1652","severity":1,"message":"1664","line":7,"column":8,"nodeType":"1654","messageId":"1655","endLine":7,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1663","line":9,"column":8,"nodeType":"1654","messageId":"1655","endLine":9,"endColumn":20},{"ruleId":"1652","severity":1,"message":"2083","line":10,"column":8,"nodeType":"1654","messageId":"1655","endLine":10,"endColumn":18},{"ruleId":"1652","severity":1,"message":"2084","line":16,"column":12,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":25},{"ruleId":"1652","severity":1,"message":"2085","line":16,"column":27,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":43},{"ruleId":"1652","severity":1,"message":"1731","line":25,"column":12,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":21},{"ruleId":"1652","severity":1,"message":"1732","line":25,"column":23,"nodeType":"1654","messageId":"1655","endLine":25,"endColumn":35},{"ruleId":"1652","severity":1,"message":"1733","line":26,"column":12,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1734","line":26,"column":29,"nodeType":"1654","messageId":"1655","endLine":26,"endColumn":47},{"ruleId":"1652","severity":1,"message":"1735","line":27,"column":12,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1736","line":27,"column":25,"nodeType":"1654","messageId":"1655","endLine":27,"endColumn":39},{"ruleId":"1652","severity":1,"message":"1737","line":28,"column":12,"nodeType":"1654","messageId":"1655","endLine":28,"endColumn":19},{"ruleId":"1652","severity":1,"message":"1696","line":30,"column":12,"nodeType":"1654","messageId":"1655","endLine":30,"endColumn":16},{"ruleId":"1652","severity":1,"message":"1744","line":32,"column":12,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":27},{"ruleId":"1652","severity":1,"message":"1776","line":32,"column":29,"nodeType":"1654","messageId":"1655","endLine":32,"endColumn":47},{"ruleId":"1652","severity":1,"message":"2086","line":35,"column":9,"nodeType":"1654","messageId":"1655","endLine":35,"endColumn":17},{"ruleId":"1680","severity":1,"message":"1699","line":42,"column":8,"nodeType":"1682","endLine":42,"endColumn":10,"suggestions":"2087"},{"ruleId":"1652","severity":1,"message":"1787","line":44,"column":11,"nodeType":"1654","messageId":"1655","endLine":44,"endColumn":30},{"ruleId":"1652","severity":1,"message":"1783","line":50,"column":11,"nodeType":"1654","messageId":"1655","endLine":50,"endColumn":20},{"ruleId":"1652","severity":1,"message":"2088","line":61,"column":13,"nodeType":"1654","messageId":"1655","endLine":61,"endColumn":22},{"ruleId":"1676","severity":1,"message":"1677","line":95,"column":46,"nodeType":"1678","messageId":"1679","endLine":95,"endColumn":48},{"ruleId":"1701","severity":1,"message":"1702","line":132,"column":40,"nodeType":"1674","messageId":"1703","endLine":132,"endColumn":42},{"ruleId":"1704","severity":1,"message":"1705","line":143,"column":17,"nodeType":"1654","messageId":"1706","endLine":143,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1707","line":145,"column":17,"nodeType":"1654","messageId":"1706","endLine":145,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1708","line":152,"column":17,"nodeType":"1654","messageId":"1706","endLine":152,"endColumn":31},{"ruleId":"1701","severity":1,"message":"1702","line":162,"column":40,"nodeType":"1674","messageId":"1703","endLine":162,"endColumn":42},{"ruleId":"1652","severity":1,"message":"2089","line":16,"column":7,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":17},{"ruleId":"1652","severity":1,"message":"2090","line":24,"column":8,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":20},{"ruleId":"1652","severity":1,"message":"2091","line":24,"column":22,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":37},{"ruleId":"1672","severity":1,"message":"1673","line":97,"column":50,"nodeType":"1674","messageId":"1675","endLine":97,"endColumn":51},{"ruleId":"1676","severity":1,"message":"1677","line":105,"column":31,"nodeType":"1678","messageId":"1679","endLine":105,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2092","line":118,"column":17,"nodeType":"1654","messageId":"1655","endLine":118,"endColumn":27},{"ruleId":"1701","severity":1,"message":"1702","line":176,"column":30,"nodeType":"1674","messageId":"1703","endLine":176,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1995","line":186,"column":11,"nodeType":"1654","messageId":"1706","endLine":186,"endColumn":28},{"ruleId":"1672","severity":1,"message":"1673","line":192,"column":52,"nodeType":"1674","messageId":"1675","endLine":192,"endColumn":53},{"ruleId":"1701","severity":1,"message":"1702","line":196,"column":30,"nodeType":"1674","messageId":"1703","endLine":196,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":208,"column":30,"nodeType":"1678","messageId":"1679","endLine":208,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":209,"column":21,"nodeType":"1674","messageId":"1703","endLine":209,"endColumn":23},{"ruleId":"1652","severity":1,"message":"2089","line":16,"column":7,"nodeType":"1654","messageId":"1655","endLine":16,"endColumn":17},{"ruleId":"1652","severity":1,"message":"2090","line":24,"column":8,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":20},{"ruleId":"1652","severity":1,"message":"2091","line":24,"column":22,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":37},{"ruleId":"1672","severity":1,"message":"1673","line":93,"column":50,"nodeType":"1674","messageId":"1675","endLine":93,"endColumn":51},{"ruleId":"1676","severity":1,"message":"1677","line":101,"column":31,"nodeType":"1678","messageId":"1679","endLine":101,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2092","line":112,"column":17,"nodeType":"1654","messageId":"1655","endLine":112,"endColumn":27},{"ruleId":"1701","severity":1,"message":"1702","line":169,"column":30,"nodeType":"1674","messageId":"1703","endLine":169,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1995","line":179,"column":11,"nodeType":"1654","messageId":"1706","endLine":179,"endColumn":28},{"ruleId":"1672","severity":1,"message":"1673","line":185,"column":52,"nodeType":"1674","messageId":"1675","endLine":185,"endColumn":53},{"ruleId":"1701","severity":1,"message":"1702","line":189,"column":30,"nodeType":"1674","messageId":"1703","endLine":189,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":201,"column":30,"nodeType":"1678","messageId":"1679","endLine":201,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":202,"column":21,"nodeType":"1674","messageId":"1703","endLine":202,"endColumn":23},{"ruleId":"1652","severity":1,"message":"1657","line":1,"column":17,"nodeType":"1654","messageId":"1655","endLine":1,"endColumn":25},{"ruleId":"1652","severity":1,"message":"2053","line":4,"column":8,"nodeType":"1654","messageId":"1655","endLine":4,"endColumn":17},{"ruleId":"2093","severity":1,"message":"2094","line":6,"column":1,"nodeType":"2095","endLine":34,"endColumn":2},{"ruleId":"1652","severity":1,"message":"2096","line":12,"column":9,"nodeType":"1654","messageId":"1655","endLine":12,"endColumn":24},{"ruleId":"1676","severity":1,"message":"2097","line":13,"column":37,"nodeType":"1678","messageId":"2036","endLine":13,"endColumn":39},{"ruleId":"1701","severity":1,"message":"1702","line":14,"column":21,"nodeType":"1674","messageId":"1703","endLine":14,"endColumn":23},{"ruleId":"1652","severity":1,"message":"2090","line":24,"column":8,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":20},{"ruleId":"1652","severity":1,"message":"2091","line":24,"column":22,"nodeType":"1654","messageId":"1655","endLine":24,"endColumn":37},{"ruleId":"1652","severity":1,"message":"2071","line":71,"column":9,"nodeType":"1654","messageId":"1655","endLine":71,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1673","line":93,"column":50,"nodeType":"1674","messageId":"1675","endLine":93,"endColumn":51},{"ruleId":"1676","severity":1,"message":"1677","line":101,"column":31,"nodeType":"1678","messageId":"1679","endLine":101,"endColumn":33},{"ruleId":"1652","severity":1,"message":"2098","line":108,"column":17,"nodeType":"1654","messageId":"1655","endLine":108,"endColumn":24},{"ruleId":"1652","severity":1,"message":"2099","line":110,"column":17,"nodeType":"1654","messageId":"1655","endLine":110,"endColumn":29},{"ruleId":"1701","severity":1,"message":"1702","line":169,"column":30,"nodeType":"1674","messageId":"1703","endLine":169,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1995","line":179,"column":11,"nodeType":"1654","messageId":"1706","endLine":179,"endColumn":28},{"ruleId":"1672","severity":1,"message":"1673","line":185,"column":52,"nodeType":"1674","messageId":"1675","endLine":185,"endColumn":53},{"ruleId":"1701","severity":1,"message":"1702","line":189,"column":30,"nodeType":"1674","messageId":"1703","endLine":189,"endColumn":32},{"ruleId":"1676","severity":1,"message":"1677","line":201,"column":30,"nodeType":"1678","messageId":"1679","endLine":201,"endColumn":32},{"ruleId":"1701","severity":1,"message":"1702","line":202,"column":21,"nodeType":"1674","messageId":"1703","endLine":202,"endColumn":23},"no-native-reassign",["2100"],"no-negated-in-lhs",["2101"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used.","'ProtectedRoute' is defined but never used.","'useLocation' is defined but never used.","'Protected_Ui' is defined but never used.","'RightSidebar' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","'Component' is defined but never used.","'Modules' is assigned a value but never used.","'classState' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 's_id'. Either include them or remove the dependency array.","ArrayExpression",["2102"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["2103"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'savePDF' is defined but never used.","'allFaceList' is assigned a value but never used.","'setallFaceList' is assigned a value but never used.","'CustomerBeliver' is assigned a value but never used.","'show' is assigned a value but never used.","'varval' is assigned a value but never used.","'setvarval' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetallRecords', 'history', and 's_id'. Either include them or remove the dependency array.",["2104"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-redeclare","'myHeaders' is already defined.","redeclared","'raw' is already defined.","'requestOptions' is already defined.","'localUid' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["2105"],"'reflectiondata' is assigned a value but never used.","'data' is assigned a value but never used.","'CountdownCircleTimer' is defined but never used.","'Editor' is defined but never used.","'PDFExport' is defined but never used.","'Grid' is defined but never used.","'Column' is defined but never used.","'Modal' is defined but never used.","'axios' is defined but never used.","'ModalSubmit' is defined but never used.","'inputList' is assigned a value but never used.","'setInputList' is assigned a value but never used.","'inputList2' is assigned a value but never used.","'setinputList2' is assigned a value but never used.","'setCustomerBeliver' is assigned a value but never used.","'YourTribe' is assigned a value but never used.","'setYourTribe' is assigned a value but never used.","'PrimaryCustomer' is assigned a value but never used.","'setPrimaryCustomer' is assigned a value but never used.","'FaceBeliver' is assigned a value but never used.","'setFaceBeliver' is assigned a value but never used.","'ShowPdf' is assigned a value but never used.","'setShowPdf' is assigned a value but never used.","'pdfExportComponent' is assigned a value but never used.","'setShow' is assigned a value but never used.","'showData' is assigned a value but never used.","'viewModal' is assigned a value but never used.","'setviewModal' is assigned a value but never used.","'belConceptDataa' is assigned a value but never used.","'smShow' is assigned a value but never used.","'setSmShow' is assigned a value but never used.","'BeliverOTP' is assigned a value but never used.","'setBeliverOTP' is assigned a value but never used.","'transOTP' is assigned a value but never used.","'setTransOTP' is assigned a value but never used.","'seconds' is assigned a value but never used.","'setSeconds' is assigned a value but never used.","'secondsfortrans' is assigned a value but never used.","'setsecondsfortrans' is assigned a value but never used.","'ShowResetOTP' is assigned a value but never used.","'setShowResetOTP' is assigned a value but never used.","'ShowResetOTPTrans' is assigned a value but never used.","'setShowResetOTPTrans' is assigned a value but never used.","'showConfirmBox' is assigned a value but never used.","'setshowConfirmBox' is assigned a value but never used.","'showHide' is assigned a value but never used.","'setshowHide' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'urlCheck'. Either include it or remove the dependency array.",["2106"],"'Switch' is defined but never used.","'Route' is defined but never used.","'validateForm' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Formik' is defined but never used.","'Form' is defined but never used.","'rows' is assigned a value but never used.","'Mupdate' is assigned a value but never used.","'setbelConceptDataa' is assigned a value but never used.","'checksVal' is assigned a value but never used.","'setchecksVal' is assigned a value but never used.","'chks' is assigned a value but never used.","'setchks' is assigned a value but never used.","'chks2' is assigned a value but never used.","'setchks2' is assigned a value but never used.","'ViewModel' is assigned a value but never used.","'yesFn' is assigned a value but never used.","'checkVal' is already defined.","'noFn' is assigned a value but never used.","'exportPDFWithMethod' is assigned a value but never used.","'initialValues' is assigned a value but never used.","'validate' is assigned a value but never used.","'OnSubmitForm' is assigned a value but never used.","'OnVerifyHandle' is assigned a value but never used.","'ResendBeliverDataTrans' is assigned a value but never used.","'HandleInputChange' is assigned a value but never used.","'enterinput' is assigned a value but never used.","'HandleSubmit' is assigned a value but never used.","'ResendBeliverData' is assigned a value but never used.","'OnVerifyHandleConfirm' is assigned a value but never used.","'HandleConfirmation' is assigned a value but never used.",["2107"],"'editfn' is assigned a value but never used.","'deletefn' is assigned a value but never used.","'AppBar' is defined but never used.","'TabList' is defined but never used.","'TabContext' is defined but never used.","'OnValidate' is assigned a value but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Dashboard' is defined but never used.","'a11yProps' is defined but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Autocomplete' is defined but never used.","'TextField' is defined but never used.",["2108"],"'Mdelete' is assigned a value but never used.","'TbUnderData' is assigned a value but never used.","'setTbUnderData' is assigned a value but never used.","'DataA' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getvilakshanMapData', 'history', and 's_id'. Either include them or remove the dependency array.",["2109"],"'renderTable' is assigned a value but never used.","'completeData' is assigned a value but never used.","'Madd' is assigned a value but never used.","'setMadd' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getDataOff', 'history', and 's_id'. Either include them or remove the dependency array.",["2110"],"'ExcelFile' is assigned a value but never used.","'ExcelSheet' is assigned a value but never used.","'ExcelColumn' is assigned a value but never used.",["2111"],"'rawrich' is already defined.","'requestOptionsrichtext' is already defined.","'s_id' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Goal_drillPage must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'Table' is defined but never used.","'loading' is assigned a value but never used.","'setloading' is assigned a value but never used.","'setcompleteData' is assigned a value but never used.","'vilakshanData' is assigned a value but never used.","'setVilakshanData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetallRecords' and 'history'. Either include them or remove the dependency array.",["2112"],"'date' is assigned a value but never used.","'setdate' is assigned a value but never used.","'Fdate' is assigned a value but never used.","'setFdate' is assigned a value but never used.","'formData' is assigned a value but never used.","'setformData' is assigned a value but never used.","'formValid' is assigned a value but never used.","'setformValid' is assigned a value but never used.","'total' is assigned a value but never used.","'settotal' is assigned a value but never used.","'dataSet1' is assigned a value but never used.","'dataSet2' is assigned a value but never used.","'value2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetallRecords'. Either include it or remove the dependency array.",["2113"],"'verticleclasses' is assigned a value but never used.","'setValue' is assigned a value but never used.",["2114"],"'image' is defined but never used.","'link' is defined but never used.","React Hook useMemo has missing dependencies: 'config', 'contents', and 'getValue'. Either include them or remove the dependency array.",["2115"],"'makeStyles' is defined but never used.","'PropTypes' is defined but never used.","'TabPanel' is defined but never used.","React Hook useEffect has missing dependencies: 'GetallRecored', 'history', and 's_id'. Either include them or remove the dependency array.",["2116"],["2117"],["2118"],"'StickyTable' is defined but never used.","'Row' is defined but never used.","'Cell' is defined but never used.","'list' is assigned a value but never used.","'inputListFeature2' is assigned a value but never used.","'allList' is assigned a value but never used.","'setallList' is assigned a value but never used.","'EditList' is assigned a value but never used.","'setEditList' is assigned a value but never used.","'edituser' is assigned a value but never used.","'PossibleCombination' is assigned a value but never used.","'setholdValue' is assigned a value but never used.","'org_name' is assigned a value but never used.","'ShowHideErr' is assigned a value but never used.","'no' is assigned a value but never used.","'inputs' is assigned a value but never used.",["2119"],"'data' is defined but never used.","'ips' is assigned a value but never used.","'handleInputChange2' is assigned a value but never used.","'key' is already defined.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","'vilakshan_journey' is assigned a value but never used.","'setvilakshan_journey' is assigned a value but never used.","'vilakshan_form' is assigned a value but never used.","'setvilakshan_form' is assigned a value but never used.","'parent_process_name' is assigned a value but never used.","'setparent_process_name' is assigned a value but never used.","'parent_process_input' is assigned a value but never used.","'setparent_process_input' is assigned a value but never used.","'parent_process_output' is assigned a value but never used.","'setparent_process_output' is assigned a value but never used.","'parent_process_owner' is assigned a value but never used.","'setparent_process_owner' is assigned a value but never used.","'strategic_support_process' is assigned a value but never used.","'setstrategic_support_process' is assigned a value but never used.","'strategic_support_input' is assigned a value but never used.","'setstrategic_support_input' is assigned a value but never used.","'strategic_support_output' is assigned a value but never used.","'setstrategic_support_output' is assigned a value but never used.","'editId' is assigned a value but never used.","'seteditId' is assigned a value but never used.","'delId' is assigned a value but never used.","'setdelId' is assigned a value but never used.","'editModal' is assigned a value but never used.","'editvilakshan_journey' is assigned a value but never used.","'seteditvilakshan_journey' is assigned a value but never used.","'editvilakshan_form' is assigned a value but never used.","'seteditvilakshan_form' is assigned a value but never used.","'editparent_process_name' is assigned a value but never used.","'seteditparent_process_name' is assigned a value but never used.","'editparent_process_input' is assigned a value but never used.","'seteditparent_process_input' is assigned a value but never used.","'editparent_process_output' is assigned a value but never used.","'seteditparent_process_output' is assigned a value but never used.","'editparent_process_owner' is assigned a value but never used.","'seteditparent_process_owner' is assigned a value but never used.","'editstrategic_support_process' is assigned a value but never used.","'seteditstrategic_support_process' is assigned a value but never used.","'editstrategic_support_input' is assigned a value but never used.","'seteditstrategic_support_input' is assigned a value but never used.","'editstrategic_support_output' is assigned a value but never used.","'seteditstrategic_support_output' is assigned a value but never used.","'Upid' is assigned a value but never used.","'beliverName' is assigned a value but never used.",["2120"],"'handleClose' is assigned a value but never used.","'useStyles' is assigned a value but never used.",["2121"],"'childName' is assigned a value but never used.","'changeChildName' is assigned a value but never used.","'setinner_id' is assigned a value but never used.","'AddCheck' is assigned a value but never used.",["2122"],"'ReactExport' is defined but never used.","'setRevenueReadOnly1' is assigned a value but never used.","'setDirectExpencesReadOnly1' is assigned a value but never used.","'setGrossProfitID1' is assigned a value but never used.","'setIndirectExpencesID1' is assigned a value but never used.","'setEBITDA_ID1' is assigned a value but never used.","'setRevenueReadOnly2' is assigned a value but never used.","'setDirectExpencesReadOnly2' is assigned a value but never used.","'setGrossProfitID2' is assigned a value but never used.","'setIndirectExpencesID2' is assigned a value but never used.","'setEBITDA_ID2' is assigned a value but never used.","'setRevenueReadOnly3' is assigned a value but never used.","'setDirectExpencesReadOnly3' is assigned a value but never used.","'setGrossProfitID3' is assigned a value but never used.","'setIndirectExpencesID3' is assigned a value but never used.","'setEBITDA_ID3' is assigned a value but never used.","'setRevenueReadOnly4' is assigned a value but never used.","'setDirectExpencesReadOnly4' is assigned a value but never used.","'setGrossProfitID4' is assigned a value but never used.","'setIndirectExpencesID4' is assigned a value but never used.","'setEBITDA_ID4' is assigned a value but never used.","'setRevenueReadOnly5' is assigned a value but never used.","'setDirectExpencesReadOnly5' is assigned a value but never used.","'setGrossProfitID5' is assigned a value but never used.","'setIndirectExpencesID5' is assigned a value but never used.","'setEBITDA_ID5' is assigned a value but never used.","'setRevenueReadOnly6' is assigned a value but never used.","'setDirectExpencesReadOnly6' is assigned a value but never used.","'setGrossProfitID6' is assigned a value but never used.","'setIndirectExpencesID6' is assigned a value but never used.","'setEBITDA_ID6' is assigned a value but never used.","'setMdelete' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","React Hook useEffect has missing dependencies: 'DirectExpences1', 'DirectExpences2', 'DirectExpences3', 'DirectExpences4', 'DirectExpences5', 'DirectExpences6', 'GetallRecords', 'IndirectExpences1', 'IndirectExpences2', 'IndirectExpences3', 'IndirectExpences4', 'IndirectExpences5', 'IndirectExpences6', 'TotalRevenue1', 'TotalRevenue2', 'TotalRevenue3', 'TotalRevenue4', 'TotalRevenue5', 'TotalRevenue6', 'history', and 's_id'. Either include them or remove the dependency array.",["2123"],["2124"],"'s_id' is already defined.","'prayaanData' is assigned a value but never used.","'drpdata' is assigned a value but never used.","'setdrpdata' is assigned a value but never used.",["2125"],"'get_list' is assigned a value but never used.","'requestOptionsget' is already defined.","'handleRemoveClick' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'setShowData' is assigned a value but never used.",["2126"],["2127"],"'customerList' is assigned a value but never used.","'setorg_name' is assigned a value but never used.",["2128"],"'MyValues1' is assigned a value but never used.","'FeatureG' is assigned a value but never used.","'checked_value' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'NativeSelect' is defined but never used.","'Select' is defined but never used.","'customerSegmentData' is assigned a value but never used.","'setcustomerSegmentData' is assigned a value but never used.","'inputListddl' is assigned a value but never used.","'setInputListddl' is assigned a value but never used.","'value1' is assigned a value but never used.","'setvalue1' is assigned a value but never used.","'setvalue2' is assigned a value but never used.","'value3' is assigned a value but never used.","'setvalue3' is assigned a value but never used.","'value4' is assigned a value but never used.","'setvalue4' is assigned a value but never used.","'staticarry' is assigned a value but never used.","'options' is assigned a value but never used.","'text_stmt' is assigned a value but never used.","'valPropData' is assigned a value but never used.","'setvalPropData' is assigned a value but never used.","'defVal' is assigned a value but never used.","'AllGraphData' is assigned a value but never used.","'setAllGraphData' is assigned a value but never used.","'gval' is assigned a value but never used.","'setgval' is assigned a value but never used.",["2129"],"'MyValues' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'abc' is assigned a value but never used.","'super_array2' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'alldata' is assigned a value but never used.","'letters' is assigned a value but never used.","'color' is assigned a value but never used.","'val22' is assigned a value but never used.","'jjj' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'holdValue', and 's_id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCustomerList' needs the current value of 'holdValue'.",["2130"],["2131"],["2132"],["2133"],"'SelectBox' is defined but never used.","'allOptions' is assigned a value but never used.","'setallOptions' is assigned a value but never used.","'holdValue' is assigned a value but never used.","'DrpValues' is assigned a value but never used.","'setDrpValues' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetData', 'history', and 's_id'. Either include them or remove the dependency array.",["2134"],"'onChange' is assigned a value but never used.","'handleAddClick' is assigned a value but never used.","'srcIrecId' is assigned a value but never used.","'desIrecId' is assigned a value but never used.","'useRef' is defined but never used.","'SunEditor' is defined but never used.","'moment' is defined but never used.","'content' is assigned a value but never used.","'setcompleteOptionData' is assigned a value but never used.","'regEx' is assigned a value but never used.","'GetFormattedDate' is assigned a value but never used.",["2135"],"'handleChangeEditor' is assigned a value but never used.",["2136"],"'jsPDF' is defined but never used.","'rebirthcommom' is assigned a value but never used.","'discoverydata' is assigned a value but never used.","'rebirthdata' is assigned a value but never used.",["2137"],"'getDataByUid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetallRecords', 'history', and 'id'. Either include them or remove the dependency array.",["2138"],"'ReactQuill' is defined but never used.","'convertedText' is assigned a value but never used.","'setConvertedText' is assigned a value but never used.","'MyValues' is defined but never used.",["2139"],"'cleanText' is assigned a value but never used.","'optionData' is assigned a value but never used.","'postorupdate' is assigned a value but never used.","'setpostorupdate' is assigned a value but never used.","'dateMDYcon' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'getSelectedItem' is assigned a value but never used.","Array.prototype.find() expects a value to be returned at the end of arrow function.","'dateMDY' is assigned a value but never used.","'Expecteddtae' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"2140","fix":"2141"},{"desc":"2140","fix":"2142"},{"desc":"2143","fix":"2144"},{"desc":"2145","fix":"2146"},{"desc":"2147","fix":"2148"},{"desc":"2143","fix":"2149"},{"desc":"2143","fix":"2150"},{"desc":"2151","fix":"2152"},{"desc":"2153","fix":"2154"},{"desc":"2143","fix":"2155"},{"desc":"2156","fix":"2157"},{"desc":"2158","fix":"2159"},{"desc":"2143","fix":"2160"},{"desc":"2161","fix":"2162"},{"desc":"2163","fix":"2164"},{"desc":"2140","fix":"2165"},{"desc":"2163","fix":"2166"},{"desc":"2158","fix":"2167"},{"desc":"2163","fix":"2168"},{"desc":"2163","fix":"2169"},{"desc":"2163","fix":"2170"},{"desc":"2171","fix":"2172"},{"desc":"2145","fix":"2173"},{"desc":"2143","fix":"2174"},{"desc":"2143","fix":"2175"},{"desc":"2156","fix":"2176"},{"desc":"2143","fix":"2177"},{"desc":"2158","fix":"2178"},{"desc":"2179","fix":"2180"},{"desc":"2143","fix":"2181"},{"desc":"2143","fix":"2182"},{"desc":"2143","fix":"2183"},{"desc":"2184","fix":"2185"},{"desc":"2143","fix":"2186"},{"desc":"2184","fix":"2187"},{"desc":"2143","fix":"2188"},{"desc":"2189","fix":"2190"},{"desc":"2143","fix":"2191"},"Update the dependencies array to be: [history, s_id]",{"range":"2192","text":"2193"},{"range":"2194","text":"2193"},"Update the dependencies array to be: [GetallRecords, history, s_id]",{"range":"2195","text":"2196"},"Update the dependencies array to be: [history]",{"range":"2197","text":"2198"},"Update the dependencies array to be: [urlCheck]",{"range":"2199","text":"2200"},{"range":"2201","text":"2196"},{"range":"2202","text":"2196"},"Update the dependencies array to be: [getvilakshanMapData, history, s_id]",{"range":"2203","text":"2204"},"Update the dependencies array to be: [getDataOff, history, s_id]",{"range":"2205","text":"2206"},{"range":"2207","text":"2196"},"Update the dependencies array to be: [GetallRecords, history]",{"range":"2208","text":"2209"},"Update the dependencies array to be: [GetallRecords]",{"range":"2210","text":"2211"},{"range":"2212","text":"2196"},"Update the dependencies array to be: [config, contents, getValue]",{"range":"2213","text":"2214"},"Update the dependencies array to be: [GetallRecored, history, s_id]",{"range":"2215","text":"2216"},{"range":"2217","text":"2193"},{"range":"2218","text":"2216"},{"range":"2219","text":"2211"},{"range":"2220","text":"2216"},{"range":"2221","text":"2216"},{"range":"2222","text":"2216"},"Update the dependencies array to be: [DirectExpences1, DirectExpences2, DirectExpences3, DirectExpences4, DirectExpences5, DirectExpences6, GetallRecords, IndirectExpences1, IndirectExpences2, IndirectExpences3, IndirectExpences4, IndirectExpences5, IndirectExpences6, TotalRevenue1, TotalRevenue2, TotalRevenue3, TotalRevenue4, TotalRevenue5, TotalRevenue6, history, s_id]",{"range":"2223","text":"2224"},{"range":"2225","text":"2198"},{"range":"2226","text":"2196"},{"range":"2227","text":"2196"},{"range":"2228","text":"2209"},{"range":"2229","text":"2196"},{"range":"2230","text":"2211"},"Update the dependencies array to be: [history, holdValue, s_id]",{"range":"2231","text":"2232"},{"range":"2233","text":"2196"},{"range":"2234","text":"2196"},{"range":"2235","text":"2196"},"Update the dependencies array to be: [GetData, history, s_id]",{"range":"2236","text":"2237"},{"range":"2238","text":"2196"},{"range":"2239","text":"2237"},{"range":"2240","text":"2196"},"Update the dependencies array to be: [GetallRecords, history, id]",{"range":"2241","text":"2242"},{"range":"2243","text":"2196"},[1109,1111],"[history, s_id]",[383,385],[2816,2818],"[GetallRecords, history, s_id]",[558,560],"[history]",[2068,2070],"[urlCheck]",[1377,1379],[6641,6643],[7066,7068],"[getvilakshanMapData, history, s_id]",[2355,2357],"[getDataOff, history, s_id]",[3673,3675],[3722,3724],"[GetallRecords, history]",[15452,15454],"[GetallRecords]",[6666,6668],[2297,2299],"[config, contents, getValue]",[3206,3208],"[GetallRecored, history, s_id]",[505,507],[2795,2797],[1849,1851],[4145,4147],[1497,1499],[8633,8635],[14302,14304],"[DirectExpences1, DirectExpences2, DirectExpences3, DirectExpences4, DirectExpences5, DirectExpences6, GetallRecords, IndirectExpences1, IndirectExpences2, IndirectExpences3, IndirectExpences4, IndirectExpences5, IndirectExpences6, TotalRevenue1, TotalRevenue2, TotalRevenue3, TotalRevenue4, TotalRevenue5, TotalRevenue6, history, s_id]",[6435,6437],[2124,2126],[9919,9921],[8533,8535],[1425,1427],[5259,5261],[5193,5195],"[history, holdValue, s_id]",[1239,1241],[2083,2085],[1613,1615],[1433,1435],"[GetData, history, s_id]",[2762,2764],[1611,1613],[4842,4844],[1212,1214],"[GetallRecords, history, id]",[1722,1724]]