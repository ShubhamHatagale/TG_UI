{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/CustomerTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SelectBox from '../components/Select';\nimport Modal from \"react-bootstrap/Modal\";\nimport { useHistory } from \"react-router-dom\";\nimport { ListContainer, ListItem } from \"../components/styles\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { DragHandle } from \"../components/DragHandle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  _s();\n\n  var s_id = localStorage.getItem('tr_id');\n  const [inputListFinal, setInputListFinal] = useState([{\n    competition: \"\"\n  }]);\n  const history = useHistory(); // let formData = props.AllData;\n  // console.log(\"All Table Data\", formData)\n\n  let rows = [];\n  const [allOptions, setallOptions] = useState([]);\n  const [holdValue, setholdValue] = useState([]);\n  let [completeData, setcompleteData] = useState('');\n  const [smShow, setSmShow] = useState(false);\n  useEffect(() => {\n    if (!s_id) {\n      history.push(\"Not_support\");\n    }\n\n    GetData();\n  }, []);\n\n  const GetData = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var requestOptionsget = {\n      method: \"GET\",\n      headers: myHeaders,\n      redirect: \"follow\"\n    };\n    fetch(`http://localhost:9002/masters/customerTab2/user/${s_id}`, requestOptionsget).then(response => response.json()).then(resData => {\n      console.log(resData.data);\n      setcompleteData(resData.data);\n\n      if (resData.status == 200) {\n        console.log(\"Data Added succesfully\");\n      }\n    }).catch(error => console.log(\"error\", error));\n  };\n\n  const onChange = (newInputValue, value) => {\n    holdValue.push({\n      \"options\": newInputValue,\n      \"id\": value\n    });\n    console.log(\"Pushed data\", holdValue);\n    setallOptions(holdValue);\n  };\n\n  const HandleSubmit = () => {\n    if (allOptions) {\n      allOptions.map((item, key) => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptionsget = {\n          method: \"GET\",\n          headers: myHeaders,\n          redirect: \"follow\"\n        };\n        fetch(`http://localhost:9002/masters/customerTab2/` + `${item.id}`, requestOptionsget).then(response => response.json()).then(resData => {\n          console.log(\"I am here in api\", resData);\n          let data = resData.data;\n          data.map((customer, key) => {\n            console.log(customer.question_mind_journy);\n            let rawrich = JSON.stringify({\n              question_mind_journy: customer.question_mind_journy,\n              choice_made: customer.choice_made,\n              possible_answer: customer.possible_answer,\n              who_give_answer: customer.who_give_answer,\n              question_mind_of: customer.question_mind_of,\n              point_to_be_considered: item.options,\n              email_id: s_id,\n              created_by: s_id\n            });\n            var requestOptionsrichtext = {\n              method: \"PUT\",\n              headers: myHeaders,\n              body: rawrich,\n              redirect: \"follow\"\n            };\n            fetch(`http://localhost:9002/masters/customerTab2/` + `${item.id}`, requestOptionsrichtext).then(response => response.json()).then(resData => {\n              if (resData.status == 200) {\n                console.log(\"Data Added succesfully\");\n                setSmShow(true);\n                setTimeout(() => {\n                  setSmShow(false);\n                }, 1000);\n                GetData();\n                props.OnValidateTab2(true);\n              } else {\n                props.OnValidateTab2(true);\n              }\n            }).catch(error => console.log(\"error\", error));\n          });\n          console.log(\"Response Daaat\", resData.data);\n        }).catch(error => console.log(\"error\", error));\n      });\n    } else {\n      props.OnValidateTab2(true);\n    }\n  };\n\n  const updateJson = (srcID, desID) => {\n    console.log(srcID);\n    console.log(desID); // var sourceId = parseInt(srcID)\n    // var destId = parseInt(desID)\n    // console.log(sourceId)\n    // console.log(destId)\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      order_by: srcID[1]\n    });\n    var requestOptions = {\n      method: \"PUT\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(`http://localhost:9002/masters/customerTab2Id/${desID[0]}`, requestOptions).then(response => response.json()).then(resData => {\n      console.log(resData); // GetallRecords();\n\n      if (resData.status == 200) {\n        // console.log(\"Values Submitted Succesfully==>\");\n        // setMupdate(true);\n        // setTimeout(() => {\n        //   setMupdate(false);\n        // }, 1000)\n        // props.OnValidate1(true)\n        GetData(); // GetallRecords();\n      }\n    }).catch(error => console.log(\"error\", error));\n    var myHeaders2 = new Headers();\n    myHeaders2.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      order_by: desID[1]\n    });\n    var requestOptions = {\n      method: \"PUT\",\n      headers: myHeaders2,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(`http://localhost:9002/masters/customerTab2Id/` + `${srcID[0]}`, requestOptions).then(response => response.json()).then(resData => {\n      console.log(resData); // GetallRecords();\n\n      if (resData.status == 200) {\n        // console.log(\"Values Submitted Succesfully==>\");\n        // setMupdate(true);\n        // setTimeout(() => {\n        //   setMupdate(false);\n        // }, 1000)\n        // props.OnValidate1(true)\n        GetData(); // GetallRecords();\n      }\n    }).catch(error => console.log(\"error\", error));\n    GetData();\n  }; // handle input change\n\n\n  const handleInputChange = (e, index) => {\n    console.log(e.target.id); // console.log(index)\n    // if (e.target.value > 9) {\n    //   setShowHideErr(false)\n    // } else {\n    //   setShowHideErr(true);\n    //   // alert(Show)\n    // }\n\n    const {\n      name,\n      value,\n      ips\n    } = e.target;\n    const list = [...inputListFinal];\n    console.log(\"Here is the Value---1>\", list);\n    list[index][name] = value;\n    list[index][\"is_display\"] = 0;\n    console.log(list[index][name]);\n    console.log(value + \"val\");\n    setInputListFinal(list); // setcompleteData(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row clearfix\",\n    style: {\n      backgroundColor: \"#F3F6F9\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-4 mt-2\",\n        children: completeData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body p-5\",\n          style: {\n            overflowX: \"scroll\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: param => {\n              var _param$destination, _param$destination2;\n\n              console.log(param);\n              const srcI = param.source.index.split(\"o\");\n              ;\n              const desI = (_param$destination = param.destination) === null || _param$destination === void 0 ? void 0 : _param$destination.index.split(\"o\");\n              const srcIrecId = param.source.recId;\n              const desIrecId = (_param$destination2 = param.destination) === null || _param$destination2 === void 0 ? void 0 : _param$destination2.recId; // const srcIArray = srcI.split(\"o\");\n              // const desIIArray = desI.split(\"o\");\n              // console.log(srcIArray)\n              // console.log(desIIArray)\n              // console.log(desI)\n\n              if (desI) {\n                completeData.splice(desI, 0, completeData.splice(srcI, 1)[0]); // List.saveList(completeData);\n\n                console.log(completeData);\n                updateJson(srcI, desI);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListContainer, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row clearfix\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Questions appearing in mind Journey\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center ml-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Question appearing in Mind of\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center ml-5\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Who Gives the answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center ml-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Possible Answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center ml-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Choice Made\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"droppable-1\",\n                children: (provided, _) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  children: [inputListFinal.map((x, i) => {\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: \"draggable-\" + i,\n                      index: x.order_by + \"o\" + x.id,\n                      recId: x.id,\n                      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(ListItem, {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        style: { ...provided.draggableProps.style,\n                          boxShadow: snapshot.isDragging ? \"0 0 .4rem #666\" : \"none\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row clearfix flex-nowrap\",\n                          children: [/*#__PURE__*/_jsxDEV(DragHandle, { ...provided.dragHandleProps,\n                            className: \"mr-2\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 324,\n                            columnNumber: 73\n                          }, this), Array.from({\n                            length: 5\n                          }, (item, index) => {\n                            return /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"col-lg-2\",\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"form-group\",\n                                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                    type: \"text\",\n                                    className: \"form-control\",\n                                    placeholder: \"0\",\n                                    maxLength: 200,\n                                    max: 200,\n                                    name: `value${index}`,\n                                    value: x[`value${index}`],\n                                    onChange: e => handleInputChange(e, i),\n                                    required: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 331,\n                                    columnNumber: 93\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 330,\n                                  columnNumber: 89\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 329,\n                                columnNumber: 85\n                              }, this)\n                            }, void 0, false);\n                          })]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 323,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 65\n                      }, this)\n                    }, x.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 57\n                    }, this);\n\n                    /*#__PURE__*/\n                    _jsxDEV(\"div\", {\n                      className: \"col-md-2\",\n                      children: [inputListFinal.length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"btn btn-raised rembtn btn-square waves-effect m-l-40\" // onClick={() => handleRemoveClick(i)}\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"REMOVE\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 394,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 57\n                      }, this), inputListFinal.length - 1 === i && /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"btn btn-raised addbtn btn-square waves-effect m-l-40 \" // onClick={handleAddClick}\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"ADD\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 49\n                    }, this);\n                  }), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn finalizebtn btn-square waves-effect\",\n            onClick: HandleSubmit,\n            children: \"FINALIZE CMM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 9\n  }, this) // <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\n  //     <div className=\"row clearfix\">\n  //         <div className=\"col-lg-12 col-md-12 col-sm-12\">\n  //             <div className=\"card p-4 mt-2\">\n  //                 <div className=\"body p-5\">\n  //                     <form>\n  //                         <div class=\"table-responsive\" id=\"Table\">\n  //                             <table class=\"table table-bordered\">\n  //                                 <thead>\n  //                                     <tr>\n  //                                         <th>Questions appearing in mind Journey</th>\n  //                                         <th>Question appearing in Mind of</th>\n  //                                         <th>Who Gives the answer</th>\n  //                                         <th>Possible Answer</th>\n  //                                         <th>Choice Made</th>\n  //                                         <th>Point to be Considered</th>\n  //                                     </tr>\n  //                                 </thead>\n  //                                 {(completeData) ? (\n  //                                     completeData.map((item, key) => {\n  //                                         <tbody>\n  //                                             <td>{item.question_mind_journy}</td>\n  //                                             <td>{item.question_mind_of}</td>\n  //                                             <td>{item.who_give_answer}</td>\n  //                                             <td>{item.possible_answer}</td>\n  //                                             <td>{item.choice_made}</td>\n  //                                             <td><SelectBox onChangeTag={onChange} keyValue={item.point_to_be_considered} keyid={item.id} /></td>\n  //                                         </tbody>\n  //                                     })) : null}\n  //                             </table>\n  //                             <button type=\"button\" class=\"btn finalizebtn btn-square waves-effect\" onClick={HandleSubmit}>FINALIZE CMM</button>\n  //                         </div>\n  //                         <div style={{ marginTop: 30 }}></div>\n  //                     </form>\n  //                     <div style={{ marginTop: 30 }}></div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div>\n  //     <Modal\n  //         size=\"sm\"\n  //         show={smShow}\n  //         onHide={() => setSmShow(false)}\n  //         aria-labelledby=\"example-modal-sizes-title-sm\"\n  //     >\n  //         <Modal.Body >Form Saved Successful</Modal.Body>\n  //     </Modal>\n  // </div>\n  ;\n};\n\n_s(Table, \"iKoNb2CAvVCK6v+piLhdKHnouM4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/CustomerTable.js"],"names":["React","useEffect","useState","SelectBox","Modal","useHistory","ListContainer","ListItem","DragDropContext","Droppable","Draggable","DragHandle","Table","props","s_id","localStorage","getItem","inputListFinal","setInputListFinal","competition","history","rows","allOptions","setallOptions","holdValue","setholdValue","completeData","setcompleteData","smShow","setSmShow","push","GetData","myHeaders","Headers","append","requestOptionsget","method","headers","redirect","fetch","then","response","json","resData","console","log","data","status","catch","error","onChange","newInputValue","value","HandleSubmit","map","item","key","id","customer","question_mind_journy","rawrich","JSON","stringify","choice_made","possible_answer","who_give_answer","question_mind_of","point_to_be_considered","options","email_id","created_by","requestOptionsrichtext","body","setTimeout","OnValidateTab2","updateJson","srcID","desID","raw","order_by","requestOptions","myHeaders2","handleInputChange","e","index","target","name","ips","list","backgroundColor","overflowX","param","srcI","source","split","desI","destination","srcIrecId","recId","desIrecId","splice","marginTop","provided","_","innerRef","droppableProps","x","i","snapshot","draggableProps","style","boxShadow","isDragging","dragHandleProps","Array","from","length","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport SelectBox from '../components/Select'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ListContainer, ListItem } from \"../components/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragHandle } from \"../components/DragHandle\";\r\n\r\nconst Table = props => {\r\n    var s_id = localStorage.getItem('tr_id')\r\n    const [inputListFinal, setInputListFinal] = useState([{ competition: \"\" }]);\r\n\r\n    const history = useHistory();\r\n\r\n    // let formData = props.AllData;\r\n    // console.log(\"All Table Data\", formData)\r\n    let rows = [];\r\n    const [allOptions, setallOptions] = useState([]);\r\n    const [holdValue, setholdValue] = useState([]);\r\n    let [completeData, setcompleteData] = useState('')\r\n    const [smShow, setSmShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!s_id) {\r\n            history.push(\"Not_support\");\r\n        }\r\n\r\n        GetData();\r\n    }, []);\r\n\r\n    const GetData = () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptionsget = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://localhost:9002/masters/customerTab2/user/${s_id}`, requestOptionsget)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData.data);\r\n                setcompleteData(resData.data);\r\n                if (resData.status == 200) {\r\n                    console.log(\"Data Added succesfully\")\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error))\r\n    }\r\n\r\n    const onChange = (newInputValue, value) => {\r\n        holdValue.push({ \"options\": newInputValue, \"id\": value })\r\n        console.log(\"Pushed data\", holdValue)\r\n        setallOptions(holdValue)\r\n    }\r\n\r\n    const HandleSubmit = () => {\r\n\r\n        if (allOptions) {\r\n            allOptions.map((item, key) => {\r\n                var myHeaders = new Headers();\r\n                myHeaders.append(\"Content-Type\", \"application/json\");\r\n                var requestOptionsget = {\r\n                    method: \"GET\",\r\n                    headers: myHeaders,\r\n                    redirect: \"follow\",\r\n                };\r\n                fetch(`http://localhost:9002/masters/customerTab2/` + `${item.id}`, requestOptionsget)\r\n                    .then((response) => response.json())\r\n                    .then((resData) => {\r\n                        console.log(\"I am here in api\", resData)\r\n                        let data = resData.data;\r\n                        data.map((customer, key) => {\r\n                            console.log(customer.question_mind_journy)\r\n                            let rawrich = JSON.stringify({\r\n                                question_mind_journy: customer.question_mind_journy,\r\n                                choice_made: customer.choice_made,\r\n                                possible_answer: customer.possible_answer,\r\n                                who_give_answer: customer.who_give_answer,\r\n                                question_mind_of: customer.question_mind_of,\r\n                                point_to_be_considered: item.options,\r\n                                email_id: s_id,\r\n                                created_by: s_id\r\n                            })\r\n                            var requestOptionsrichtext = {\r\n                                method: \"PUT\",\r\n                                headers: myHeaders,\r\n                                body: rawrich,\r\n                                redirect: \"follow\",\r\n                            };\r\n                            fetch(`http://localhost:9002/masters/customerTab2/` + `${item.id}`, requestOptionsrichtext)\r\n                                .then((response) => response.json())\r\n                                .then((resData) => {\r\n                                    if (resData.status == 200) {\r\n                                        console.log(\"Data Added succesfully\")\r\n                                        setSmShow(true);\r\n                                        setTimeout(() => {\r\n                                            setSmShow(false);\r\n                                        }, 1000)\r\n                                        GetData();\r\n                                        props.OnValidateTab2(true);\r\n\r\n                                    } else {\r\n                                        props.OnValidateTab2(true);\r\n\r\n                                    }\r\n                                })\r\n\r\n                                .catch((error) => console.log(\"error\", error))\r\n                        })\r\n                        console.log(\"Response Daaat\", resData.data)\r\n                    })\r\n                    .catch((error) => console.log(\"error\", error))\r\n            })\r\n        } else {\r\n            props.OnValidateTab2(true);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const updateJson = (srcID, desID) => {\r\n        console.log(srcID)\r\n        console.log(desID)\r\n\r\n        // var sourceId = parseInt(srcID)\r\n        // var destId = parseInt(desID)\r\n        // console.log(sourceId)\r\n        // console.log(destId)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            order_by: srcID[1],\r\n\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            `http://localhost:9002/masters/customerTab2Id/${desID[0]}`,\r\n            requestOptions\r\n        )\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                // GetallRecords();\r\n\r\n                if (resData.status == 200) {\r\n                    // console.log(\"Values Submitted Succesfully==>\");\r\n                    // setMupdate(true);\r\n                    // setTimeout(() => {\r\n                    //   setMupdate(false);\r\n                    // }, 1000)\r\n                    // props.OnValidate1(true)\r\n\r\n                    GetData();\r\n                    // GetallRecords();\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n        var myHeaders2 = new Headers();\r\n        myHeaders2.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            order_by: desID[1],\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders2,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            `http://localhost:9002/masters/customerTab2Id/` + `${srcID[0]}`,\r\n            requestOptions\r\n        )\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                // GetallRecords();\r\n\r\n                if (resData.status == 200) {\r\n                    // console.log(\"Values Submitted Succesfully==>\");\r\n                    // setMupdate(true);\r\n                    // setTimeout(() => {\r\n                    //   setMupdate(false);\r\n                    // }, 1000)\r\n                    // props.OnValidate1(true)\r\n                    GetData();\r\n\r\n\r\n                    // GetallRecords();\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n        GetData();\r\n\r\n\r\n    }\r\n\r\n    // handle input change\r\n    const handleInputChange = (e, index) => {\r\n        console.log(e.target.id)\r\n        // console.log(index)\r\n\r\n        // if (e.target.value > 9) {\r\n        //   setShowHideErr(false)\r\n        // } else {\r\n        //   setShowHideErr(true);\r\n        //   // alert(Show)\r\n        // }\r\n\r\n        const { name, value, ips } = e.target;\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value---1>\", list);\r\n        list[index][name] = value;\r\n        list[index][\"is_display\"] = 0;\r\n\r\n        console.log(list[index][name]);\r\n        console.log(value + \"val\");\r\n\r\n        setInputListFinal(list);\r\n        // setcompleteData(list);\r\n\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"row clearfix\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card p-4 mt-2\">\r\n                    {completeData ? (\r\n                        <div className=\"body p-5\" style={{ overflowX: \"scroll\" }}>\r\n                            <DragDropContext\r\n                                onDragEnd={(param) => {\r\n                                    console.log(param)\r\n                                    const srcI = param.source.index.split(\"o\");;\r\n                                    const desI = param.destination?.index.split(\"o\");\r\n                                    const srcIrecId = param.source.recId;\r\n                                    const desIrecId = param.destination?.recId;\r\n                                    // const srcIArray = srcI.split(\"o\");\r\n                                    // const desIIArray = desI.split(\"o\");\r\n                                    // console.log(srcIArray)\r\n                                    // console.log(desIIArray)\r\n                                    // console.log(desI)\r\n\r\n                                    if (desI) {\r\n                                        completeData.splice(desI, 0, completeData.splice(srcI, 1)[0]);\r\n                                        // List.saveList(completeData);\r\n                                        console.log(completeData)\r\n                                        updateJson(srcI, desI);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <ListContainer>\r\n\r\n                                    <div style={{ marginTop: 20 }}>\r\n                                    </div>\r\n                                    <div className=\"row clearfix\" >\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center\">\r\n                                                <strong>Questions appearing in mind Journey</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-2\">\r\n                                                <strong>Question appearing in Mind of</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-5\">\r\n                                                <strong>Who Gives the answer</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-4\">\r\n                                                <strong>Possible Answer</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-4\">\r\n                                                <strong>Choice Made</strong>\r\n                                            </h2>\r\n                                        </div>\r\n                                        {/* <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-5\">\r\n                                                <strong>Point to be Considered</strong>\r\n                                            </h2>\r\n                                        </div> */}\r\n                                    </div>\r\n\r\n\r\n                                    <Droppable droppableId=\"droppable-1\">\r\n                                        {(provided, _) => (\r\n                                            <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                                                {inputListFinal.map((x, i) => {\r\n                                                    return (\r\n                                                        <Draggable\r\n                                                            key={x.id}\r\n                                                            draggableId={\"draggable-\" + i}\r\n                                                            index={x.order_by + \"o\" + x.id}\r\n                                                            recId={x.id}\r\n                                                        >\r\n                                                            {(provided, snapshot) => (\r\n                                                                <ListItem\r\n                                                                    ref={provided.innerRef}\r\n                                                                    {...provided.draggableProps}\r\n                                                                    style={{\r\n                                                                        ...provided.draggableProps.style,\r\n                                                                        boxShadow: snapshot.isDragging\r\n                                                                            ? \"0 0 .4rem #666\"\r\n                                                                            : \"none\",\r\n                                                                    }}\r\n                                                                >\r\n\r\n\r\n                                                                    <div className=\"row clearfix flex-nowrap\">\r\n                                                                        <DragHandle {...provided.dragHandleProps} className=\"mr-2\" />\r\n\r\n                                                                        {Array.from({ length: 5 }, (item, index) => {\r\n                                                                            return (\r\n                                                                                <>\r\n                                                                                    <div className=\"col-lg-2\">\r\n                                                                                        <div className=\"form-group\">\r\n                                                                                            <input\r\n                                                                                                type=\"text\"\r\n                                                                                                className=\"form-control\"\r\n                                                                                                placeholder=\"0\"\r\n                                                                                                maxLength={200}\r\n                                                                                                max={200}\r\n                                                                                                name={`value${index}`}\r\n                                                                                                value={x[`value${index}`]}\r\n                                                                                                onChange={(e) => handleInputChange(e, i)}\r\n                                                                                                required\r\n                                                                                            />\r\n\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n\r\n                                                                                </>\r\n                                                                            );\r\n                                                                        })\r\n\r\n                                                                        }\r\n\r\n\r\n                                                                        {/* <div className=\"col-md-2\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <SelectBox onChangeTag={onChange} keyValue={x.point_to_be_considered} keyid={x.id} />\r\n                                                                            </div>\r\n\r\n                                                                        </div> */}\r\n                                                                    </div>\r\n\r\n\r\n                                                                    {/* <div className=\"col-md-2\">\r\n                                                                            {completeData.length !== 1 && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn btn-raised rembtn btn-square waves-effect m-l-40 \"\r\n                                                                                    onClick={() => handleRemoveClick(i)}\r\n                                                                                >\r\n                                                                                    <strong>REMOVE</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                            {completeData.length - 1 === i && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn  addbtn btn-square waves-effect m-l-40 \"\r\n                                                                                    onClick={handleAddClick}\r\n                                                                                >\r\n                                                                                    <strong>ADD</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                        </div> */}\r\n\r\n                                                                </ListItem>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    );\r\n                                                <div className=\"col-md-2\">\r\n                                                    {inputListFinal.length !== 1 && (\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\"\r\n                                                        // onClick={() => handleRemoveClick(i)}\r\n                                                        >\r\n                                                            <strong>REMOVE</strong>\r\n                                                        </button>\r\n                                                    )}\r\n                                                    {inputListFinal.length - 1 === i && (\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                                                        // onClick={handleAddClick}\r\n                                                        >\r\n                                                            <strong>ADD</strong>\r\n                                                        </button>\r\n                                                    )}\r\n                                                </div>\r\n                                                })}\r\n                                                {provided.placeholder}\r\n                                                \r\n                                            </div>\r\n                                        )}\r\n                                    </Droppable>\r\n\r\n\r\n                                </ListContainer>\r\n\r\n                            </DragDropContext>\r\n\r\n\r\n\r\n                            <div style={{ marginTop: 30 }}></div>\r\n\r\n                            {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnSubmitHandle}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button> */}\r\n                            <button type=\"button\" class=\"btn finalizebtn btn-square waves-effect\" onClick={HandleSubmit}>FINALIZE CMM</button>\r\n\r\n\r\n                        </div>\r\n                    ) : (null)}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {/* <Modal\r\n          size=\"sm\"\r\n          show={Mupdate}\r\n          onHide={() => setMupdate(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Update Successful</Modal.Body>\r\n        </Modal>\r\n  \r\n        <Modal\r\n          size=\"sm\"\r\n          show={Mdelete}\r\n          onHide={() => setMdelete(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n        </Modal>\r\n  \r\n        <Modal\r\n          size=\"sm\"\r\n          show={Madd}\r\n          onHide={() => setMadd(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Saved Successful</Modal.Body>\r\n        </Modal> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div >\r\n\r\n\r\n\r\n\r\n        // <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n        //     <div className=\"row clearfix\">\r\n        //         <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        //             <div className=\"card p-4 mt-2\">\r\n        //                 <div className=\"body p-5\">\r\n        //                     <form>\r\n        //                         <div class=\"table-responsive\" id=\"Table\">\r\n        //                             <table class=\"table table-bordered\">\r\n        //                                 <thead>\r\n        //                                     <tr>\r\n        //                                         <th>Questions appearing in mind Journey</th>\r\n        //                                         <th>Question appearing in Mind of</th>\r\n        //                                         <th>Who Gives the answer</th>\r\n        //                                         <th>Possible Answer</th>\r\n        //                                         <th>Choice Made</th>\r\n        //                                         <th>Point to be Considered</th>\r\n        //                                     </tr>\r\n        //                                 </thead>\r\n        //                                 {(completeData) ? (\r\n        //                                     completeData.map((item, key) => {\r\n        //                                         <tbody>\r\n        //                                             <td>{item.question_mind_journy}</td>\r\n        //                                             <td>{item.question_mind_of}</td>\r\n        //                                             <td>{item.who_give_answer}</td>\r\n        //                                             <td>{item.possible_answer}</td>\r\n        //                                             <td>{item.choice_made}</td>\r\n        //                                             <td><SelectBox onChangeTag={onChange} keyValue={item.point_to_be_considered} keyid={item.id} /></td>\r\n        //                                         </tbody>\r\n        //                                     })) : null}\r\n        //                             </table>\r\n        //                             <button type=\"button\" class=\"btn finalizebtn btn-square waves-effect\" onClick={HandleSubmit}>FINALIZE CMM</button>\r\n        //                         </div>\r\n        //                         <div style={{ marginTop: 30 }}></div>\r\n        //                     </form>\r\n        //                     <div style={{ marginTop: 30 }}></div>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        //     <Modal\r\n        //         size=\"sm\"\r\n        //         show={smShow}\r\n        //         onHide={() => setSmShow(false)}\r\n        //         aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        //     >\r\n        //         <Modal.Body >Form Saved Successful</Modal.Body>\r\n        //     </Modal>\r\n        // </div>\r\n    )\r\n}\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}