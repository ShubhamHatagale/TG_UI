{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n  name: 'list',\n  display: 'submenu',\n  add: function (core, targetElement) {\n    const context = core.context;\n    context.list = {\n      targetButton: targetElement,\n      _list: null,\n      currentList: '',\n      icons: {\n        bullets: core.icons.list_bullets,\n        number: core.icons.list_number\n      }\n    };\n    /** set submenu */\n\n    let listDiv = this.setSubmenu(core);\n    let listUl = listDiv.querySelector('ul');\n    /** add event listeners */\n\n    listUl.addEventListener('click', this.pickup.bind(core));\n    context.list._list = listUl.querySelectorAll('li button');\n    /** append target button menu */\n\n    core.initMenuTarget(this.name, targetElement, listDiv);\n    /** empty memory */\n\n    listDiv = null, listUl = null;\n  },\n  setSubmenu: function (core) {\n    const lang = core.lang;\n    const listDiv = core.util.createElement('DIV');\n    listDiv.className = 'se-submenu se-list-layer';\n    listDiv.innerHTML = '' + '<div class=\"se-list-inner\">' + '<ul class=\"se-list-basic\">' + '<li><button type=\"button\" class=\"se-btn-list se-tooltip\" data-command=\"OL\" title=\"' + lang.toolbar.orderList + '\">' + core.icons.list_number + '</button></li>' + '<li><button type=\"button\" class=\"se-btn-list se-tooltip\" data-command=\"UL\" title=\"' + lang.toolbar.unorderList + '\">' + core.icons.list_bullets + '</button></li>' + '</ul>' + '</div>';\n    return listDiv;\n  },\n\n  /**\n  * @Override core\n  */\n  active: function (element) {\n    const button = this.context.list.targetButton;\n    const icon = button.firstElementChild;\n    const util = this.util;\n\n    if (!element) {\n      button.removeAttribute('data-focus');\n      util.changeElement(icon, this.context.list.icons.number);\n      util.removeClass(button, 'active');\n    } else if (util.isList(element)) {\n      const nodeName = element.nodeName;\n      button.setAttribute('data-focus', nodeName);\n      util.addClass(button, 'active');\n\n      if (/UL/i.test(nodeName)) {\n        util.changeElement(icon, this.context.list.icons.bullets);\n      } else {\n        util.changeElement(icon, this.context.list.icons.number);\n      }\n\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n  * @Override submenu\n  */\n  on: function () {\n    const listContext = this.context.list;\n    const list = listContext._list;\n    const currentList = listContext.targetButton.getAttribute('data-focus') || '';\n\n    if (currentList !== listContext.currentList) {\n      for (let i = 0, len = list.length; i < len; i++) {\n        if (currentList === list[i].getAttribute('data-command')) {\n          this.util.addClass(list[i], 'active');\n        } else {\n          this.util.removeClass(list[i], 'active');\n        }\n      }\n\n      listContext.currentList = currentList;\n    }\n  },\n  editList: function (command, selectedCells, detach) {\n    let range = this.getRange();\n    let selectedFormats = !selectedCells ? this.getSelectedElementsAndComponents(false) : selectedCells;\n\n    if (selectedFormats.length === 0) {\n      if (selectedCells) return;\n      range = this.getRange_addLine(range, null);\n      selectedFormats = this.getSelectedElementsAndComponents(false);\n      if (selectedFormats.length === 0) return;\n    }\n\n    const util = this.util;\n    util.sortByDepth(selectedFormats, true); // merge\n\n    let firstSel = selectedFormats[0];\n    let lastSel = selectedFormats[selectedFormats.length - 1];\n    let topEl = (util.isListCell(firstSel) || util.isComponent(firstSel)) && !firstSel.previousElementSibling ? firstSel.parentNode.previousElementSibling : firstSel.previousElementSibling;\n    let bottomEl = (util.isListCell(lastSel) || util.isComponent(lastSel)) && !lastSel.nextElementSibling ? lastSel.parentNode.nextElementSibling : lastSel.nextElementSibling;\n    const originRange = {\n      sc: range.startContainer,\n      so: range.startOffset,\n      ec: range.endContainer,\n      eo: range.endOffset\n    };\n    let isRemove = true;\n\n    for (let i = 0, len = selectedFormats.length; i < len; i++) {\n      if (!util.isList(util.getRangeFormatElement(selectedFormats[i], function (current) {\n        return this.getRangeFormatElement(current) && current !== selectedFormats[i];\n      }.bind(util)))) {\n        isRemove = false;\n        break;\n      }\n    }\n\n    if (isRemove && (!topEl || firstSel.tagName !== topEl.tagName || command !== topEl.tagName.toUpperCase()) && (!bottomEl || lastSel.tagName !== bottomEl.tagName || command !== bottomEl.tagName.toUpperCase())) {\n      if (detach) {\n        for (let i = 0, len = selectedFormats.length; i < len; i++) {\n          for (let j = i - 1; j >= 0; j--) {\n            if (selectedFormats[j].contains(selectedFormats[i])) {\n              selectedFormats.splice(i, 1);\n              i--;\n              len--;\n              break;\n            }\n          }\n        }\n      }\n\n      const currentFormat = util.getRangeFormatElement(firstSel);\n      const cancel = currentFormat && currentFormat.tagName === command;\n      let rangeArr, tempList;\n\n      const passComponent = function (current) {\n        return !this.isComponent(current);\n      }.bind(util);\n\n      if (!cancel) tempList = util.createElement(command);\n\n      for (let i = 0, len = selectedFormats.length, r, o; i < len; i++) {\n        o = util.getRangeFormatElement(selectedFormats[i], passComponent);\n        if (!o || !util.isList(o)) continue;\n\n        if (!r) {\n          r = o;\n          rangeArr = {\n            r: r,\n            f: [util.getParentElement(selectedFormats[i], 'LI')]\n          };\n        } else {\n          if (r !== o) {\n            if (detach && util.isListCell(o.parentNode)) {\n              this.plugins.list._detachNested.call(this, rangeArr.f);\n            } else {\n              this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, tempList, false, true);\n            }\n\n            o = selectedFormats[i].parentNode;\n            if (!cancel) tempList = util.createElement(command);\n            r = o;\n            rangeArr = {\n              r: r,\n              f: [util.getParentElement(selectedFormats[i], 'LI')]\n            };\n          } else {\n            rangeArr.f.push(util.getParentElement(selectedFormats[i], 'LI'));\n          }\n        }\n\n        if (i === len - 1) {\n          if (detach && util.isListCell(o.parentNode)) {\n            this.plugins.list._detachNested.call(this, rangeArr.f);\n          } else {\n            this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, tempList, false, true);\n          }\n        }\n      }\n    } else {\n      const topElParent = topEl ? topEl.parentNode : topEl;\n      const bottomElParent = bottomEl ? bottomEl.parentNode : bottomEl;\n      topEl = topElParent && !util.isWysiwygDiv(topElParent) && topElParent.nodeName === command ? topElParent : topEl;\n      bottomEl = bottomElParent && !util.isWysiwygDiv(bottomElParent) && bottomElParent.nodeName === command ? bottomElParent : bottomEl;\n      const mergeTop = topEl && topEl.tagName === command;\n      const mergeBottom = bottomEl && bottomEl.tagName === command;\n      let list = mergeTop ? topEl : util.createElement(command);\n      let firstList = null;\n      let lastList = null;\n      let topNumber = null;\n      let bottomNumber = null;\n\n      const passComponent = function (current) {\n        return !this.isComponent(current) && !this.isList(current);\n      }.bind(util);\n\n      for (let i = 0, len = selectedFormats.length, newCell, fTag, isCell, next, originParent, nextParent, parentTag, siblingTag, rangeTag; i < len; i++) {\n        fTag = selectedFormats[i];\n\n        if (fTag.childNodes.length === 0 && !util._isIgnoreNodeChange(fTag)) {\n          util.removeItem(fTag);\n          continue;\n        }\n\n        next = selectedFormats[i + 1];\n        originParent = fTag.parentNode;\n        nextParent = next ? next.parentNode : null;\n        isCell = util.isListCell(fTag);\n        rangeTag = util.isRangeFormatElement(originParent) ? originParent : null;\n        parentTag = isCell && !util.isWysiwygDiv(originParent) ? originParent.parentNode : originParent;\n        siblingTag = isCell && !util.isWysiwygDiv(originParent) ? !next || util.isListCell(parentTag) ? originParent : originParent.nextSibling : fTag.nextSibling;\n        newCell = util.createElement('LI');\n        util.copyFormatAttributes(newCell, fTag);\n\n        if (util.isComponent(fTag)) {\n          const isHR = /^HR$/i.test(fTag.nodeName);\n          if (!isHR) newCell.innerHTML = '<br>';\n          newCell.innerHTML += fTag.outerHTML;\n          if (isHR) newCell.innerHTML += '<br>';\n        } else {\n          const fChildren = fTag.childNodes;\n\n          while (fChildren[0]) {\n            newCell.appendChild(fChildren[0]);\n          }\n        }\n\n        list.appendChild(newCell);\n        if (!next) lastList = list;\n\n        if (!next || parentTag !== nextParent || util.isRangeFormatElement(siblingTag)) {\n          if (!firstList) firstList = list;\n\n          if ((!mergeTop || !next || parentTag !== nextParent) && !(next && util.isList(nextParent) && nextParent === originParent)) {\n            if (list.parentNode !== parentTag) parentTag.insertBefore(list, siblingTag);\n          }\n        }\n\n        util.removeItem(fTag);\n        if (mergeTop && topNumber === null) topNumber = list.children.length - 1;\n\n        if (next && (util.getRangeFormatElement(nextParent, passComponent) !== util.getRangeFormatElement(originParent, passComponent) || util.isList(nextParent) && util.isList(originParent) && util.getElementDepth(nextParent) !== util.getElementDepth(originParent))) {\n          list = util.createElement(command);\n        }\n\n        if (rangeTag && rangeTag.children.length === 0) util.removeItem(rangeTag);\n      }\n\n      if (topNumber) {\n        firstList = firstList.children[topNumber];\n      }\n\n      if (mergeBottom) {\n        bottomNumber = list.children.length - 1;\n        list.innerHTML += bottomEl.innerHTML;\n        lastList = list.children[bottomNumber];\n        util.removeItem(bottomEl);\n      }\n    }\n\n    this.effectNode = null;\n    return originRange;\n  },\n  _detachNested: function (cells) {\n    const first = cells[0];\n    const last = cells[cells.length - 1];\n    const next = last.nextElementSibling;\n    const originList = first.parentNode;\n    const sibling = originList.parentNode.nextElementSibling;\n    const parentNode = originList.parentNode.parentNode;\n\n    for (let c = 0, cLen = cells.length; c < cLen; c++) {\n      parentNode.insertBefore(cells[c], sibling);\n    }\n\n    if (next && originList.children.length > 0) {\n      const newList = originList.cloneNode(false);\n      const children = originList.childNodes;\n      const index = this.util.getPositionIndex(next);\n\n      while (children[index]) {\n        newList.appendChild(children[index]);\n      }\n\n      last.appendChild(newList);\n    }\n\n    if (originList.children.length === 0) this.util.removeItem(originList);\n    this.util.mergeSameTags(parentNode);\n    const edge = this.util.getEdgeChildNodes(first, last);\n    return {\n      cc: first.parentNode,\n      sc: edge.sc,\n      ec: edge.ec\n    };\n  },\n  editInsideList: function (remove, selectedCells) {\n    selectedCells = !selectedCells ? this.getSelectedElements().filter(function (el) {\n      return this.isListCell(el);\n    }.bind(this.util)) : selectedCells;\n    const cellsLen = selectedCells.length;\n\n    if (cellsLen === 0 || !remove && !this.util.isListCell(selectedCells[0].previousElementSibling) && !this.util.isListCell(selectedCells[cellsLen - 1].nextElementSibling)) {\n      return {\n        sc: selectedCells[0],\n        so: 0,\n        ec: selectedCells[cellsLen - 1],\n        eo: 1\n      };\n    }\n\n    let originList = selectedCells[0].parentNode;\n    let lastCell = selectedCells[cellsLen - 1];\n    let range = null;\n\n    if (remove) {\n      if (originList !== lastCell.parentNode && this.util.isList(lastCell.parentNode.parentNode) && lastCell.nextElementSibling) {\n        lastCell = lastCell.nextElementSibling;\n\n        while (lastCell) {\n          selectedCells.push(lastCell);\n          lastCell = lastCell.nextElementSibling;\n        }\n      }\n\n      range = this.plugins.list.editList.call(this, originList.nodeName.toUpperCase(), selectedCells, true);\n    } else {\n      let innerList = this.util.createElement(originList.nodeName);\n      let prev = selectedCells[0].previousElementSibling;\n      let next = lastCell.nextElementSibling;\n      const nodePath = {\n        s: null,\n        e: null,\n        sl: originList,\n        el: originList\n      };\n\n      for (let i = 0, len = cellsLen, c; i < len; i++) {\n        c = selectedCells[i];\n\n        if (c.parentNode !== originList) {\n          this.plugins.list._insiedList.call(this, originList, innerList, prev, next, nodePath);\n\n          originList = c.parentNode;\n          innerList = this.util.createElement(originList.nodeName);\n        }\n\n        prev = c.previousElementSibling;\n        next = c.nextElementSibling;\n        innerList.appendChild(c);\n      }\n\n      this.plugins.list._insiedList.call(this, originList, innerList, prev, next, nodePath);\n\n      const sc = this.util.getNodeFromPath(nodePath.s, nodePath.sl);\n      const ec = this.util.getNodeFromPath(nodePath.e, nodePath.el);\n      range = {\n        sc: sc,\n        so: 0,\n        ec: ec,\n        eo: ec.textContent.length\n      };\n    }\n\n    return range;\n  },\n  _insiedList: function (originList, innerList, prev, next, nodePath) {\n    let insertPrev = false;\n\n    if (prev && innerList.tagName === prev.tagName) {\n      const children = innerList.children;\n\n      while (children[0]) {\n        prev.appendChild(children[0]);\n      }\n\n      innerList = prev;\n      insertPrev = true;\n    }\n\n    if (next && innerList.tagName === next.tagName) {\n      const children = next.children;\n\n      while (children[0]) {\n        innerList.appendChild(children[0]);\n      }\n\n      const temp = next.nextElementSibling;\n      next.parentNode.removeChild(next);\n      next = temp;\n    }\n\n    if (!insertPrev) {\n      if (this.util.isListCell(prev)) {\n        originList = prev;\n        next = null;\n      }\n\n      originList.insertBefore(innerList, next);\n\n      if (!nodePath.s) {\n        nodePath.s = this.util.getNodePath(innerList.firstElementChild.firstChild, originList, null);\n        nodePath.sl = originList;\n      }\n\n      const slPath = originList.contains(nodePath.sl) ? this.util.getNodePath(nodePath.sl, originList) : null;\n      nodePath.e = this.util.getNodePath(innerList.lastElementChild.firstChild, originList, null);\n      nodePath.el = originList;\n      this.util.mergeSameTags(originList, [nodePath.s, nodePath.e, slPath], false);\n      this.util.mergeNestedTags(originList);\n      if (slPath) nodePath.sl = this.util.getNodeFromPath(slPath, originList);\n    }\n\n    return innerList;\n  },\n  pickup: function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    let target = e.target;\n    let command = '';\n\n    while (!command && !/^UL$/i.test(target.tagName)) {\n      command = target.getAttribute('data-command');\n      target = target.parentNode;\n    }\n\n    if (!command) return;\n    const range = this.plugins.list.editList.call(this, command, null, false);\n    if (range) this.setRange(range.sc, range.so, range.ec, range.eo);\n    this.submenuOff(); // history stack\n\n    this.history.push(false);\n  }\n};","map":{"version":3,"sources":["/home/shubham/Projects/Transgazination_Project/TG_UI/node_modules/suneditor/src/plugins/submenu/list.js"],"names":["name","display","add","core","targetElement","context","list","targetButton","_list","currentList","icons","bullets","list_bullets","number","list_number","listDiv","setSubmenu","listUl","querySelector","addEventListener","pickup","bind","querySelectorAll","initMenuTarget","lang","util","createElement","className","innerHTML","toolbar","orderList","unorderList","active","element","button","icon","firstElementChild","removeAttribute","changeElement","removeClass","isList","nodeName","setAttribute","addClass","test","on","listContext","getAttribute","i","len","length","editList","command","selectedCells","detach","range","getRange","selectedFormats","getSelectedElementsAndComponents","getRange_addLine","sortByDepth","firstSel","lastSel","topEl","isListCell","isComponent","previousElementSibling","parentNode","bottomEl","nextElementSibling","originRange","sc","startContainer","so","startOffset","ec","endContainer","eo","endOffset","isRemove","getRangeFormatElement","current","tagName","toUpperCase","j","contains","splice","currentFormat","cancel","rangeArr","tempList","passComponent","r","o","f","getParentElement","plugins","_detachNested","call","detachRangeFormatElement","push","topElParent","bottomElParent","isWysiwygDiv","mergeTop","mergeBottom","firstList","lastList","topNumber","bottomNumber","newCell","fTag","isCell","next","originParent","nextParent","parentTag","siblingTag","rangeTag","childNodes","_isIgnoreNodeChange","removeItem","isRangeFormatElement","nextSibling","copyFormatAttributes","isHR","outerHTML","fChildren","appendChild","insertBefore","children","getElementDepth","effectNode","cells","first","last","originList","sibling","c","cLen","newList","cloneNode","index","getPositionIndex","mergeSameTags","edge","getEdgeChildNodes","cc","editInsideList","remove","getSelectedElements","filter","el","cellsLen","lastCell","innerList","prev","nodePath","s","e","sl","_insiedList","getNodeFromPath","textContent","insertPrev","temp","removeChild","getNodePath","firstChild","slPath","lastElementChild","mergeNestedTags","preventDefault","stopPropagation","target","setRange","submenuOff","history"],"mappings":"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","sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n    name: 'list',\n    display: 'submenu',\n    add: function (core, targetElement) {\n        const context = core.context;\n        context.list = {\n            targetButton: targetElement,\n            _list: null,\n            currentList: '',\n            icons: {\n                bullets: core.icons.list_bullets,\n                number: core.icons.list_number\n            }\n        };\n\n        /** set submenu */\n        let listDiv = this.setSubmenu(core);\n        let listUl = listDiv.querySelector('ul');\n\n        /** add event listeners */\n        listUl.addEventListener('click', this.pickup.bind(core));\n        context.list._list = listUl.querySelectorAll('li button');\n\n        /** append target button menu */\n        core.initMenuTarget(this.name, targetElement, listDiv);\n\n        /** empty memory */\n        listDiv = null, listUl = null;\n    },\n\n    setSubmenu: function (core) {\n        const lang = core.lang;\n        const listDiv = core.util.createElement('DIV');\n\n        listDiv.className = 'se-submenu se-list-layer';\n        listDiv.innerHTML = '' +\n            '<div class=\"se-list-inner\">' +\n                '<ul class=\"se-list-basic\">' +\n                    '<li><button type=\"button\" class=\"se-btn-list se-tooltip\" data-command=\"OL\" title=\"' + lang.toolbar.orderList + '\">' +\n                        core.icons.list_number +\n                    '</button></li>' +\n                    '<li><button type=\"button\" class=\"se-btn-list se-tooltip\" data-command=\"UL\" title=\"' + lang.toolbar.unorderList + '\">' +\n                        core.icons.list_bullets +\n                    '</button></li>' +\n                '</ul>' +\n            '</div>';\n\n        return listDiv;\n    },\n\n     /**\n     * @Override core\n     */\n    active: function (element) {\n        const button = this.context.list.targetButton;\n        const icon = button.firstElementChild;\n        const util = this.util;\n\n        if (!element) {\n            button.removeAttribute('data-focus');\n            util.changeElement(icon, this.context.list.icons.number);\n            util.removeClass(button, 'active');\n        } else if (util.isList(element)) {\n            const nodeName = element.nodeName;\n            button.setAttribute('data-focus', nodeName);\n            util.addClass(button, 'active');\n            if (/UL/i.test(nodeName)) {\n                util.changeElement(icon, this.context.list.icons.bullets);\n            } else {\n                util.changeElement(icon, this.context.list.icons.number);\n            }\n            \n            return true;\n        }\n\n        return false;\n    },\n\n     /**\n     * @Override submenu\n     */\n    on: function () {\n        const listContext = this.context.list;\n        const list = listContext._list;\n        const currentList = listContext.targetButton.getAttribute('data-focus') || '';\n\n        if (currentList !== listContext.currentList) {\n            for (let i = 0, len = list.length; i < len; i++) {\n                if (currentList === list[i].getAttribute('data-command')) {\n                    this.util.addClass(list[i], 'active');\n                } else {\n                    this.util.removeClass(list[i], 'active');\n                }\n            }\n\n            listContext.currentList = currentList;\n        }\n    },\n\n    editList: function (command, selectedCells, detach) {\n        let range = this.getRange();\n        let selectedFormats = !selectedCells ? this.getSelectedElementsAndComponents(false) : selectedCells;\n\n        if (selectedFormats.length === 0) {\n            if (selectedCells) return;\n            range = this.getRange_addLine(range, null);\n            selectedFormats = this.getSelectedElementsAndComponents(false);\n            if (selectedFormats.length === 0) return;\n        }\n        \n        const util = this.util;\n        util.sortByDepth(selectedFormats, true);\n\n        // merge\n        let firstSel = selectedFormats[0];\n        let lastSel = selectedFormats[selectedFormats.length - 1];\n        let topEl = (util.isListCell(firstSel) || util.isComponent(firstSel)) && !firstSel.previousElementSibling ? firstSel.parentNode.previousElementSibling : firstSel.previousElementSibling;\n        let bottomEl = (util.isListCell(lastSel) || util.isComponent(lastSel)) && !lastSel.nextElementSibling ? lastSel.parentNode.nextElementSibling : lastSel.nextElementSibling;\n\n        const originRange = {\n            sc: range.startContainer,\n            so: range.startOffset,\n            ec: range.endContainer,\n            eo: range.endOffset\n        };\n\n        let isRemove = true;\n\n        for (let i = 0, len = selectedFormats.length; i < len; i++) {\n            if (!util.isList(util.getRangeFormatElement(selectedFormats[i], function (current) {\n                return this.getRangeFormatElement(current) && current !== selectedFormats[i];\n            }.bind(util)))) {\n                isRemove = false;\n                break;\n            }\n        }\n\n        if (isRemove && (!topEl || (firstSel.tagName !== topEl.tagName || command !== topEl.tagName.toUpperCase())) && (!bottomEl || (lastSel.tagName !== bottomEl.tagName || command !== bottomEl.tagName.toUpperCase()))) {\n            if (detach) {\n                for (let i = 0, len = selectedFormats.length; i < len; i++) {\n                    for (let j = i - 1; j >= 0; j--) {\n                        if (selectedFormats[j].contains(selectedFormats[i])) {\n                            selectedFormats.splice(i, 1);\n                            i--; len--;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            const currentFormat = util.getRangeFormatElement(firstSel);\n            const cancel = currentFormat && currentFormat.tagName === command;\n            let rangeArr, tempList;\n            const passComponent = function (current) {\n                return !this.isComponent(current);\n            }.bind(util);\n            \n            if (!cancel) tempList = util.createElement(command);\n\n            for (let i = 0, len = selectedFormats.length, r, o; i < len; i++) {\n                o = util.getRangeFormatElement(selectedFormats[i], passComponent);\n                if (!o || !util.isList(o)) continue;\n\n                if (!r) {\n                    r = o;\n                    rangeArr = {r: r, f: [util.getParentElement(selectedFormats[i], 'LI')]};\n                } else {\n                    if (r !== o) {\n                        if (detach && util.isListCell(o.parentNode)) {\n                            this.plugins.list._detachNested.call(this, rangeArr.f);\n                        } else {\n                            this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, tempList, false, true);\n                        }\n                        \n                        o = selectedFormats[i].parentNode;\n                        if (!cancel) tempList = util.createElement(command);\n                        \n                        r = o;\n                        rangeArr = {r: r, f: [util.getParentElement(selectedFormats[i], 'LI')]};\n                    } else {\n                        rangeArr.f.push(util.getParentElement(selectedFormats[i], 'LI'));\n                    }\n                }\n                \n                if (i === len - 1) {\n                    if (detach && util.isListCell(o.parentNode)) {\n                        this.plugins.list._detachNested.call(this, rangeArr.f);\n                    } else {\n                        this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, tempList, false, true);\n                    }\n                }\n            }\n        } else {\n            const topElParent = topEl ? topEl.parentNode : topEl;\n            const bottomElParent = bottomEl ? bottomEl.parentNode : bottomEl;\n            topEl = topElParent && !util.isWysiwygDiv(topElParent) && topElParent.nodeName === command ? topElParent : topEl;\n            bottomEl = bottomElParent && !util.isWysiwygDiv(bottomElParent) && bottomElParent.nodeName === command ? bottomElParent : bottomEl;\n\n            const mergeTop = topEl && topEl.tagName === command;\n            const mergeBottom = bottomEl && bottomEl.tagName === command;\n            \n            let list = mergeTop ? topEl : util.createElement(command);\n            let firstList = null;\n            let lastList = null;\n            let topNumber = null;\n            let bottomNumber = null;\n\n            const passComponent = function (current) {\n                return !this.isComponent(current) && !this.isList(current);\n            }.bind(util);\n            \n            for (let i = 0, len = selectedFormats.length, newCell, fTag, isCell, next, originParent, nextParent, parentTag, siblingTag, rangeTag; i < len; i++) {\n                fTag = selectedFormats[i];\n                if (fTag.childNodes.length === 0 && !util._isIgnoreNodeChange(fTag)) {\n                    util.removeItem(fTag);\n                    continue;\n                }\n                next = selectedFormats[i + 1];\n                originParent = fTag.parentNode;\n                nextParent = next ? next.parentNode : null;\n                isCell = util.isListCell(fTag);\n                rangeTag = util.isRangeFormatElement(originParent) ? originParent : null;\n                parentTag = isCell && !util.isWysiwygDiv(originParent) ? originParent.parentNode : originParent;\n                siblingTag = isCell && !util.isWysiwygDiv(originParent) ? (!next || util.isListCell(parentTag)) ? originParent : originParent.nextSibling : fTag.nextSibling;\n\n                newCell = util.createElement('LI');\n                util.copyFormatAttributes(newCell, fTag);\n                if (util.isComponent(fTag)) {\n                    const isHR = /^HR$/i.test(fTag.nodeName);\n                    if (!isHR) newCell.innerHTML = '<br>';\n                    newCell.innerHTML += fTag.outerHTML;\n                    if (isHR) newCell.innerHTML += '<br>';\n                } else {\n                    const fChildren = fTag.childNodes;\n                    while (fChildren[0]) {\n                        newCell.appendChild(fChildren[0]);\n                    }\n                }\n                list.appendChild(newCell);\n\n                if (!next) lastList = list;\n                if (!next || parentTag !== nextParent || util.isRangeFormatElement(siblingTag)) {\n                    if (!firstList) firstList = list;\n                    if ((!mergeTop || !next || parentTag !== nextParent) && !(next && util.isList(nextParent) && nextParent === originParent)) {\n                        if (list.parentNode !== parentTag) parentTag.insertBefore(list, siblingTag);\n                    }\n                }\n\n                util.removeItem(fTag);\n                if (mergeTop && topNumber === null) topNumber = list.children.length - 1;\n                if (next && (util.getRangeFormatElement(nextParent, passComponent) !== util.getRangeFormatElement(originParent, passComponent) || (util.isList(nextParent) && util.isList(originParent) && util.getElementDepth(nextParent) !== util.getElementDepth(originParent)))) {\n                    list = util.createElement(command);\n                }\n\n                if (rangeTag && rangeTag.children.length === 0) util.removeItem(rangeTag);\n            }\n\n            if (topNumber) {\n                firstList = firstList.children[topNumber];\n            }\n\n            if (mergeBottom) {\n                bottomNumber = list.children.length - 1;\n                list.innerHTML += bottomEl.innerHTML;\n                lastList = list.children[bottomNumber];\n                util.removeItem(bottomEl);\n            }\n        }\n        \n        this.effectNode = null;\n        return originRange;\n    },\n\n    _detachNested: function (cells) {\n        const first = cells[0];\n        const last = cells[cells.length - 1];\n        const next = last.nextElementSibling;\n        const originList = first.parentNode;\n        const sibling = originList.parentNode.nextElementSibling;\n        const parentNode = originList.parentNode.parentNode;\n\n        for (let c = 0, cLen = cells.length; c < cLen; c++) {\n            parentNode.insertBefore(cells[c], sibling);\n        }\n\n        if (next && originList.children.length > 0) {\n            const newList = originList.cloneNode(false);\n            const children = originList.childNodes;\n            const index = this.util.getPositionIndex(next);\n            while (children[index]) {\n                newList.appendChild(children[index]);\n            }\n            last.appendChild(newList);\n        }\n\n        if (originList.children.length === 0) this.util.removeItem(originList);\n        this.util.mergeSameTags(parentNode);\n\n        const edge = this.util.getEdgeChildNodes(first, last);\n\n        return {\n            cc: first.parentNode,\n            sc: edge.sc,\n            ec: edge.ec\n        };\n    },\n\n    editInsideList: function (remove, selectedCells) {\n        selectedCells = !selectedCells ? this.getSelectedElements().filter(function (el) { return this.isListCell(el); }.bind(this.util)) : selectedCells;\n        const cellsLen = selectedCells.length;\n        if (cellsLen === 0 || (!remove && (!this.util.isListCell(selectedCells[0].previousElementSibling) && !this.util.isListCell(selectedCells[cellsLen - 1].nextElementSibling)))) {\n            return {\n                sc: selectedCells[0],\n                so: 0,\n                ec: selectedCells[cellsLen - 1],\n                eo: 1\n            };\n        }\n\n        let originList = selectedCells[0].parentNode;\n        let lastCell = selectedCells[cellsLen - 1];\n        let range = null;\n\n        if (remove) {\n            if (originList !== lastCell.parentNode && this.util.isList(lastCell.parentNode.parentNode) && lastCell.nextElementSibling) {\n                lastCell = lastCell.nextElementSibling;\n                while (lastCell) {\n                    selectedCells.push(lastCell);\n                    lastCell = lastCell.nextElementSibling;\n                }\n            }\n            range = this.plugins.list.editList.call(this, originList.nodeName.toUpperCase(), selectedCells, true);\n        } else {\n            let innerList = this.util.createElement(originList.nodeName);\n            let prev = selectedCells[0].previousElementSibling;\n            let next = lastCell.nextElementSibling;\n            const nodePath = { s: null, e: null, sl: originList, el: originList };\n\n            for (let i = 0, len = cellsLen, c; i < len; i++) {\n                c = selectedCells[i];\n                if (c.parentNode !== originList) {\n                    this.plugins.list._insiedList.call(this, originList, innerList, prev, next, nodePath);\n                    originList = c.parentNode;\n                    innerList = this.util.createElement(originList.nodeName);\n                }\n                \n                prev = c.previousElementSibling;\n                next = c.nextElementSibling;\n                innerList.appendChild(c);\n            }\n            \n            this.plugins.list._insiedList.call(this, originList, innerList, prev, next, nodePath);\n\n            const sc = this.util.getNodeFromPath(nodePath.s, nodePath.sl);\n            const ec = this.util.getNodeFromPath(nodePath.e, nodePath.el);\n            range = {\n                sc: sc,\n                so: 0,\n                ec: ec,\n                eo: ec.textContent.length\n            };\n        }\n\n        return range;\n    },\n\n    _insiedList: function (originList, innerList, prev, next, nodePath) {\n        let insertPrev = false;\n\n        if (prev && innerList.tagName === prev.tagName) {\n            const children = innerList.children;\n            while (children[0]) {\n                prev.appendChild(children[0]);\n            }\n\n            innerList = prev;\n            insertPrev = true;\n        }\n\n        if (next && innerList.tagName === next.tagName) {\n            const children = next.children;\n            while (children[0]) {\n                innerList.appendChild(children[0]);\n            }\n\n            const temp = next.nextElementSibling;\n            next.parentNode.removeChild(next);\n            next = temp;\n        }\n\n        if (!insertPrev) {\n            if (this.util.isListCell(prev)) {\n                originList = prev;\n                next = null;\n            }\n\n            originList.insertBefore(innerList, next);\n\n            if (!nodePath.s) {\n                nodePath.s = this.util.getNodePath(innerList.firstElementChild.firstChild, originList, null);\n                nodePath.sl = originList;\n            }\n\n            const slPath = originList.contains(nodePath.sl) ? this.util.getNodePath(nodePath.sl, originList) : null;\n            nodePath.e = this.util.getNodePath(innerList.lastElementChild.firstChild, originList, null);\n            nodePath.el = originList;\n\n            this.util.mergeSameTags(originList, [nodePath.s, nodePath.e, slPath], false);\n            this.util.mergeNestedTags(originList);\n            if (slPath) nodePath.sl = this.util.getNodeFromPath(slPath, originList);\n        }\n\n        return innerList;\n    },\n\n    pickup: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let target = e.target;\n        let command = '';\n\n        while (!command && !/^UL$/i.test(target.tagName)) {\n            command = target.getAttribute('data-command');\n            target = target.parentNode;\n        }\n\n        if (!command) return;\n\n        const range = this.plugins.list.editList.call(this, command, null, false);\n        if (range) this.setRange(range.sc, range.so, range.ec, range.eo);\n\n        this.submenuOff();\n\n        // history stack\n        this.history.push(false);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}