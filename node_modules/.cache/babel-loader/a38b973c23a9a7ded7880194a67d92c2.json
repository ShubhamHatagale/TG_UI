{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/CustomerTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SelectBox from '../components/Select';\nimport Modal from \"react-bootstrap/Modal\";\nimport { useHistory } from \"react-router-dom\";\nimport { ListContainer, ListItem } from \"../components/styles\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { DragHandle } from \"../components/DragHandle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  _s();\n\n  var s_id = localStorage.getItem('tr_id');\n  const [inputListFinal, setInputListFinal] = useState([{\n    competition: \"\"\n  }]);\n  const [inputList, setInputList] = useState([{\n    competition: \"\"\n  }]);\n  const [inputListFinal2, setInputListFinal2] = useState([{}]);\n  const [Upid, setUpid] = useState(\"\");\n  const [customerList, setCustomerList] = useState([{}]);\n  const history = useHistory(); // let formData = props.AllData;\n  // console.log(\"All Table Data\", formData)\n\n  let rows = [];\n  const [allOptions, setallOptions] = useState([]);\n  const [holdValue, setholdValue] = useState([]);\n  let [completeData, setcompleteData] = useState('');\n  const [smShow, setSmShow] = useState(false);\n  const [total, settotal] = useState(0);\n  useEffect(() => {\n    if (!s_id) {\n      history.push(\"Not_support\");\n    }\n\n    GetData();\n  }, []);\n\n  const GetData = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var requestOptionsget = {\n      method: \"GET\",\n      headers: myHeaders,\n      redirect: \"follow\"\n    };\n    fetch(`http://localhost:9002/masters/customerTab2/${s_id}`, requestOptionsget).then(response => response.json()).then(resData => {\n      console.log(resData.data);\n      setcompleteData(resData.data);\n\n      if (resData.status == 200) {\n        console.log(\"Data Added succesfully\");\n      }\n    }).catch(error => console.log(\"error\", error));\n  };\n\n  const onChange = (newInputValue, value) => {\n    holdValue.push({\n      \"options\": newInputValue,\n      \"id\": value\n    });\n    console.log(\"Pushed data\", holdValue);\n    setallOptions(holdValue);\n  };\n\n  const updateJson = (srcID, desID) => {\n    console.log(srcID);\n    console.log(desID); // var sourceId = parseInt(srcID)\n    // var destId = parseInt(desID)\n    // console.log(sourceId)\n    // console.log(destId)\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      order_by: srcID[1]\n    });\n    var requestOptions = {\n      method: \"PUT\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(`http://localhost:9002/masters/customerTab2Id/${desID[0]}`, requestOptions).then(response => response.json()).then(resData => {\n      console.log(resData); // GetallRecords();\n\n      if (resData.status == 200) {\n        // console.log(\"Values Submitted Succesfully==>\");\n        // setMupdate(true);\n        // setTimeout(() => {\n        //   setMupdate(false);\n        // }, 1000)\n        // props.OnValidate1(true)\n        GetData(); // GetallRecords();\n      }\n    }).catch(error => console.log(\"error\", error));\n    var myHeaders2 = new Headers();\n    myHeaders2.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      order_by: desID[1]\n    });\n    var requestOptions = {\n      method: \"PUT\",\n      headers: myHeaders2,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(`http://localhost:9002/masters/customerTab2Id/` + `${srcID[0]}`, requestOptions).then(response => response.json()).then(resData => {\n      console.log(resData); // GetallRecords();\n\n      if (resData.status == 200) {\n        // console.log(\"Values Submitted Succesfully==>\");\n        // setMupdate(true);\n        // setTimeout(() => {\n        //   setMupdate(false);\n        // }, 1000)\n        // props.OnValidate1(true)\n        GetData(); // GetallRecords();\n      }\n    }).catch(error => console.log(\"error\", error));\n    GetData();\n  }; // handle input change\n\n\n  const handleInputChange = (e, index) => {\n    console.log(e.target.id); // console.log(index)\n    // if (e.target.value > 9) {\n    //   setShowHideErr(false)\n    // } else {\n    //   setShowHideErr(true);\n    //   // alert(Show)\n    // }\n\n    const {\n      name,\n      value,\n      ips\n    } = e.target;\n    const list = [...inputListFinal];\n    console.log(\"Here is the Value---1>\", list);\n    list[index][name] = value;\n    list[index][\"is_display\"] = 0;\n    console.log(list[index][name]);\n    console.log(value + \"val\");\n    setInputListFinal(list); // setcompleteData(list);\n  };\n\n  const handleRemoveClick = index => {\n    const list = [...inputListFinal];\n    setInputListFinal(list);\n    list.splice(index, 1);\n  };\n\n  const handleAddClick = () => {\n    let value = [];\n    let key = [];\n    value.push('competition');\n\n    for (let i = 1; i <= total; i++) {\n      value.push(`value${i}`);\n    }\n\n    for (let i = 1; i <= total; i++) {\n      key.push([`${i}`]);\n    }\n\n    var pack = function (arr) {\n      var length = arr.length,\n          result = {},\n          i;\n\n      for (i = 0; i < length; i++) {\n        result[(i < 10 ? '0' : '') + (i + 1)] = arr[i];\n      }\n\n      return result;\n    };\n\n    const finalobject = pack(value); //{01: \"one\", 02: \"two\", 03: \"three\"}      \n\n    console.log(\"object is\", finalobject);\n    setInputListFinal([...inputListFinal, finalobject]);\n    console.log(inputList);\n  };\n\n  const OnSubmitHandle = () => {\n    for (var i = 0; i < inputListFinal.length; i++) {\n      if (inputListFinal[i].value0 == \"\" || !inputListFinal[i].value0) {\n        // seterrorshow(true);\n        return false;\n      }\n    }\n\n    setCustomerList([...customerList], inputList);\n    let competition = [];\n    let Values = []; // allObject.push(inputList);\n\n    inputList.map((comp, key) => {\n      competition.push(comp);\n    });\n    customerList.map((item, key) => {\n      if (Object.keys(item).length === 3) {\n        Values.push(item);\n\n        for (var key in item) {\n          console.log(\"Key Value is\", item);\n          console.log(\"Key Value is\", item[key]);\n          console.log(\"Key Value is\", allObject);\n        }\n      }\n    });\n    var allObject = [...competition, ...Values];\n    console.log(\"all datra\", allObject);\n    console.log(\"all data inputlist\", inputListFinal);\n    console.log(\"all data inputlist2\", inputListFinal2);\n\n    if (completeData.length === 0) {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        features: inputListFinal,\n        email_id: s_id,\n        created_by: s_id\n      });\n      var requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n      };\n      fetch(`http://localhost:9002/masters/customerTab2`, requestOptions).then(response => response.json()).then(resData => {\n        console.log(resData);\n        props.OnValidate1(true);\n\n        if (resData.status == 200) {\n          console.log(\"Values Submitted Succesfully==>\"); // setMadd(true);\n          // setMadd(false);\n          // setTimeout(() => {\n          //   setMadd(false);\n          // }, 1000)\n\n          props.OnValidate1(true); //             props.OnValidate1(true)\n        }\n      }).catch(error => console.log(\"error\", error));\n    } else {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        features: inputListFinal,\n        email_id: s_id,\n        created_by: s_id\n      });\n      var requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n      };\n      fetch(`http://localhost:9002/masters/customerTab2/${s_id}`, requestOptions).then(response => response.json()).then(resData => {\n        console.log(resData);\n\n        if (resData.status == 200) {\n          // console.log(\"Values Submitted Succesfully==>\");\n          // setMupdate(true);\n          // setTimeout(() => {\n          //   setMupdate(false);\n          // }, 1000)\n          props.OnValidate1(true); // GetallRecords();\n        }\n      }).catch(error => console.log(\"error\", error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row clearfix\",\n    style: {\n      backgroundColor: \"#F3F6F9\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-4 mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body p-5\",\n          style: {\n            overflowX: \"scroll\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: param => {\n              var _param$destination, _param$destination2;\n\n              console.log(param);\n              const srcI = param.source.index.split(\"o\");\n              ;\n              const desI = (_param$destination = param.destination) === null || _param$destination === void 0 ? void 0 : _param$destination.index.split(\"o\");\n              const srcIrecId = param.source.recId;\n              const desIrecId = (_param$destination2 = param.destination) === null || _param$destination2 === void 0 ? void 0 : _param$destination2.recId; // const srcIArray = srcI.split(\"o\");\n              // const desIIArray = desI.split(\"o\");\n              // console.log(srcIArray)\n              // console.log(desIIArray)\n              // console.log(desI)\n\n              if (desI) {\n                completeData.splice(desI, 0, completeData.splice(srcI, 1)[0]); // List.saveList(completeData);\n\n                console.log(completeData);\n                updateJson(srcI, desI);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListContainer, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row clearfix\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Questions appearing in mind Journey\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center ml-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Question appearing in Mind of\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center ml-5\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Who Gives the answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center ml-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Possible Answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"card-inside-title text-center ml-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Choice Made\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"droppable-1\",\n                children: (provided, _) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  children: [inputListFinal.map((x, i) => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: \"draggable-\" + i,\n                        index: x.order_by + \"o\" + x.id,\n                        recId: x.id,\n                        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(ListItem, {\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          style: { ...provided.draggableProps.style,\n                            boxShadow: snapshot.isDragging ? \"0 0 .4rem #666\" : \"none\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"row clearfix flex-nowrap\",\n                            children: [/*#__PURE__*/_jsxDEV(DragHandle, { ...provided.dragHandleProps,\n                              className: \"mr-2\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 407,\n                              columnNumber: 73\n                            }, this), Array.from({\n                              length: 5\n                            }, (item, index) => {\n                              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"col-md-2\",\n                                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"form-group\",\n                                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                      type: \"text\",\n                                      className: \"form-control\",\n                                      placeholder: \"0\",\n                                      maxLength: 200,\n                                      max: 200,\n                                      name: `value${index}`,\n                                      value: x[`value${index}`],\n                                      onChange: e => handleInputChange(e, i),\n                                      required: true\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 414,\n                                      columnNumber: 93\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 413,\n                                    columnNumber: 89\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 412,\n                                  columnNumber: 85\n                                }, this)\n                              }, void 0, false);\n                            }), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"col-md-1\",\n                              children: [inputListFinal.length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                                type: \"button\",\n                                className: \"btn btn-raised rembtn btn-square waves-effect m-l-40\",\n                                onClick: () => handleRemoveClick(i),\n                                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                                  children: \"REMOVE\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 444,\n                                  columnNumber: 85\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 439,\n                                columnNumber: 81\n                              }, this), inputListFinal.length - 1 === i && /*#__PURE__*/_jsxDEV(\"button\", {\n                                type: \"button\",\n                                className: \"btn btn-raised addbtn btn-square waves-effect m-l-40 \",\n                                onClick: handleAddClick,\n                                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                                  children: \"ADD\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 453,\n                                  columnNumber: 85\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 448,\n                                columnNumber: 81\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 437,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 406,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 394,\n                          columnNumber: 65\n                        }, this)\n                      }, x.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false);\n                  }), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn savebtn waves-effect\",\n            onClick: OnSubmitHandle,\n            children: \"SAVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 9\n  }, this) // <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\n  //     <div className=\"row clearfix\">\n  //         <div className=\"col-lg-12 col-md-12 col-sm-12\">\n  //             <div className=\"card p-4 mt-2\">\n  //                 <div className=\"body p-5\">\n  //                     <form>\n  //                         <div class=\"table-responsive\" id=\"Table\">\n  //                             <table class=\"table table-bordered\">\n  //                                 <thead>\n  //                                     <tr>\n  //                                         <th>Questions appearing in mind Journey</th>\n  //                                         <th>Question appearing in Mind of</th>\n  //                                         <th>Who Gives the answer</th>\n  //                                         <th>Possible Answer</th>\n  //                                         <th>Choice Made</th>\n  //                                         <th>Point to be Considered</th>\n  //                                     </tr>\n  //                                 </thead>\n  //                                 {(completeData) ? (\n  //                                     completeData.map((item, key) => {\n  //                                         <tbody>\n  //                                             <td>{item.question_mind_journy}</td>\n  //                                             <td>{item.question_mind_of}</td>\n  //                                             <td>{item.who_give_answer}</td>\n  //                                             <td>{item.possible_answer}</td>\n  //                                             <td>{item.choice_made}</td>\n  //                                             <td><SelectBox onChangeTag={onChange} keyValue={item.point_to_be_considered} keyid={item.id} /></td>\n  //                                         </tbody>\n  //                                     })) : null}\n  //                             </table>\n  //                             <button type=\"button\" class=\"btn finalizebtn btn-square waves-effect\" onClick={HandleSubmit}>FINALIZE CMM</button>\n  //                         </div>\n  //                         <div style={{ marginTop: 30 }}></div>\n  //                     </form>\n  //                     <div style={{ marginTop: 30 }}></div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div>\n  //     <Modal\n  //         size=\"sm\"\n  //         show={smShow}\n  //         onHide={() => setSmShow(false)}\n  //         aria-labelledby=\"example-modal-sizes-title-sm\"\n  //     >\n  //         <Modal.Body >Form Saved Successful</Modal.Body>\n  //     </Modal>\n  // </div>\n  ;\n};\n\n_s(Table, \"cXtAf/PdmmB36pnzk7cJt7bmhdQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/shubham/Projects/Transgazination_Project/TG_UI/src/pages/Parivartan03/CustomerTable.js"],"names":["React","useEffect","useState","SelectBox","Modal","useHistory","ListContainer","ListItem","DragDropContext","Droppable","Draggable","DragHandle","Table","props","s_id","localStorage","getItem","inputListFinal","setInputListFinal","competition","inputList","setInputList","inputListFinal2","setInputListFinal2","Upid","setUpid","customerList","setCustomerList","history","rows","allOptions","setallOptions","holdValue","setholdValue","completeData","setcompleteData","smShow","setSmShow","total","settotal","push","GetData","myHeaders","Headers","append","requestOptionsget","method","headers","redirect","fetch","then","response","json","resData","console","log","data","status","catch","error","onChange","newInputValue","value","updateJson","srcID","desID","raw","JSON","stringify","order_by","requestOptions","body","myHeaders2","handleInputChange","e","index","target","id","name","ips","list","handleRemoveClick","splice","handleAddClick","key","i","pack","arr","length","result","finalobject","OnSubmitHandle","value0","Values","map","comp","item","Object","keys","allObject","features","email_id","created_by","OnValidate1","backgroundColor","overflowX","param","srcI","source","split","desI","destination","srcIrecId","recId","desIrecId","marginTop","provided","_","innerRef","droppableProps","x","snapshot","draggableProps","style","boxShadow","isDragging","dragHandleProps","Array","from","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport SelectBox from '../components/Select'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ListContainer, ListItem } from \"../components/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragHandle } from \"../components/DragHandle\";\r\n\r\nconst Table = props => {\r\n    var s_id = localStorage.getItem('tr_id')\r\n    const [inputListFinal, setInputListFinal] = useState([{ competition: \"\" }]);\r\n    const [inputList, setInputList] = useState([{ competition: \"\" }]);\r\n    const [inputListFinal2, setInputListFinal2] = useState([{}]);\r\n    const [Upid, setUpid] = useState(\"\");\r\n\r\n    const [customerList, setCustomerList] = useState([{}]);\r\n\r\n    const history = useHistory();\r\n\r\n    // let formData = props.AllData;\r\n    // console.log(\"All Table Data\", formData)\r\n    let rows = [];\r\n    const [allOptions, setallOptions] = useState([]);\r\n    const [holdValue, setholdValue] = useState([]);\r\n    let [completeData, setcompleteData] = useState('')\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [total, settotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (!s_id) {\r\n            history.push(\"Not_support\");\r\n        }\r\n\r\n        GetData();\r\n    }, []);\r\n\r\n    const GetData = () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var requestOptionsget = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://localhost:9002/masters/customerTab2/${s_id}`, requestOptionsget)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData.data);\r\n                setcompleteData(resData.data);\r\n                if (resData.status == 200) {\r\n                    console.log(\"Data Added succesfully\")\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error))\r\n    }\r\n\r\n    const onChange = (newInputValue, value) => {\r\n        holdValue.push({ \"options\": newInputValue, \"id\": value })\r\n        console.log(\"Pushed data\", holdValue)\r\n        setallOptions(holdValue)\r\n    }\r\n\r\n\r\n\r\n    const updateJson = (srcID, desID) => {\r\n        console.log(srcID)\r\n        console.log(desID)\r\n\r\n        // var sourceId = parseInt(srcID)\r\n        // var destId = parseInt(desID)\r\n        // console.log(sourceId)\r\n        // console.log(destId)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            order_by: srcID[1],\r\n\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            `http://localhost:9002/masters/customerTab2Id/${desID[0]}`,\r\n            requestOptions\r\n        )\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                // GetallRecords();\r\n\r\n                if (resData.status == 200) {\r\n                    // console.log(\"Values Submitted Succesfully==>\");\r\n                    // setMupdate(true);\r\n                    // setTimeout(() => {\r\n                    //   setMupdate(false);\r\n                    // }, 1000)\r\n                    // props.OnValidate1(true)\r\n\r\n                    GetData();\r\n                    // GetallRecords();\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n        var myHeaders2 = new Headers();\r\n        myHeaders2.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            order_by: desID[1],\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders2,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            `http://localhost:9002/masters/customerTab2Id/` + `${srcID[0]}`,\r\n            requestOptions\r\n        )\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                // GetallRecords();\r\n\r\n                if (resData.status == 200) {\r\n                    // console.log(\"Values Submitted Succesfully==>\");\r\n                    // setMupdate(true);\r\n                    // setTimeout(() => {\r\n                    //   setMupdate(false);\r\n                    // }, 1000)\r\n                    // props.OnValidate1(true)\r\n                    GetData();\r\n\r\n\r\n                    // GetallRecords();\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n        GetData();\r\n\r\n\r\n    }\r\n\r\n    // handle input change\r\n    const handleInputChange = (e, index) => {\r\n        console.log(e.target.id)\r\n        // console.log(index)\r\n\r\n        // if (e.target.value > 9) {\r\n        //   setShowHideErr(false)\r\n        // } else {\r\n        //   setShowHideErr(true);\r\n        //   // alert(Show)\r\n        // }\r\n\r\n        const { name, value, ips } = e.target;\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value---1>\", list);\r\n        list[index][name] = value;\r\n        list[index][\"is_display\"] = 0;\r\n\r\n        console.log(list[index][name]);\r\n        console.log(value + \"val\");\r\n\r\n        setInputListFinal(list);\r\n        // setcompleteData(list);\r\n\r\n    };\r\n\r\n    const handleRemoveClick = (index) => {\r\n        const list = [...inputListFinal];\r\n        setInputListFinal(list);\r\n        list.splice(index, 1);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        let value = [];\r\n        let key = [];\r\n        value.push('competition');\r\n        for (let i = 1; i <= total; i++) {\r\n            value.push(`value${i}`)\r\n        }\r\n        for (let i = 1; i <= total; i++) {\r\n            key.push([`${i}`])\r\n        }\r\n        var pack = function (arr) {\r\n            var length = arr.length,\r\n                result = {},\r\n                i;\r\n            for (i = 0; i < length; i++) {\r\n                result[(i < 10 ? '0' : '') + (i + 1)] = arr[i];\r\n            }\r\n            return result;\r\n        };\r\n        const finalobject = pack(value); //{01: \"one\", 02: \"two\", 03: \"three\"}      \r\n        console.log(\"object is\", finalobject)\r\n        setInputListFinal([...inputListFinal, finalobject]);\r\n        console.log(inputList);\r\n    };\r\n\r\n\r\n    const OnSubmitHandle = () => {\r\n        for (var i = 0; i < inputListFinal.length; i++) {\r\n            if (inputListFinal[i].value0 == \"\" || !inputListFinal[i].value0) {\r\n                // seterrorshow(true);\r\n                return false;\r\n            }\r\n        }\r\n        setCustomerList([...customerList], inputList);\r\n        let competition = [];\r\n        let Values = [];\r\n        // allObject.push(inputList);\r\n        inputList.map((comp, key) => {\r\n            competition.push(comp);\r\n        });\r\n        customerList.map((item, key) => {\r\n            if (Object.keys(item).length === 3) {\r\n                Values.push(item);\r\n                for (var key in item) {\r\n                    console.log(\"Key Value is\", item);\r\n                    console.log(\"Key Value is\", item[key]);\r\n                    console.log(\"Key Value is\", allObject);\r\n                }\r\n            }\r\n        });\r\n\r\n        var allObject = [...competition, ...Values];\r\n        console.log(\"all datra\", allObject);\r\n        console.log(\"all data inputlist\", inputListFinal);\r\n        console.log(\"all data inputlist2\", inputListFinal2);\r\n\r\n        if (completeData.length === 0) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                features: inputListFinal,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(\r\n                `http://localhost:9002/masters/customerTab2`,\r\n                requestOptions\r\n            )\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    props.OnValidate1(true)\r\n\r\n\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully==>\");\r\n                        // setMadd(true);\r\n                        // setMadd(false);\r\n                        // setTimeout(() => {\r\n                        //   setMadd(false);\r\n                        // }, 1000)\r\n                        props.OnValidate1(true)\r\n\r\n\r\n                        //             props.OnValidate1(true)\r\n\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        } else {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                features: inputListFinal,\r\n                email_id: s_id,\r\n                created_by: s_id,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(\r\n                `http://localhost:9002/masters/customerTab2/${s_id}`,\r\n                requestOptions\r\n            )\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        // console.log(\"Values Submitted Succesfully==>\");\r\n                        // setMupdate(true);\r\n                        // setTimeout(() => {\r\n                        //   setMupdate(false);\r\n                        // }, 1000)\r\n                        props.OnValidate1(true)\r\n\r\n\r\n                        // GetallRecords();\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"row clearfix\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div className=\"card p-4 mt-2\">\r\n                    {/* {completeData ? ( */}\r\n                    <div className=\"body p-5\" style={{ overflowX: \"scroll\" }}>\r\n                        <DragDropContext\r\n                            onDragEnd={(param) => {\r\n                                console.log(param)\r\n                                const srcI = param.source.index.split(\"o\");;\r\n                                const desI = param.destination?.index.split(\"o\");\r\n                                const srcIrecId = param.source.recId;\r\n                                const desIrecId = param.destination?.recId;\r\n                                // const srcIArray = srcI.split(\"o\");\r\n                                // const desIIArray = desI.split(\"o\");\r\n                                // console.log(srcIArray)\r\n                                // console.log(desIIArray)\r\n                                // console.log(desI)\r\n\r\n                                if (desI) {\r\n                                    completeData.splice(desI, 0, completeData.splice(srcI, 1)[0]);\r\n                                    // List.saveList(completeData);\r\n                                    console.log(completeData)\r\n                                    updateJson(srcI, desI);\r\n                                }\r\n                            }}\r\n                        >\r\n                            <ListContainer>\r\n\r\n                                <div style={{ marginTop: 20 }}>\r\n                                </div>\r\n                                <div className=\"row clearfix\" >\r\n                                    <div className=\"col-md-2\">\r\n                                        <h2 className=\"card-inside-title text-center\">\r\n                                            <strong>Questions appearing in mind Journey</strong>\r\n                                        </h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <h2 className=\"card-inside-title text-center ml-2\">\r\n                                            <strong>Question appearing in Mind of</strong>\r\n                                        </h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <h2 className=\"card-inside-title text-center ml-5\">\r\n                                            <strong>Who Gives the answer</strong>\r\n                                        </h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <h2 className=\"card-inside-title text-center ml-4\">\r\n                                            <strong>Possible Answer</strong>\r\n                                        </h2>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <h2 className=\"card-inside-title text-center ml-4\">\r\n                                            <strong>Choice Made</strong>\r\n                                        </h2>\r\n                                    </div>\r\n                                    {/* <div className=\"col-md-2\">\r\n                                            <h2 className=\"card-inside-title text-center ml-5\">\r\n                                                <strong>Point to be Considered</strong>\r\n                                            </h2>\r\n                                        </div> */}\r\n                                </div>\r\n\r\n\r\n                                <Droppable droppableId=\"droppable-1\">\r\n                                    {(provided, _) => (\r\n                                        <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                                            {inputListFinal.map((x, i) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <Draggable\r\n                                                            key={x.id}\r\n                                                            draggableId={\"draggable-\" + i}\r\n                                                            index={x.order_by + \"o\" + x.id}\r\n                                                            recId={x.id}\r\n                                                        >\r\n                                                            {(provided, snapshot) => (\r\n                                                                <ListItem\r\n                                                                    ref={provided.innerRef}\r\n                                                                    {...provided.draggableProps}\r\n                                                                    style={{\r\n                                                                        ...provided.draggableProps.style,\r\n                                                                        boxShadow: snapshot.isDragging\r\n                                                                            ? \"0 0 .4rem #666\"\r\n                                                                            : \"none\",\r\n                                                                    }}\r\n                                                                >\r\n\r\n\r\n                                                                    <div className=\"row clearfix flex-nowrap\">\r\n                                                                        <DragHandle {...provided.dragHandleProps} className=\"mr-2\" />\r\n\r\n                                                                        {Array.from({ length: 5 }, (item, index) => {\r\n                                                                            return (\r\n                                                                                <>\r\n                                                                                    <div className=\"col-md-2\">\r\n                                                                                        <div className=\"form-group\">\r\n                                                                                            <input\r\n                                                                                                type=\"text\"\r\n                                                                                                className=\"form-control\"\r\n                                                                                                placeholder=\"0\"\r\n                                                                                                maxLength={200}\r\n                                                                                                max={200}\r\n                                                                                                name={`value${index}`}\r\n                                                                                                value={x[`value${index}`]}\r\n                                                                                                onChange={(e) => handleInputChange(e, i)}\r\n                                                                                                required\r\n                                                                                            />\r\n\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                </>\r\n                                                                            );\r\n                                                                        })\r\n\r\n                                                                        }\r\n\r\n\r\n                                                                        <div className=\"col-md-1\">\r\n                                                                            {inputListFinal.length !== 1 && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn btn-raised rembtn btn-square waves-effect m-l-40\"\r\n                                                                                    onClick={() => handleRemoveClick(i)}\r\n                                                                                >\r\n                                                                                    <strong>REMOVE</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                            {inputListFinal.length - 1 === i && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn btn-raised addbtn btn-square waves-effect m-l-40 \"\r\n                                                                                    onClick={handleAddClick}\r\n                                                                                >\r\n                                                                                    <strong>ADD</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                        {/* <div className=\"col-md-2\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <SelectBox onChangeTag={onChange} keyValue={x.point_to_be_considered} keyid={x.id} />\r\n                                                                            </div>\r\n\r\n                                                                        </div> */}\r\n                                                                    </div>\r\n\r\n\r\n                                                                    {/* <div className=\"col-md-2\">\r\n                                                                            {completeData.length !== 1 && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn btn-raised rembtn btn-square waves-effect m-l-40 \"\r\n                                                                                    onClick={() => handleRemoveClick(i)}\r\n                                                                                >\r\n                                                                                    <strong>REMOVE</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                            {completeData.length - 1 === i && (\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn  addbtn btn-square waves-effect m-l-40 \"\r\n                                                                                    onClick={handleAddClick}\r\n                                                                                >\r\n                                                                                    <strong>ADD</strong>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                        </div> */}\r\n\r\n                                                                </ListItem>\r\n                                                            )}\r\n                                                        </Draggable>\r\n\r\n                                                    </>\r\n                                                );\r\n\r\n                                            })}\r\n                                            {provided.placeholder}\r\n\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n\r\n\r\n                            </ListContainer>\r\n\r\n                        </DragDropContext>\r\n\r\n\r\n\r\n                        <div style={{ marginTop: 30 }}></div>\r\n\r\n                        {/* <button type=\"submit\" class=\"btn savebtn  waves-effect\" onClick={OnSubmitHandle}>SAVE    <i className=\"ml-1 zmdi zmdi-save \" /> </button> */}\r\n                        <button type=\"button\" class=\"btn savebtn waves-effect\"\r\n                            onClick={OnSubmitHandle}>SAVE</button>\r\n\r\n\r\n                    </div>\r\n                    {/* ) : (null)} */}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {/* <Modal\r\n          size=\"sm\"\r\n          show={Mupdate}\r\n          onHide={() => setMupdate(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Update Successful</Modal.Body>\r\n        </Modal>\r\n  \r\n        <Modal\r\n          size=\"sm\"\r\n          show={Mdelete}\r\n          onHide={() => setMdelete(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Row Deleted Successfully</Modal.Body>\r\n        </Modal>\r\n  \r\n        <Modal\r\n          size=\"sm\"\r\n          show={Madd}\r\n          onHide={() => setMadd(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Body >Form Saved Successful</Modal.Body>\r\n        </Modal> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div >\r\n\r\n\r\n\r\n\r\n        // <div className=\"container-fluid\" style={{ backgroundColor: \"#F3F6F9\" }}>\r\n        //     <div className=\"row clearfix\">\r\n        //         <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        //             <div className=\"card p-4 mt-2\">\r\n        //                 <div className=\"body p-5\">\r\n        //                     <form>\r\n        //                         <div class=\"table-responsive\" id=\"Table\">\r\n        //                             <table class=\"table table-bordered\">\r\n        //                                 <thead>\r\n        //                                     <tr>\r\n        //                                         <th>Questions appearing in mind Journey</th>\r\n        //                                         <th>Question appearing in Mind of</th>\r\n        //                                         <th>Who Gives the answer</th>\r\n        //                                         <th>Possible Answer</th>\r\n        //                                         <th>Choice Made</th>\r\n        //                                         <th>Point to be Considered</th>\r\n        //                                     </tr>\r\n        //                                 </thead>\r\n        //                                 {(completeData) ? (\r\n        //                                     completeData.map((item, key) => {\r\n        //                                         <tbody>\r\n        //                                             <td>{item.question_mind_journy}</td>\r\n        //                                             <td>{item.question_mind_of}</td>\r\n        //                                             <td>{item.who_give_answer}</td>\r\n        //                                             <td>{item.possible_answer}</td>\r\n        //                                             <td>{item.choice_made}</td>\r\n        //                                             <td><SelectBox onChangeTag={onChange} keyValue={item.point_to_be_considered} keyid={item.id} /></td>\r\n        //                                         </tbody>\r\n        //                                     })) : null}\r\n        //                             </table>\r\n        //                             <button type=\"button\" class=\"btn finalizebtn btn-square waves-effect\" onClick={HandleSubmit}>FINALIZE CMM</button>\r\n        //                         </div>\r\n        //                         <div style={{ marginTop: 30 }}></div>\r\n        //                     </form>\r\n        //                     <div style={{ marginTop: 30 }}></div>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        //     <Modal\r\n        //         size=\"sm\"\r\n        //         show={smShow}\r\n        //         onHide={() => setSmShow(false)}\r\n        //         aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        //     >\r\n        //         <Modal.Body >Form Saved Successful</Modal.Body>\r\n        //     </Modal>\r\n        // </div>\r\n    )\r\n}\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}